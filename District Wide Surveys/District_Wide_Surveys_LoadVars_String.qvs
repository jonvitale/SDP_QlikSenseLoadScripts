/**
* Loading Variables: District Wide Surveys
* Jonathan Vitale
* Changes:
*
* Version 1.0.5.1:
*   - The counts for the focus questions include non score responses (but not skips)
*
* Reminders:
* - All the let statements will be strings, if you want an actual single quote in the string, use '&chr(39)&'
* - Alternatively, you can use double-quotes in set analyses, but these enable search and wildcards, so be careful.
*   - A '&chr(36)&'(somevar) tells click to substitute whatever is somevar immediately. If you want to prevent this expansion replace '&chr(36)&' with '&chr(36)&'
*   - Similarly '&chr(36)&'(='&chr(36)&'(somevar)) tells Qlik to evaluate the somevar expression, if you do not want this done in the load script replace both '&chr(36)&' with chr(36)
**/

set vVersionNumber = '1.1.0';

///// What is the latest year?
  let vMaxYearEnd = 'Max(YearEnd)';
  let vLastYearEnd = '(Max(YearEnd)-1)';
  let vLastLastYearEnd = '(Max(YearEnd)-2)';
  let vMaxYear = '(max(left(year,4))) & '&chr(39)&chr(45)&chr(39)&' & (max(right(year,4)))';
  let vLastYear = '(max(left(year,4))-1) & '&chr(39)&chr(45)&chr(39)&' & (max(right(year,4))-1)';
  let vLastLastYear = '(max(left(year,4))-2) & '&chr(39)&chr(45)&chr(39)&' & (max(right(year,4))-2)';

///// what is the minimum number of individuals and percent of respondents for an analysis
  let vMinStudents = '25'; 
  let vMinParents = '25';
  let vMinTeachers = '5';
  let vMinPrincipals = '5';
  
  /// for now we are not using the following
  let vMinStudentsPerc = '0'; 
  let vMinParentsPerc = '0';
  let vMinTeachersPerc = '0';
  let vMinPrincipalsPerc = '0';
  
let vCol_Respondent = 'If([Survey] = '&chr(39)&'STUDENT'&chr(39)&', '&chr(39)&'#0B315B'&chr(39)&',
    If([Survey] = '&chr(39)&'PARENT'&chr(39)&', '&chr(39)&'#FFAA30'&chr(39)&',
    If([Survey] = '&chr(39)&'TEACHER'&chr(39)&', '&chr(39)&'#C3DAC2'&chr(39)&',
    If([Survey] = '&chr(39)&'PRINCIPAL'&chr(39)&', '&chr(39)&'#47AAD8'&chr(39)&'))))';



///// Response Rate
 
  //// Numerator - count of respondents
    /// Master Measure: vCount_Responded_Student: How many students (or other) [Responded] to the survey?
      // Note, these don'&chr(39)&'t take sample size into account, but if they do here is a sample of how:
      let vCount_Responded_Student = 'Num(Sum({<[Respondent Group] = {"Student"}, year= >} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Responded_Parent = 'Num(Sum({<[Respondent Group] = {"Parent"}, year= >} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Responded_Teacher = 'Num(Sum({<[Respondent Group] = {"Teacher"}, year= >} [Responded]),'&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Responded_Principal = 'Num(Sum({<[Respondent Group] = {"Principal"}, year= >} [Responded]),'&chr(39)&'#,##0'&chr(39)&')';

      let vCount_Responded_Student_Current = 'Num(Sum({<[Respondent Group] = {"Student"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Responded_Parent_Current = 'Num(Sum({<[Respondent Group] = {"Parent"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Responded_Teacher_Current = 'Num(Sum({<[Respondent Group] = {"Teacher"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]),'&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Responded_Principal_Current = 'Num(Sum({<[Respondent Group] = {"Principal"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]),'&chr(39)&'#,##0'&chr(39)&')';

      let vCount_Responded_Student_Previous = 'Num(Sum({<[Respondent Group] = {"Student"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))} >} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Responded_Parent_Previous = 'Num(Sum({<[Respondent Group] = {"Parent"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))} >} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Responded_Teacher_Previous = 'Num(Sum({<[Respondent Group] = {"Teacher"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))} >} [Responded]),'&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Responded_Principal_Previous = 'Num(Sum({<[Respondent Group] = {"Principal"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))} >} [Responded]),'&chr(39)&'#,##0'&chr(39)&')';


  //// Denominator - total # in respective groups
    /// Master Measure: vCount_Student - the number of students in grades 3 - 12
      let vCount_Student = 'Num(Count({<[Respondent Group] = {"Student"}, year=, InEnrollmentCounter={1}, grade -= {"00", "01", "02"}>} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Parent = 'Num(Count({<[Respondent Group] = {"Parent"}, year=, InEnrollmentCounter={1}>} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Teacher = 'Num(Count({<[Respondent Group] = {"Teacher"}, year=, InEnrollmentCounter={1} >} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Principal = 'Num(Count({<[Respondent Group] = {"Principal"}, year=, InEnrollmentCounter={1}>} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';

      let vCount_Student_Current = 'Num(Count({<[Respondent Group] = {"Student"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, InEnrollmentCounter={1}, grade -= {"00", "01", "02"}>} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Parent_Current = 'Num(Count({<[Respondent Group] = {"Parent"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, InEnrollmentCounter={1}>} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Teacher_Current = 'Num(Count({<[Respondent Group] = {"Teacher"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, InEnrollmentCounter={1} >} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Principal_Current = 'Num(Count({<[Respondent Group] = {"Principal"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, InEnrollmentCounter={1}>} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';

      let vCount_Student_Previous = 'Num(Count({<[Respondent Group] = {"Student"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, InEnrollmentCounter={1}, grade -= {"00", "01", "02"}>} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Parent_Previous = 'Num(Count({<[Respondent Group] = {"Parent"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, InEnrollmentCounter={1}>} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Teacher_Previous = 'Num(Count({<[Respondent Group] = {"Teacher"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, InEnrollmentCounter={1} >} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';
      let vCount_Principal_Previous = 'Num(Count({<[Respondent Group] = {"Principal"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, InEnrollmentCounter={1}>} [Responded]), '&chr(39)&'#,##0'&chr(39)&')';

  //// Rate - Numerator / Denominator for current year
      let vmmRatio_Responded_by_Total_Student_Current = 'Num(Sum({<[Respondent Group] = {"Student"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Student"}, InEnrollmentCounter={1}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))},
          grade -= {"00", "01", "02"}
          >} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';
      let vmmRatio_Responded_by_Total_Parent_Current = 'Num(Sum({<[Respondent Group] = {"Parent"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Parent"}, InEnrollmentCounter={1}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';
      let vmmRatio_Responded_by_Total_Teacher_Current = 'Num(Sum({<[Respondent Group] = {"Teacher"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Teacher"}, InEnrollmentCounter={1},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';
      let vmmRatio_Responded_by_Total_Principal_Current = 'Num(Sum({<[Respondent Group] = {"Principal"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Principal"}, InEnrollmentCounter={1},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';

  //// Year over year
      let vmmRatio_Responded_by_Total_Student_YOY = 'Num(
        Sum({<[Respondent Group] = {"Student"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Student"}, InEnrollmentCounter={1}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))},
          grade -= {"00", "01", "02"}
          >} [Responded])
        -
        Sum({<[Respondent Group] = {"Student"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Student"}, InEnrollmentCounter={1}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))},
          grade -= {"00", "01", "02"}
          >} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';
      let vmmRatio_Responded_by_Total_Parent_YOY = 'Num(
        Sum({<[Respondent Group] = {"Parent"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Parent"}, InEnrollmentCounter={1}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}
          >} [Responded])
        -
        Sum({<[Respondent Group] = {"Parent"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Parent"}, InEnrollmentCounter={1}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}
          >} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';
      let vmmRatio_Responded_by_Total_Teacher_YOY = 'Num(
        Sum({<[Respondent Group] = {"Teacher"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Teacher"}, InEnrollmentCounter={1}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}
          >} [Responded])
        -
        Sum({<[Respondent Group] = {"Teacher"}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Teacher"}, InEnrollmentCounter={1},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}
          >} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';
      let vmmRatio_Responded_by_Total_Principal_YOY = 'Num(
        Sum({<[Respondent Group] = {"Principal"},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Principal"}, InEnrollmentCounter={1}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}
          >} [Responded])
        -
        Sum({<[Respondent Group] = {"Principal"}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))} >} [Responded]) /
        Count({<[Respondent Group] = {"Principal"}, InEnrollmentCounter={1},
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}
          >} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';

  //// Rate - Numerator / Denominator for all years
      let vmmRatio_Responded_by_Total_Student_AllYears = 'Num(Sum({<[Respondent Group] = {"Student"},
          YearEnd = >} [Responded]) /
        Count({<[Respondent Group] = {"Student"}, InEnrollmentCounter={1}, 
           grade -= {"00", "01", "02"}, YearEnd =      
          >} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';
      let vmmRatio_Responded_by_Total_Parent_AllYears = 'Num(Sum({<[Respondent Group] = {"Parent"},
          YearEnd = >} [Responded]) /
        Count({<[Respondent Group] = {"Parent"}, InEnrollmentCounter={1}, 
          YearEnd = >} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';
      let vmmRatio_Responded_by_Total_Teacher_AllYears = 'Num(Sum({<[Respondent Group] = {"Teacher"},
          YearEnd =  >} [Responded]) /
        Count({<[Respondent Group] = {"Teacher"}, InEnrollmentCounter={1},
          YearEnd = >} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';
      let vmmRatio_Responded_by_Total_Principal_AllYears = 'Num(Sum({<[Respondent Group] = {"Principal"},
          YearEnd =  >} [Responded]) /
        Count({<[Respondent Group] = {"Principal"}, InEnrollmentCounter={1},
          YearEnd = >} [Responded]), '&chr(39)&'#.#%'&chr(39)&')';


///// Survey Focus Questions - Percent Most Positive
  //// Question codes
    let vStudentQuestionCode1 = chr(39)&'STUDENT|Q3f'&chr(39);
    let vStudentQuestionCode2 = chr(39)&'STUDENT|Q1b'&chr(39);
    let vStudentQuestionCode3 = chr(39)&'STUDENT|Q3k'&chr(39);
    let vStudentQuestionCode4 = chr(39)&'STUDENT|Q3a'&chr(39);

    let vParentQuestionCode1 = chr(39)&'PARENT|Q7f'&chr(39);
    let vParentQuestionCode2 = chr(39)&'PARENT|Q7a'&chr(39);
    let vParentQuestionCode3 = chr(39)&'PARENT|Q7d'&chr(39);
    let vParentQuestionCode4 = chr(39)&'PARENT|Q3g'&chr(39);

    let vTeacherQuestionCode1 = chr(39)&'TEACHER|Q5a'&chr(39);
    let vTeacherQuestionCode2 = chr(39)&'TEACHER|Q3e'&chr(39);
    let vTeacherQuestionCode3 = chr(39)&'TEACHER|Q3i'&chr(39);
    let vTeacherQuestionCode4 = chr(39)&'TEACHER|Q4e'&chr(39);

  //// Question text (originally I was figuring this out by code, but this will make it faster)
    let vStudentQuestion1 = 'I enjoy being in school.';
    let vStudentQuestion2 = 'My teachers have high expectations for me in school.';
    let vStudentQuestion3 = 'My school is clean.';
    let vStudentQuestion4 = 'I am bullied at school.';
    
    let vParentQuestion1 = 'I am pleased with the quality of education my child'&chr(39)&'s school is providing for my child.';
    let vParentQuestion2 = 'My child'&chr(39)&'s school has high expectations for my child'&chr(39)&'s learning.';
    let vParentQuestion3 = 'Teachers at my child'&chr(39)&'s school encourage my child to work hard.';
    let vParentQuestion4 = 'My child feels safe at school.';
    
    let vTeacherQuestion1 = 'The principal communicates a clear mission for our school.';
    let vTeacherQuestion2 = 'My students are motivated to learn.';
    let vTeacherQuestion3 = 'My students influence decisions regarding learning activities.';
    let vTeacherQuestion4 = 'My students are more focused on grades than learning.';

  //// Question abbreviation
    let vStudentQuestion1Abbr = 'I enjoy being in school';
    let vStudentQuestion2Abbr = 'My teachers have high expectations';
    let vStudentQuestion3Abbr = 'My school is clean';
    let vStudentQuestion4Abbr = 'I am bullied';
    
    let vParentQuestion1Abbr = 'Pleased with quality of education';
    let vParentQuestion2Abbr = 'Teachers have high expectations';
    let vParentQuestion3Abbr = 'Teachers encourage hard work';    
    let vParentQuestion4Abbr = 'My child feels safe';

    let vTeacherQuestion1Abbr = 'Clear mission by principal';
    let vTeacherQuestion2Abbr = 'My students are motivated';
    let vTeacherQuestion3Abbr = 'Students influence decisions';
    let vTeacherQuestion4Abbr = 'Students focus on grades over learning';

  //// Question best "most positive" responses
    let vStudentQuestion1MostPositive = 'Most or all the time';
    let vStudentQuestion2MostPositive = 'Most or all the time';
    let vStudentQuestion3MostPositive = 'Most or all the time';
    let vStudentQuestion4MostPositive = 'Never';
    
    let vParentQuestion1MostPositive = 'Strongly Agree';
    let vParentQuestion2MostPositive = 'Strongly Agree';
    let vParentQuestion3MostPositive = 'Strongly Agree';    
    let vParentQuestion4MostPositive = 'Most or all the time';

    let vTeacherQuestion1MostPositive = 'Strongly Agree';
    let vTeacherQuestion2MostPositive = 'Most or all the time';
    let vTeacherQuestion3MostPositive = 'Most or all the time';
    let vTeacherQuestion4MostPositive = 'Never';

  //// Current Count
    let vCount_Student_Q1_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Student_Q2_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Student_Q3_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Student_Q4_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Parent_Q1_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Parent_Q2_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Parent_Q3_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Parent_Q4_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Teacher_Q1_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Teacher_Q2_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Teacher_Q3_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Teacher_Q4_Current = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
  //// Previous Year Count
    let vCount_Student_Q1_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Student_Q2_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Student_Q3_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Student_Q4_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Parent_Q1_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Parent_Q2_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Parent_Q3_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Parent_Q4_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Teacher_Q1_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Teacher_Q2_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Teacher_Q3_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCount_Teacher_Q4_Previous = 'Count({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';

  //// Current Count of non-skip, not applicable responses (e.g., "I don'&chr(39)&'t know", "Not sure", "not applicable", etc)
    let vCountNA_Student_Q1_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Student_Q2_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Student_Q3_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Student_Q4_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Parent_Q1_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Parent_Q2_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Parent_Q3_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Parent_Q4_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Teacher_Q1_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Teacher_Q2_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Teacher_Q3_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Teacher_Q4_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
  //// Previous Year Count
    let vCountNA_Student_Q1_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Student_Q2_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Student_Q3_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Student_Q4_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Parent_Q1_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Parent_Q2_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Parent_Q3_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Parent_Q4_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Teacher_Q1_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Teacher_Q2_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Teacher_Q3_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';
    let vCountNA_Teacher_Q4_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';

  //// Current Count (Total)
    let vCountTotal_Student_Q1_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Student_Q2_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Student_Q3_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Student_Q4_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Parent_Q1_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Parent_Q2_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Parent_Q3_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Parent_Q4_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Teacher_Q1_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Teacher_Q2_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Teacher_Q3_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Teacher_Q4_Current = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} DisplayScore)';

  //// Previous Year Count (Total)
    let vCountTotal_Student_Q1_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Student_Q2_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Student_Q3_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Student_Q4_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Parent_Q1_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Parent_Q2_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Parent_Q3_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Parent_Q4_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Teacher_Q1_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Teacher_Q2_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Teacher_Q3_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';
    let vCountTotal_Teacher_Q4_Previous = 'Count(Total {<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} DisplayScore)';      

  //// Current Percent Most Positive
    let vPercMP_Student_Q1_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Student_Q1_Current)';
    let vPercMP_Student_Q2_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Student_Q2_Current)';
    let vPercMP_Student_Q3_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Student_Q3_Current)';
    let vPercMP_Student_Q4_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Student_Q4_Current)';
    let vPercMP_Parent_Q1_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Parent_Q1_Current)';
    let vPercMP_Parent_Q2_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Parent_Q2_Current)';
    let vPercMP_Parent_Q3_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Parent_Q3_Current)';
    let vPercMP_Parent_Q4_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Parent_Q4_Current)';
    let vPercMP_Teacher_Q1_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Teacher_Q1_Current)';
    let vPercMP_Teacher_Q2_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Teacher_Q2_Current)';
    let vPercMP_Teacher_Q3_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Teacher_Q3_Current)';
    let vPercMP_Teacher_Q4_Current = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Teacher_Q4_Current)';

  //// Previous Percent Most Positive
    let vPercMP_Student_Q1_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Student_Q1_Previous)';
    let vPercMP_Student_Q2_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Student_Q2_Previous)';
    let vPercMP_Student_Q3_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Student_Q3_Previous)';
    let vPercMP_Student_Q4_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Student_Q4_Previous)';
    let vPercMP_Parent_Q1_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Parent_Q1_Previous)';
    let vPercMP_Parent_Q2_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Parent_Q2_Previous)';
    let vPercMP_Parent_Q3_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Parent_Q3_Previous)';
    let vPercMP_Parent_Q4_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Parent_Q4_Previous)';
    let vPercMP_Teacher_Q1_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Teacher_Q1_Previous)';
    let vPercMP_Teacher_Q2_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Teacher_Q2_Previous)';
    let vPercMP_Teacher_Q3_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Teacher_Q3_Previous)';
    let vPercMP_Teacher_Q4_Previous = 'Sum({<
      [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))'&chr(39)&'}, 
      YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, [Responded]={1}>} IsHighest)
      / '&chr(36)&'(vCount_Teacher_Q4_Previous)';

  
    
  //// Master Measures for KPIs - Current Year
    let vmmPercMP_Student_Q1_Current = 'Num(If('&chr(36)&'(vMinStudents) < '&chr(36)&'(vCount_Student_Q1_Current),
                            '&chr(36)&'(vPercMP_Student_Q1_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Student_Q2_Current = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q2_Current),
                            '&chr(36)&'(vPercMP_Student_Q2_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Student_Q3_Current = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q3_Current),
                            '&chr(36)&'(vPercMP_Student_Q3_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Student_Q4_Current = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q4_Current),
                            '&chr(36)&'(vPercMP_Student_Q4_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Parent_Q1_Current = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q1_Current),
                            '&chr(36)&'(vPercMP_Parent_Q1_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Parent_Q2_Current = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q2_Current),
                            '&chr(36)&'(vPercMP_Parent_Q2_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Parent_Q3_Current = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q3_Current),
                            '&chr(36)&'(vPercMP_Parent_Q3_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Parent_Q4_Current = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q4_Current),
                            '&chr(36)&'(vPercMP_Parent_Q4_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Teacher_Q1_Current = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q1_Current),
                            '&chr(36)&'(vPercMP_Teacher_Q1_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Teacher_Q2_Current = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q2_Current),
                            '&chr(36)&'(vPercMP_Teacher_Q2_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Teacher_Q3_Current = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q3_Current),
                            '&chr(36)&'(vPercMP_Teacher_Q3_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Teacher_Q4_Current = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q4_Current),
                            '&chr(36)&'(vPercMP_Teacher_Q4_Current), Null()), '&chr(39)&'#.#%'&chr(39)&')';
  
  //// Master Measures for KPIs - YOY
    let vmmPercMP_Student_Q1_YOY = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q1_Current) and 
        '&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q1_Previous),
        '&chr(36)&'(vPercMP_Student_Q1_Current) - '&chr(36)&'(vPercMP_Student_Q1_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Student_Q2_YOY = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q2_Current) and 
        '&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q2_Previous),
        '&chr(36)&'(vPercMP_Student_Q2_Current) - '&chr(36)&'(vPercMP_Student_Q2_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Student_Q3_YOY = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q3_Current) and 
        '&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q3_Previous),
        '&chr(36)&'(vPercMP_Student_Q3_Current) - '&chr(36)&'(vPercMP_Student_Q3_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Student_Q4_YOY = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q4_Current) and 
        '&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Q4_Previous),
        '&chr(36)&'(vPercMP_Student_Q4_Current) - '&chr(36)&'(vPercMP_Student_Q4_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Parent_Q1_YOY = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q1_Current) and 
        '&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q1_Previous),
        '&chr(36)&'(vPercMP_Parent_Q1_Current) - '&chr(36)&'(vPercMP_Parent_Q1_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Parent_Q2_YOY = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q2_Current) and 
        '&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q2_Previous),
        '&chr(36)&'(vPercMP_Parent_Q2_Current) - '&chr(36)&'(vPercMP_Parent_Q2_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Parent_Q3_YOY = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q3_Current) and 
        '&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q3_Previous),
        '&chr(36)&'(vPercMP_Parent_Q3_Current) - '&chr(36)&'(vPercMP_Parent_Q3_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Parent_Q4_YOY = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q4_Current) and 
        '&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Q4_Previous),
        '&chr(36)&'(vPercMP_Parent_Q4_Current) - '&chr(36)&'(vPercMP_Parent_Q4_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Teacher_Q1_YOY = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q1_Current) and 
        '&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q1_Previous),
        '&chr(36)&'(vPercMP_Teacher_Q1_Current) - '&chr(36)&'(vPercMP_Teacher_Q1_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Teacher_Q2_YOY = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q2_Current) and 
        '&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q2_Previous),
        '&chr(36)&'(vPercMP_Teacher_Q2_Current) - '&chr(36)&'(vPercMP_Teacher_Q2_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Teacher_Q3_YOY = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q3_Current) and 
        '&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q3_Previous),
        '&chr(36)&'(vPercMP_Teacher_Q3_Current) - '&chr(36)&'(vPercMP_Teacher_Q3_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmPercMP_Teacher_Q4_YOY = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q4_Current) and 
        '&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Q4_Previous),
        '&chr(36)&'(vPercMP_Teacher_Q4_Current) - '&chr(36)&'(vPercMP_Teacher_Q4_Previous), Null()), '&chr(39)&'#.#%'&chr(39)&')';

    //// Master Measures for Bar Charts - Current Year Note: the extra multiplier of 0 is for showing all dimensions in the bar chart)
    let vmmRatio_Student_Q1_Current_Zero = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCountTotal_Student_Q1_Current),
        '&chr(36)&'(vCount_Student_Q1_Current) / '&chr(36)&'(vCountTotal_Student_Q1_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Student_Q2_Current_Zero = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCountTotal_Student_Q2_Current),
        '&chr(36)&'(vCount_Student_Q2_Current) / '&chr(36)&'(vCountTotal_Student_Q2_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Student_Q3_Current_Zero = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCountTotal_Student_Q3_Current),
        '&chr(36)&'(vCount_Student_Q3_Current) / '&chr(36)&'(vCountTotal_Student_Q3_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Student_Q4_Current_Zero = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCountTotal_Student_Q4_Current),
        '&chr(36)&'(vCount_Student_Q4_Current) / '&chr(36)&'(vCountTotal_Student_Q4_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Parent_Q1_Current_Zero = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCountTotal_Parent_Q1_Current),
        '&chr(36)&'(vCount_Parent_Q1_Current) / '&chr(36)&'(vCountTotal_Parent_Q1_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Parent_Q2_Current_Zero = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCountTotal_Parent_Q2_Current),
        '&chr(36)&'(vCount_Parent_Q2_Current) / '&chr(36)&'(vCountTotal_Parent_Q2_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Parent_Q3_Current_Zero = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCountTotal_Parent_Q3_Current),
        '&chr(36)&'(vCount_Parent_Q3_Current) / '&chr(36)&'(vCountTotal_Parent_Q3_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Parent_Q4_Current_Zero = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCountTotal_Parent_Q4_Current),
        '&chr(36)&'(vCount_Parent_Q4_Current) / '&chr(36)&'(vCountTotal_Parent_Q4_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')'; 
    let vmmRatio_Teacher_Q1_Current_Zero = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCountTotal_Teacher_Q1_Current),
        '&chr(36)&'(vCount_Teacher_Q1_Current) / '&chr(36)&'(vCountTotal_Teacher_Q1_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Teacher_Q2_Current_Zero = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCountTotal_Teacher_Q2_Current),
        '&chr(36)&'(vCount_Teacher_Q2_Current) / '&chr(36)&'(vCountTotal_Teacher_Q2_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Teacher_Q3_Current_Zero = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCountTotal_Teacher_Q3_Current),
        '&chr(36)&'(vCount_Teacher_Q3_Current) / '&chr(36)&'(vCountTotal_Teacher_Q3_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Teacher_Q4_Current_Zero = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCountTotal_Teacher_Q4_Current),
        '&chr(36)&'(vCount_Teacher_Q4_Current) / '&chr(36)&'(vCountTotal_Teacher_Q4_Current) 
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore]) 
          >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')'; 

  //// Master Measures for Bar Charts - Previous Year
    let vmmRatio_Student_Q1_Previous_Zero = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCountTotal_Student_Q1_Previous),
        '&chr(36)&'(vCount_Student_Q1_Previous) / '&chr(36)&'(vCountTotal_Student_Q1_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vStudentQuestionCode1))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Student_Q2_Previous_Zero = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCountTotal_Student_Q2_Previous),
        '&chr(36)&'(vCount_Student_Q2_Previous) / '&chr(36)&'(vCountTotal_Student_Q2_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vStudentQuestionCode2))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Student_Q3_Previous_Zero = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCountTotal_Student_Q3_Previous),
        '&chr(36)&'(vCount_Student_Q3_Previous) / '&chr(36)&'(vCountTotal_Student_Q3_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vStudentQuestionCode3))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Student_Q4_Previous_Zero = 'Num(If('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCountTotal_Student_Q4_Previous),
        '&chr(36)&'(vCount_Student_Q4_Previous) / '&chr(36)&'(vCountTotal_Student_Q4_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vStudentQuestionCode4))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Parent_Q1_Previous_Zero = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCountTotal_Parent_Q1_Previous),
        '&chr(36)&'(vCount_Parent_Q1_Previous) / '&chr(36)&'(vCountTotal_Parent_Q1_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vParentQuestionCode1))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Parent_Q2_Previous_Zero = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCountTotal_Parent_Q2_Previous),
        '&chr(36)&'(vCount_Parent_Q2_Previous) / '&chr(36)&'(vCountTotal_Parent_Q2_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vParentQuestionCode2))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Parent_Q3_Previous_Zero = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCountTotal_Parent_Q3_Previous),
        '&chr(36)&'(vCount_Parent_Q3_Previous) / '&chr(36)&'(vCountTotal_Parent_Q3_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vParentQuestionCode3))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Parent_Q4_Previous_Zero = 'Num(If('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCountTotal_Parent_Q4_Previous),
        '&chr(36)&'(vCount_Parent_Q4_Previous) / '&chr(36)&'(vCountTotal_Parent_Q4_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vParentQuestionCode4))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                   >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')'; 
    let vmmRatio_Teacher_Q1_Previous_Zero = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCountTotal_Teacher_Q1_Previous),
        '&chr(36)&'(vCount_Teacher_Q1_Previous) / '&chr(36)&'(vCountTotal_Teacher_Q1_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode1))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Teacher_Q2_Previous_Zero = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCountTotal_Teacher_Q2_Previous),
        '&chr(36)&'(vCount_Teacher_Q2_Previous) / '&chr(36)&'(vCountTotal_Teacher_Q2_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode2))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Teacher_Q3_Previous_Zero = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCountTotal_Teacher_Q3_Previous),
        '&chr(36)&'(vCount_Teacher_Q3_Previous) / '&chr(36)&'(vCountTotal_Teacher_Q3_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode3))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')';
    let vmmRatio_Teacher_Q4_Previous_Zero = 'Num(If('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCountTotal_Teacher_Q4_Previous),
        '&chr(36)&'(vCount_Teacher_Q4_Previous) / '&chr(36)&'(vCountTotal_Teacher_Q4_Previous) 
          + -0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vTeacherQuestionCode4))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore]) 
                    >} [Responded])
        , 0), '&chr(39)&'#.#%'&chr(39)&')'; 

///// Survey Focus Question
    let vFocusQuestionCode = chr(39)&'STUDENT|Q3f'&chr(39);
    let vFocusQuestionCode2 = chr(39)&'PARENT|Q7f'&chr(39);

    let vFocusQuestion = 'Mode({1<[Survey|QuestionCode]={'&chr(36)&'(vFocusQuestionCode)}>}[QuestionText])';
    let vFocusQuestion2 = 'Mode({1<[Survey|QuestionCode]={'&chr(36)&'(vFocusQuestionCode2)}>}[QuestionText])';

    let vFocusQuestionMostPositive = 'Mode({1<[Survey|QuestionCode]={'&chr(36)&'(vFocusQuestionCode)}, IsHighest={1}>}[AnswerText])';
    let vFocusQuestion2MostPositive = 'Mode({1<[Survey|QuestionCode]={'&chr(36)&'(vFocusQuestionCode2)}, IsHighest={1}>}[AnswerText])';
    
    // for reference lines in district and network
    let vCount_FocusQuestion_Current_District = 'Count({1< [Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFocusQuestionCode))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >}  DisplayScore)';
    let vPercMP_FocusQuestion_Current_District = 'Sum({1< [Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFocusQuestionCode))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} >}  IsHighest) / '&chr(36)&'(vCount_FocusQuestion_Current_District)';

    let vCount_FocusQuestion_Current_Network = 'Count({1< [Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFocusQuestionCode))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, learningnetwork = p() >}  DisplayScore)';
    let vPercMP_FocusQuestion_Current_Network = 'Sum({1< [Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFocusQuestionCode))"}, YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, learningnetwork = p()  >}  IsHighest) / '&chr(36)&'(vCount_FocusQuestion_Current_Network)';

///// Survey Focus Respondent Group and Topic
  
  //// Selection vars
    
    /// Basic group and respondent selection
      let vCurrentRespondentSimple = chr(39)&'Student'&chr(39);
      let vCurrentRespondentSimple2 = chr(39)&'Teacher'&chr(39);
      let vCurrentTopic = chr(39)&'School Climate'&chr(39);
      // vCurrentRespondent takes into account if there are any topics for this respondent group
      let vCurrentRespondent = 'If('&chr(36)&'(vCurrentRespondentSimple) = '&chr(39)&'Student'&chr(39)&' and '&chr(36)&'(vCurrentTopic) = '&chr(39)&'Parent/Guardian-Community Ties'&chr(39)&', '&chr(39)&'Parent'&chr(39)&',
        If(('&chr(36)&'(vCurrentRespondentSimple) = '&chr(39)&'Student'&chr(39)&' or '&chr(36)&'(vCurrentRespondentSimple) = '&chr(39)&'Parent'&chr(39)&') and ('&chr(36)&'(vCurrentTopic) = '&chr(39)&'School Leadership'&chr(39)&' or '&chr(36)&'(vCurrentTopic) = '&chr(39)&'Professional Capacity'&chr(39)&'),'&chr(39)&'Teacher'&chr(39)&',
        '&chr(36)&'(vCurrentRespondentSimple)
      ))';
      let vCurrentRespondent2 = 'If('&chr(36)&'(vCurrentRespondentSimple2) = '&chr(39)&'Student'&chr(39)&' and '&chr(36)&'(vCurrentTopic) = '&chr(39)&'Parent/Guardian-Community Ties'&chr(39)&', '&chr(39)&'Parent'&chr(39)&',
        If(('&chr(36)&'(vCurrentRespondentSimple2) = '&chr(39)&'Student'&chr(39)&' or '&chr(36)&'(vCurrentRespondentSimple2) = '&chr(39)&'Parent'&chr(39)&') and ('&chr(36)&'(vCurrentTopic) = '&chr(39)&'School Leadership'&chr(39)&' or '&chr(36)&'(vCurrentTopic) = '&chr(39)&'Professional Capacity'&chr(39)&'),'&chr(39)&'Teacher'&chr(39)&',
        '&chr(36)&'(vCurrentRespondentSimple2)
      ))';
      // vCurrentOrFirstRespondent takes account of any selections the user has made to limit groups
      let vCurrentOrFirstRespondent = 'If(GetSelectedCount([Respondent Group])=0 or WildMatch(GetFieldSelections([Respondent Group]), '&chr(39)&'*'&chr(39)&'& '&chr(36)&'(vCurrentRespondent)&'&chr(39)&'*'&chr(39)&') > 0, 
        '&chr(36)&'(vCurrentRespondent), MinString([Respondent Group]))';
      let vCurrentOrFirstRespondent2 = 'If(GetSelectedCount([Respondent Group])=0 or WildMatch(GetFieldSelections([Respondent Group]), '&chr(39)&'*'&chr(39)&'& '&chr(36)&'(='&chr(36)&'(vCurrentRespondent2))&'&chr(39)&'*'&chr(39)&') > 0, 
        '&chr(36)&'(vCurrentRespondent2), MinString([Respondent Group]))';

    /// First Question available (with sorting at sub-construct level)
      // vFirstSubTopic is the first available subtopic for the given topic and available respondent
      let vFirstSubTopic = 'MinString({<
          [Respondent Group]={'&chr(36)&'(='&chr(36)&'(vCurrentOrFirstRespondent))}, 
          [Construct]={'&chr(36)&'(vCurrentTopic)}, 
          [SubConstruct]={"*"}
          >}[SubConstruct])';
      // vFirstQuestionDisplayed is the first available question for the first available sub-topic
      // Note we replace single quotes with two single quotes, this allows set analysis later on where a single-quote would break the string
      let vFirstQuestionDisplayed = 'If(GetSelectedCount([QuestionText]) > 0,
          Replace(MinString([QuestionText]), Chr(39), Chr(39)&Chr(39)),
          Replace(MinString({<[Respondent Group]={"'&chr(36)&'(='&chr(36)&'(vCurrentOrFirstRespondent))"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, [SubConstruct]={"'&chr(36)&'(='&chr(36)&'(vFirstSubTopic))"}>}[QuestionText]), Chr(39), Chr(39)&Chr(39))
      )';

      // vFirstQuestionKey is the code corresponding to the first displayed question
      let vFirstQuestionKey = 'If(GetSelectedCount([QuestionText]) = 0,
        MinString({<[QuestionText]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionDisplayed))'&chr(39)&'}, [Construct]={'&chr(36)&'(vCurrentTopic)}, [Respondent Group]={"'&chr(36)&'(='&chr(36)&'(vCurrentOrFirstRespondent))"} >}[Survey|SchoolYear|QuestionCode])
        ,
        If( Count({<[QuestionText]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionDisplayed))'&chr(39)&'}, [Respondent Group]={"'&chr(36)&'(='&chr(36)&'(vCurrentOrFirstRespondent))"}>} [Survey|SchoolYear|QuestionCode]) > 0,
          MinString({<[QuestionText]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionDisplayed))'&chr(39)&'}, [Respondent Group]={"'&chr(36)&'(='&chr(36)&'(vCurrentOrFirstRespondent))"}>}[Survey|SchoolYear|QuestionCode]),
           MinString({<[QuestionText]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionDisplayed))'&chr(39)&'}>}[Survey|SchoolYear|QuestionCode])
        )
      )';
      
      // vFirstQuestionm, vFirstQuestionRespondent and vFirstQuestionTopic are derived from the code (for display, not set analysis, use code)
      //let vFirstQuestionCode = 'SubField('&chr(36)&'(vFirstQuestionKey),'&chr(39)&'|'&chr(39)&',1) &'&chr(39)&'|'&chr(39)&'& SubField('&chr(36)&'(vFirstQuestionKey),'&chr(39)&'|'&chr(39)&',3)';
      let vFirstQuestionCode = 'Only({<[Survey|SchoolYear|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionKey))"}>}[Survey|QuestionCode])';
      //let vFirstQuestionYear = 'SubField('&chr(36)&'(vFirstQuestionKey),'&chr(39)&'|'&chr(39)&',2)';
      //let vFirstQuestionYearEnd = 'SubField('&chr(36)&'(vFirstQuestionYear),'&chr(39)&chr(45)&chr(39)&',2)';
      let vFirstQuestion = 'MinString({<[Survey|SchoolYear|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionKey))"}>}[QuestionText])';
      let vFirstQuestionRespondent = 'Only({<[Survey|SchoolYear|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionKey))"}>}[Respondent Group])';
      let vFirstQuestionTopic = 'Only({<[Survey|SchoolYear|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionKey))"}>}[Construct])';
  
      // measures for the graph.
      let vCount_Respondent_Topic_Question_Current = 'Count(total {<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore])';
      
      let vCountNA_Respondent_Topic_Question_Current = 'Sum({<
          [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))'&chr(39)&'}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}>} [Responded])';

      let vRatio_Respondent_Topic_Question_Current = 'Count({<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"},YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore])
          /
          Count(total{<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"},YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore])
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore])>} [Responded])';

      let vmmRatio_Respondent_Topic_Question_Current = 'Num(
            If(
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Student'&chr(39)&' and '&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Current) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Parent'&chr(39)&' and '&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Current) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Teacher'&chr(39)&' and '&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Current) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Principal'&chr(39)&' and '&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Current)
            , 
            '&chr(36)&'(vRatio_Respondent_Topic_Question_Current), 0)
          ,'&chr(39)&'#.#%'&chr(39)&')';

      
      let vCount_Respondent_Topic_Question_Previous = 'Count(total {<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore])';
      
      let vCountNA_Respondent_Topic_Question_Previous = 'Sum({<
          [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))'&chr(39)&'}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}>} [Responded])';


      let vRatio_Respondent_Topic_Question_Previous = 'Count({<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"},YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore])
          /
          Count(total{<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"},YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore])
          - 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore])>} [Responded])';

      let vmmRatio_Respondent_Topic_Question_Previous = 'Num(
            If(
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Student'&chr(39)&' and '&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Previous) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Parent'&chr(39)&' and '&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Previous) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Teacher'&chr(39)&' and '&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Previous) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Principal'&chr(39)&' and '&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Previous)
            , 
            '&chr(36)&'(vRatio_Respondent_Topic_Question_Previous), 0)
          ,'&chr(39)&'#.#%'&chr(39)&')';

      let vCount_Respondent_Topic_Question_Current_Alt = 'Count(total {1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}> * Alt} [DisplayScore])';
      
      let vCountNA_Respondent_Topic_Question_Current_Alt = 'Sum({1<
          [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))'&chr(39)&'}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, Score_NoSkips={">100"}> * Alt} [Responded])'; 

      let vRatio_Respondent_Topic_Question_Current_Alt = 'Count({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"},YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}> * Alt} [DisplayScore])
          /
          Count(total{1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"},YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}> * Alt} [DisplayScore])
          + 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}[DisplayScore])>} [Responded])';

     
      let vmmRatio_Respondent_Topic_Question_Current_Alt = 'Num(
            If(
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Student'&chr(39)&' and '&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Current_Alt) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Parent'&chr(39)&' and '&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Current_Alt) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Teacher'&chr(39)&' and '&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Current_Alt) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Principal'&chr(39)&' and '&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Current_Alt)
            , 
            '&chr(36)&'(vRatio_Respondent_Topic_Question_Current_Alt), 0)
          ,'&chr(39)&'#.#%'&chr(39)&')';

      let vCount_Respondent_Topic_Question_Previous_Alt = 'Count(total {1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}> * Alt} [DisplayScore])';
      
      let vCountNA_Respondent_Topic_Question_Previous_Alt = 'Sum({1<
          [Survey|QuestionCode]={'&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))'&chr(39)&'}, 
          YearEnd = {'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}, Score_NoSkips={">100"}> * Alt} [Responded])'; 


      let vRatio_Respondent_Topic_Question_Previous_Alt = 'Count({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"},YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}> * Alt} [DisplayScore])
          /
          Count(total{1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"},YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}> * Alt} [DisplayScore])
          - 0.000001 * Max({1<[DisplayScore]=P({1<[Survey|QuestionCode]={"'&chr(36)&'(='&chr(36)&'(vFirstQuestionCode))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}[DisplayScore])>} [Responded])';

      let vmmRatio_Respondent_Topic_Question_Previous_Alt = 'Num(
            If(
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Student'&chr(39)&' and '&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Previous_Alt) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Parent'&chr(39)&' and '&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Previous_Alt) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Teacher'&chr(39)&' and '&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Previous_Alt) or
              '&chr(39)&''&chr(36)&'(='&chr(36)&'(vFirstQuestionRespondent))'&chr(39)&' = '&chr(39)&'Principal'&chr(39)&' and '&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Respondent_Topic_Question_Previous_Alt)
            , 
            '&chr(36)&'(vRatio_Respondent_Topic_Question_Previous_Alt), 0)
          ,'&chr(39)&'#.#%'&chr(39)&')';
        
///// Survey Constructs and Subconstruct - Percent Most Positive (down and across method)
  //// Selected Respondent and Selected Topic
     let vCurrentOrFirstRespondent_Min = 'IF('&chr(36)&'(vCurrentOrFirstRespondent) = '&chr(39)&'Student'&chr(39)&', '&chr(36)&'(vMinStudents), IF('&chr(36)&'(vCurrentOrFirstRespondent) = '&chr(39)&'Parent'&chr(39)&', '&chr(36)&'(vMinParents), IF('&chr(36)&'(vCurrentOrFirstRespondent) = '&chr(39)&'Teacher'&chr(39)&', '&chr(36)&'(vMinTeachers), IF('&chr(36)&'(vCurrentOrFirstRespondent) = '&chr(39)&'Principal'&chr(39)&', '&chr(36)&'(vMinPrincipals), 5))))';
     
    /// Current Year
      let vSet_Respondent_Topic_Current = '{<[Respondent Group]={"'&chr(36)&'(='&chr(36)&'(vCurrentOrFirstRespondent))"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
      let vCount_Respondent_Topic_Current = 'Count(distinct '&chr(36)&'(vSet_Respondent_Topic_Current) RespondentID)';
      let vPercMP_Respondent_Topic_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current) NCompleted_7))';
      let vmmPercMP_Respondent_Topic_Current = 'Num(IF('&chr(36)&'(vCurrentOrFirstRespondent_Min) <= '&chr(36)&'(vCount_Respondent_Topic_Current), '&chr(36)&'(vPercMP_Respondent_Topic_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
  
    // Previous Year
      let vSet_Respondent_Topic_Previous = '{<[Respondent Group]={"'&chr(36)&'(='&chr(36)&'(vCurrentOrFirstRespondent))"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
      let vCount_Respondent_Topic_Previous = 'Count(distinct '&chr(36)&'(vSet_Respondent_Topic_Previous) RespondentID)';
      let vPercMP_Respondent_Topic_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Respondent_Topic_Previous) NCompleted_7))';
      let vmmPercMP_Respondent_Topic_Previous = 'Num(IF('&chr(36)&'(vCurrentOrFirstRespondent_Min) <= '&chr(36)&'(vCount_Respondent_Topic_Previous), '&chr(36)&'(vPercMP_Respondent_Topic_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';

    // District and network wide (for reference lines)
      let vSet_Respondent_Topic_Current_District = '{1<[Respondent Group]={"'&chr(36)&'(='&chr(36)&'(vCurrentOrFirstRespondent))"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
      let vCount_Respondent_Topic_Current_District = 'Count(distinct '&chr(36)&'(vSet_Respondent_Topic_Current_District) RespondentID)';
      let vPercMP_Respondent_Topic_Current_District = 'RangeAvg(Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NHighest_1)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NCompleted_1), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NHighest_2)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NCompleted_2), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NHighest_3)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NCompleted_3), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NHighest_4)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NCompleted_4), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NHighest_5)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NCompleted_5), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NHighest_6)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NCompleted_6), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NHighest_7)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_District) NCompleted_7))';
      
      let vSet_Respondent_Topic_Current_Network = '{1<[Respondent Group]={"'&chr(36)&'(='&chr(36)&'(vCurrentOrFirstRespondent))"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}, learningnetwork = p() >}';
      let vCount_Respondent_Topic_Current_Network = 'Count(distinct '&chr(36)&'(vSet_Respondent_Topic_Current_Network) RespondentID)';
      let vPercMP_Respondent_Topic_Current_Network = 'RangeAvg(Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NHighest_1)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NCompleted_1), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NHighest_2)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NCompleted_2), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NHighest_3)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NCompleted_3), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NHighest_4)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NCompleted_4), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NHighest_5)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NCompleted_5), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NHighest_6)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NCompleted_6), Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NHighest_7)/Sum('&chr(36)&'(vSet_Respondent_Topic_Current_Network) NCompleted_7))';

    // YOY
    let vmmPercMP_Respondent_Topic_YOY = 'Num('&chr(36)&'(vmmPercMP_Respondent_Topic_Current) - '&chr(36)&'(vmmPercMP_Respondent_Topic_Previous),  '&chr(39)&'#.#%'&chr(39)&')';

  //// Selected Topic each respondent
    /// Current Year
      let vSet_Student_Topic_Current = '{<[Respondent Group]={"Student"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
      let vCount_Student_Topic_Current = 'Count(distinct '&chr(36)&'(vSet_Student_Topic_Current) RespondentID)';
      let vPercMP_Student_Topic_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Student_Topic_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Student_Topic_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Student_Topic_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Student_Topic_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Topic_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Student_Topic_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Topic_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Student_Topic_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Topic_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Student_Topic_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Topic_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Student_Topic_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Topic_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Student_Topic_Current) NCompleted_7))';
      let vmmPercMP_Student_Topic_Current = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Topic_Current), '&chr(36)&'(vPercMP_Student_Topic_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      let vmmPercMP_Student_Topic_Current_Neg = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Topic_Current), '&chr(36)&'(vPercMP_Student_Topic_Current), -1),'&chr(39)&'#.#%'&chr(39)&')';
      
      let vSet_Parent_Topic_Current = '{<[Respondent Group]={"Parent"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
      let vCount_Parent_Topic_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_Topic_Current) RespondentID)';
      let vPercMP_Parent_Topic_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_Topic_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Parent_Topic_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_Topic_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Parent_Topic_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Topic_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Parent_Topic_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Topic_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Parent_Topic_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Topic_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Parent_Topic_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Topic_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Parent_Topic_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Topic_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Parent_Topic_Current) NCompleted_7))';
      let vmmPercMP_Parent_Topic_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Topic_Current), '&chr(36)&'(vPercMP_Parent_Topic_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      let vmmPercMP_Parent_Topic_Current_Neg = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Topic_Current), '&chr(36)&'(vPercMP_Parent_Topic_Current), -1),'&chr(39)&'#.#%'&chr(39)&')';
      
      let vSet_Teacher_Topic_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
      let vCount_Teacher_Topic_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_Topic_Current) RespondentID)';
      let vPercMP_Teacher_Topic_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_Topic_Current) NCompleted_7))';
      let vmmPercMP_Teacher_Topic_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Topic_Current), '&chr(36)&'(vPercMP_Teacher_Topic_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      let vmmPercMP_Teacher_Topic_Current_Neg = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Topic_Current), '&chr(36)&'(vPercMP_Teacher_Topic_Current), -1),'&chr(39)&'#.#%'&chr(39)&')';
      
      let vSet_Principal_Topic_Current = '{<[Respondent Group]={"Principal"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
      let vCount_Principal_Topic_Current = 'Count(distinct '&chr(36)&'(vSet_Principal_Topic_Current) RespondentID)';
      let vPercMP_Principal_Topic_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_Topic_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_Topic_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_Topic_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_Topic_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Topic_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_Topic_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Topic_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_Topic_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Topic_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_Topic_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Topic_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_Topic_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Topic_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_Topic_Current) NCompleted_7))';
      let vmmPercMP_Principal_Topic_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Topic_Current), '&chr(36)&'(vPercMP_Principal_Topic_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      let vmmPercMP_Principal_Topic_Current_Neg = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Topic_Current), '&chr(36)&'(vPercMP_Principal_Topic_Current), -1),'&chr(39)&'#.#%'&chr(39)&')';

    /// Previous Year
      let vSet_Student_Topic_Previous = '{<[Respondent Group]={"Student"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
      let vCount_Student_Topic_Previous = 'RangeMax(Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_1),Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_7))';
      let vPercMP_Student_Topic_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Student_Topic_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Topic_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Student_Topic_Previous) NCompleted_7))';
      let vmmPercMP_Student_Topic_Previous = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Topic_Previous), '&chr(36)&'(vPercMP_Student_Topic_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      
      let vSet_Parent_Topic_Previous = '{<[Respondent Group]={"Parent"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
      let vCount_Parent_Topic_Previous = 'RangeMax(Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_1),Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_7))';
      let vPercMP_Parent_Topic_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Parent_Topic_Previous) NCompleted_7))';
      let vmmPercMP_Parent_Topic_Previous = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Topic_Previous), '&chr(36)&'(vPercMP_Parent_Topic_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      
      let vSet_Teacher_Topic_Previous = '{<[Respondent Group]={"Teacher"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
      let vCount_Teacher_Topic_Previous = 'RangeMax(Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_1),Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_7))';
      let vPercMP_Teacher_Topic_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_Topic_Previous) NCompleted_7))';
      let vmmPercMP_Teacher_Topic_Previous = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Topic_Previous), '&chr(36)&'(vPercMP_Teacher_Topic_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      
      let vSet_Principal_Topic_Previous = '{<[Respondent Group]={"Principal"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
      let vCount_Principal_Topic_Previous = 'RangeMax(Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_1),Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_7))';
      let vPercMP_Principal_Topic_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_Topic_Previous) NCompleted_7))';
      let vmmPercMP_Principal_Topic_Previous = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Topic_Previous), '&chr(36)&'(vPercMP_Principal_Topic_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';

    /// AllYears
      let vSet_Student_Topic_AllYears = '{<[Respondent Group]={"Student"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd=>}';
      let vCount_Student_Topic_AllYears = 'RangeMax(Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_1),Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_7))';
      let vPercMP_Student_Topic_AllYears = 'RangeAvg(Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NHighest_1)/Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_1), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NHighest_2)/Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NHighest_3)/Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NHighest_4)/Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NHighest_5)/Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NHighest_6)/Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NHighest_7)/Sum('&chr(36)&'(vSet_Student_Topic_AllYears) NCompleted_7))';
      let vmmPercMP_Student_Topic_AllYears = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Topic_AllYears), '&chr(36)&'(vPercMP_Student_Topic_AllYears), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      
      let vSet_Parent_Topic_AllYears = '{<[Respondent Group]={"Parent"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd=>}';
      let vCount_Parent_Topic_AllYears = 'RangeMax(Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_1),Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_7))';
      let vPercMP_Parent_Topic_AllYears = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NHighest_1)/Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NHighest_2)/Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NHighest_3)/Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NHighest_4)/Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NHighest_5)/Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NHighest_6)/Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NHighest_7)/Sum('&chr(36)&'(vSet_Parent_Topic_AllYears) NCompleted_7))';
      let vmmPercMP_Parent_Topic_AllYears = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Topic_AllYears), '&chr(36)&'(vPercMP_Parent_Topic_AllYears), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      
      let vSet_Teacher_Topic_AllYears = '{<[Respondent Group]={"Teacher"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd=>}';
      let vCount_Teacher_Topic_AllYears = 'RangeMax(Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_1),Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_7))';
      let vPercMP_Teacher_Topic_AllYears = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_Topic_AllYears) NCompleted_7))';
      let vmmPercMP_Teacher_Topic_AllYears = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Topic_AllYears), '&chr(36)&'(vPercMP_Teacher_Topic_AllYears), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      
      let vSet_Principal_Topic_AllYears = '{<[Respondent Group]={"Principal"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd=>}';
      let vCount_Principal_Topic_AllYears = 'RangeMax(Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_1),Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_7))';
      let vPercMP_Principal_Topic_AllYears = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_Topic_AllYears) NCompleted_7))';
      let vmmPercMP_Principal_Topic_AllYears = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Topic_AllYears), '&chr(36)&'(vPercMP_Principal_Topic_AllYears), Null()),'&chr(39)&'#.#%'&chr(39)&')';
  
  //// Selected Topic, each respondent
      let vCount_Responded_Student_Topic = 'Num(Sum({<[Respondent Group] = {"Student"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, year= >} [Responded]), '&chr(39)&'#0.#'&chr(39)&')';
      let vCount_Responded_Parent_Topic = 'Num(Sum({<[Respondent Group] = {"Parent"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, year= >} [Responded]), '&chr(39)&'#0.#'&chr(39)&')';
      let vCount_Responded_Teacher_Topic = 'Num(Sum({<[Respondent Group] = {"Teacher"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, year= >} [Responded]),'&chr(39)&'#0.#'&chr(39)&')';
      let vCount_Responded_Principal_Topic = 'Num(Sum({<[Respondent Group] = {"Principal"}, [Construct]={'&chr(36)&'(vCurrentTopic)}, year= >} [Responded]),'&chr(39)&'#0.#'&chr(39)&')';

  //// All Respondents and Selected Topic
    /// Current Year
      let vSet_AnyRespondent_Topic_Current = '{<[Respondent Group]=, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
      let vCount_AnyRespondent_Topic_Current = 'Count(distinct '&chr(36)&'(vSet_AnyRespondent_Topic_Current) RespondentID)';
      let vPercMP_AnyRespondent_Topic_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NHighest_1)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NCompleted_1), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NHighest_2)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NCompleted_2), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NHighest_3)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NCompleted_3), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NHighest_4)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NCompleted_4), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NHighest_5)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NCompleted_5), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NHighest_6)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NCompleted_6), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NHighest_7)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Current) NCompleted_7))';
      let vmmPercMP_AnyRespondent_Topic_Current = 'Num(IF([Respondent Group] = '&chr(39)&'Student'&chr(39)&', IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Topic_Current), '&chr(36)&'(vPercMP_Student_Topic_Current), Null()), IF([Respondent Group] = '&chr(39)&'Parent'&chr(39)&', IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Topic_Current), '&chr(36)&'(vPercMP_Parent_Topic_Current), Null()), IF([Respondent Group] = '&chr(39)&'Teacher'&chr(39)&', IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Topic_Current), '&chr(36)&'(vPercMP_Teacher_Topic_Current), Null()), IF([Respondent Group] = '&chr(39)&'Principal'&chr(39)&', IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Topic_Current), '&chr(36)&'(vPercMP_Principal_Topic_Current), Null()), 5)))),'&chr(39)&'#.#%'&chr(39)&')';
    
    /// Previous Year
      let vSet_AnyRespondent_Topic_Previous = '{<[Respondent Group]=, [Construct]={'&chr(36)&'(vCurrentTopic)}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
      let vCount_AnyRespondent_Topic_Previous = 'RangeMax(Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_1),Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_7))';
      let vPercMP_AnyRespondent_Topic_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_AnyRespondent_Topic_Previous) NCompleted_7))';
      let vmmPercMP_AnyRespondent_Topic_Previous = 'Num(IF([Respondent Group] = '&chr(39)&'Student'&chr(39)&', IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Topic_Previous), '&chr(36)&'(vPercMP_Student_Topic_Previous), Null()), IF([Respondent Group] = '&chr(39)&'Parent'&chr(39)&', IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Topic_Previous), '&chr(36)&'(vPercMP_Parent_Topic_Previous), Null()), IF([Respondent Group] = '&chr(39)&'Teacher'&chr(39)&', IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Topic_Previous), '&chr(36)&'(vPercMP_Teacher_Topic_Previous), Null()), IF([Respondent Group] = '&chr(39)&'Principal'&chr(39)&', IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Topic_Previous), '&chr(36)&'(vPercMP_Principal_Topic_Previous), Null()), 5)))),'&chr(39)&'#.#%'&chr(39)&')';
    
  //// each Topic each respondent  
    /// Current Year   
      // Climate 
        let vSet_Student_Climate_Current = '{<[Respondent Group]={"Student"}, [Construct]={"School Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Student_Climate_Current = 'Count(distinct '&chr(36)&'(vSet_Student_Climate_Current) RespondentID)';
        let vPercMP_Student_Climate_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Student_Climate_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Student_Climate_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Climate_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Climate_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Climate_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Climate_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Climate_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_7))';
        let vmmPercMP_Student_Climate_Current = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Climate_Current), '&chr(36)&'(vPercMP_Student_Climate_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Student_Climate_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Student_Climate_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Student_Climate_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Climate_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Climate_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Climate_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Climate_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Climate_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Student_Climate_Current) NCompleted_7))';
        let vmmAvgScore_Student_Climate_Current = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Climate_Current), '&chr(36)&'(vAvgScore_Student_Climate_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Parent_Climate_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"School Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_Climate_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_Climate_Current) RespondentID)';
        let vPercMP_Parent_Climate_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_Climate_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_Climate_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Climate_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Climate_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Climate_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Climate_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Climate_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_7))';
        let vmmPercMP_Parent_Climate_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Climate_Current), '&chr(36)&'(vPercMP_Parent_Climate_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Parent_Climate_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_Climate_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_Climate_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Climate_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Climate_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Climate_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Climate_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Climate_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Parent_Climate_Current) NCompleted_7))';
        let vmmAvgScore_Parent_Climate_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Climate_Current), '&chr(36)&'(vAvgScore_Parent_Climate_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
      
        let vSet_Teacher_Climate_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_Climate_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_Climate_Current) RespondentID)';
        let vPercMP_Teacher_Climate_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_7))';
        let vmmPercMP_Teacher_Climate_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Climate_Current), '&chr(36)&'(vPercMP_Teacher_Climate_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Teacher_Climate_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_Climate_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Climate_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Teacher_Climate_Current) NCompleted_7))';
        let vmmAvgScore_Teacher_Climate_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Climate_Current), '&chr(36)&'(vAvgScore_Teacher_Climate_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Principal_Climate_Current = '{<[Respondent Group]={"Principal"}, [Construct]={"School Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Principal_Climate_Current = 'Count(distinct '&chr(36)&'(vSet_Principal_Climate_Current) RespondentID)';
        let vPercMP_Principal_Climate_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_Climate_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_Climate_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Climate_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Climate_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Climate_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Climate_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Climate_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_7))';
        let vmmPercMP_Principal_Climate_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Climate_Current), '&chr(36)&'(vPercMP_Principal_Climate_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Principal_Climate_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_Climate_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_Climate_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Climate_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Climate_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Climate_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Climate_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Climate_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Principal_Climate_Current) NCompleted_7))';
        let vmmAvgScore_Principal_Climate_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Climate_Current), '&chr(36)&'(vAvgScore_Principal_Climate_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
      
        // subconstructs for PSSA scatter
        // Student: Belonging, Bullying, Safety/Building Condition
        let vSet_Student_Climate_Belonging_Current = '{<[Respondent Group]={"Student"}, [Construct]={"School Climate"}, [SubConstruct]={"Belonging"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Student_Climate_Belonging_Current = 'Count(distinct '&chr(36)&'(vSet_Student_Climate_Belonging_Current) RespondentID)';
        let vAvgScore_Student_Climate_Belonging_Current = 'Sum('&chr(36)&'(vSet_Student_Climate_Belonging_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Student_Climate_Belonging_Current) CompletedItemCount)';
        let vmmAvgScore_Student_Climate_Belonging_Current = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Climate_Belonging_Current), '&chr(36)&'(vAvgScore_Student_Climate_Belonging_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Student_Climate_Bullying_Current = '{<[Respondent Group]={"Student"}, [Construct]={"School Climate"}, [SubConstruct]={"Bullying"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Student_Climate_Bullying_Current = 'Count(distinct '&chr(36)&'(vSet_Student_Climate_Bullying_Current) RespondentID)';
        let vAvgScore_Student_Climate_Bullying_Current = 'Sum('&chr(36)&'(vSet_Student_Climate_Bullying_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Student_Climate_Bullying_Current) CompletedItemCount)';
        let vmmAvgScore_Student_Climate_Bullying_Current = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Climate_Bullying_Current), '&chr(36)&'(vAvgScore_Student_Climate_Bullying_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Student_Climate_Safety_Current = '{<[Respondent Group]={"Student"}, [Construct]={"School Climate"}, [SubConstruct]={"Safety/Building Condition"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Student_Climate_Safety_Current = 'Count(distinct '&chr(36)&'(vSet_Student_Climate_Safety_Current) RespondentID)';
        let vAvgScore_Student_Climate_Safety_Current = 'Sum('&chr(36)&'(vSet_Student_Climate_Safety_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Student_Climate_Safety_Current) CompletedItemCount)';
        let vmmAvgScore_Student_Climate_Safety_Current = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Climate_Safety_Current), '&chr(36)&'(vAvgScore_Student_Climate_Safety_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        // Parent: Bullying, Safety/Building Condition
        let vSet_Parent_Climate_Bullying_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"School Climate"}, [SubConstruct]={"Bullying"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_Climate_Bullying_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_Climate_Bullying_Current) RespondentID)';
        let vAvgScore_Parent_Climate_Bullying_Current = 'Sum('&chr(36)&'(vSet_Parent_Climate_Bullying_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Parent_Climate_Bullying_Current) CompletedItemCount)';
        let vmmAvgScore_Parent_Climate_Bullying_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Climate_Bullying_Current), '&chr(36)&'(vAvgScore_Parent_Climate_Bullying_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Parent_Climate_Safety_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"School Climate"}, [SubConstruct]={"Safety/Building Condition"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_Climate_Safety_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_Climate_Safety_Current) RespondentID)';
        let vAvgScore_Parent_Climate_Safety_Current = 'Sum('&chr(36)&'(vSet_Parent_Climate_Safety_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Parent_Climate_Safety_Current) CompletedItemCount)';
        let vmmAvgScore_Parent_Climate_Safety_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Climate_Safety_Current), '&chr(36)&'(vAvgScore_Parent_Climate_Safety_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        // Teacher: Student-Centered Learning Climate, Respect, Classroom Level Challenges to Student Learning, School Level Challenges, External Challenges
        let vSet_Teacher_Climate_StudentCenteredLearningClimate_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Climate"}, [SubConstruct]={"Student-Centered Learning Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_Climate_StudentCenteredLearningClimate_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_Climate_StudentCenteredLearningClimate_Current) RespondentID)';
        let vAvgScore_Teacher_Climate_StudentCenteredLearningClimate_Current = 'Sum('&chr(36)&'(vSet_Teacher_Climate_StudentCenteredLearningClimate_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_Climate_StudentCenteredLearningClimate_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_Climate_StudentCenteredLearningClimate_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Climate_StudentCenteredLearningClimate_Current), '&chr(36)&'(vAvgScore_Teacher_Climate_StudentCenteredLearningClimate_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
       
        let vSet_Teacher_Climate_Respect_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Climate"}, [SubConstruct]={"Respect"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_Climate_Respect_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_Climate_Respect_Current) RespondentID)';
        let vAvgScore_Teacher_Climate_Respect_Current = 'Sum('&chr(36)&'(vSet_Teacher_Climate_Respect_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_Climate_Respect_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_Climate_Respect_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Climate_Respect_Current), '&chr(36)&'(vAvgScore_Teacher_Climate_Respect_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
       
        let vSet_Teacher_Climate_ClassroomLevelChallenges_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Climate"}, [SubConstruct]={"Classroom Level Challenges to Student Learning"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_Climate_ClassroomLevelChallenges_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_Climate_ClassroomLevelChallenges_Current) RespondentID)';
        let vAvgScore_Teacher_Climate_ClassroomLevelChallenges_Current = 'Sum('&chr(36)&'(vSet_Teacher_Climate_ClassroomLevelChallenges_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_Climate_ClassroomLevelChallenges_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_Climate_ClassroomLevelChallenges_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Climate_ClassroomLevelChallenges_Current), '&chr(36)&'(vAvgScore_Teacher_Climate_ClassroomLevelChallenges_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
       
        let vSet_Teacher_Climate_SchoolLevelChallenges_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Climate"}, [SubConstruct]={"School Level Challenges to Student Learning"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_Climate_SchoolLevelChallenges_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_Climate_SchoolLevelChallenges_Current) RespondentID)';
        let vAvgScore_Teacher_Climate_SchoolLevelChallenges_Current = 'Sum('&chr(36)&'(vSet_Teacher_Climate_SchoolLevelChallenges_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_Climate_SchoolLevelChallenges_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_Climate_SchoolLevelChallenges_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Climate_SchoolLevelChallenges_Current), '&chr(36)&'(vAvgScore_Teacher_Climate_SchoolLevelChallenges_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';

        let vSet_Teacher_Climate_ExternalChallenges_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Climate"}, [SubConstruct]={"External Challenges to Student Learning"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_Climate_ExternalChallenges_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_Climate_ExternalChallenges_Current) RespondentID)';
        let vAvgScore_Teacher_Climate_ExternalChallenges_Current = 'Sum('&chr(36)&'(vSet_Teacher_Climate_ExternalChallenges_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_Climate_ExternalChallenges_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_Climate_ExternalChallenges_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Climate_ExternalChallenges_Current), '&chr(36)&'(vAvgScore_Teacher_Climate_ExternalChallenges_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
       
      // Instruction 
        let vSet_Student_Instruction_Current = '{<[Respondent Group]={"Student"}, [Construct]={"Instruction"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Student_Instruction_Current = 'Count(distinct '&chr(36)&'(vSet_Student_Instruction_Current) RespondentID)';
        let vPercMP_Student_Instruction_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Student_Instruction_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Student_Instruction_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Instruction_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Instruction_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Instruction_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Instruction_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Instruction_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_7))';
        let vmmPercMP_Student_Instruction_Current = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Instruction_Current), '&chr(36)&'(vPercMP_Student_Instruction_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Student_Instruction_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Student_Instruction_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Student_Instruction_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Instruction_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Instruction_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Instruction_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Instruction_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Instruction_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Student_Instruction_Current) NCompleted_7))';
        let vmmAvgScore_Student_Instruction_Current = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Instruction_Current), '&chr(36)&'(vAvgScore_Student_Instruction_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Parent_Instruction_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"Instruction"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_Instruction_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_Instruction_Current) RespondentID)';
        let vPercMP_Parent_Instruction_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_7))';
        let vmmPercMP_Parent_Instruction_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Instruction_Current), '&chr(36)&'(vPercMP_Parent_Instruction_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Parent_Instruction_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_Instruction_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Instruction_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Parent_Instruction_Current) NCompleted_7))';
        let vmmAvgScore_Parent_Instruction_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Instruction_Current), '&chr(36)&'(vAvgScore_Parent_Instruction_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Teacher_Instruction_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"Instruction"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_Instruction_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_Instruction_Current) RespondentID)';
        let vPercMP_Teacher_Instruction_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_7))';
        let vmmPercMP_Teacher_Instruction_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Instruction_Current), '&chr(36)&'(vPercMP_Teacher_Instruction_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Teacher_Instruction_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Current) NCompleted_7))';
        let vmmAvgScore_Teacher_Instruction_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Instruction_Current), '&chr(36)&'(vAvgScore_Teacher_Instruction_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Principal_Instruction_Current = '{<[Respondent Group]={"Principal"}, [Construct]={"Instruction"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Principal_Instruction_Current = 'Count(distinct '&chr(36)&'(vSet_Principal_Instruction_Current) RespondentID)';
        let vPercMP_Principal_Instruction_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_7))';
        let vmmPercMP_Principal_Instruction_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Instruction_Current), '&chr(36)&'(vPercMP_Principal_Instruction_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Principal_Instruction_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_Instruction_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Instruction_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Principal_Instruction_Current) NCompleted_7))';
        let vmmAvgScore_Principal_Instruction_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Instruction_Current), '&chr(36)&'(vAvgScore_Principal_Instruction_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
           
      // Parent/Guardian Community Ties
        let vSet_Parent_CommunityTies_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"Parent/Guardian-Community Ties"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_CommunityTies_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_CommunityTies_Current) RespondentID)';
        let vPercMP_Parent_CommunityTies_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_7))';
        let vmmPercMP_Parent_CommunityTies_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_CommunityTies_Current), '&chr(36)&'(vPercMP_Parent_CommunityTies_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Parent_CommunityTies_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Current) NCompleted_7))';
        let vmmAvgScore_Parent_CommunityTies_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_CommunityTies_Current), '&chr(36)&'(vAvgScore_Parent_CommunityTies_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Teacher_CommunityTies_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"Parent/Guardian-Community Ties"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_CommunityTies_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_CommunityTies_Current) RespondentID)';
        let vPercMP_Teacher_CommunityTies_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_7))';
        let vmmPercMP_Teacher_CommunityTies_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_CommunityTies_Current), '&chr(36)&'(vPercMP_Teacher_CommunityTies_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Teacher_CommunityTies_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Current) NCompleted_7))';
        let vmmAvgScore_Teacher_CommunityTies_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_CommunityTies_Current), '&chr(36)&'(vAvgScore_Teacher_CommunityTies_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Principal_CommunityTies_Current = '{<[Respondent Group]={"Principal"}, [Construct]={"Parent/Guardian-Community Ties"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Principal_CommunityTies_Current = 'Count(distinct '&chr(36)&'(vSet_Principal_CommunityTies_Current) RespondentID)';
        let vPercMP_Principal_CommunityTies_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_7))';
        let vmmPercMP_Principal_CommunityTies_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_CommunityTies_Current), '&chr(36)&'(vPercMP_Principal_CommunityTies_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Principal_CommunityTies_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Current) NCompleted_7))';
        let vmmAvgScore_Principal_CommunityTies_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_CommunityTies_Current), '&chr(36)&'(vAvgScore_Principal_CommunityTies_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
      
        // subconstructs for PSSA scatter
        // parent: Communication Quality, School Relationship, Communication Frequency, Parent/Guardian Involvement, Parent/Guardian-School Networks 
        let vSet_Parent_CommunityTies_CommunicationQuality_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"Parent/Guardian-Community Ties"}, [SubConstruct]={"Communication Quality"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_CommunityTies_CommunicationQuality_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_CommunityTies_CommunicationQuality_Current) RespondentID)';
        let vAvgScore_Parent_CommunityTies_CommunicationQuality_Current = 'Sum('&chr(36)&'(vSet_Parent_CommunityTies_CommunicationQuality_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_CommunicationQuality_Current) CompletedItemCount)';
        let vmmAvgScore_Parent_CommunityTies_CommunicationQuality_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_CommunityTies_CommunicationQuality_Current), '&chr(36)&'(vAvgScore_Parent_CommunityTies_CommunicationQuality_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Parent_CommunityTies_SchoolRelationship_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"Parent/Guardian-Community Ties"}, [SubConstruct]={"School Relationship"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_CommunityTies_SchoolRelationship_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_CommunityTies_SchoolRelationship_Current) RespondentID)';
        let vAvgScore_Parent_CommunityTies_SchoolRelationship_Current = 'Sum('&chr(36)&'(vSet_Parent_CommunityTies_SchoolRelationship_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_SchoolRelationship_Current) CompletedItemCount)';
        let vmmAvgScore_Parent_CommunityTies_SchoolRelationship_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_CommunityTies_SchoolRelationship_Current), '&chr(36)&'(vAvgScore_Parent_CommunityTies_SchoolRelationship_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Parent_CommunityTies_CommunicationFrequency_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"Parent/Guardian-Community Ties"}, [SubConstruct]={"Communication Frequency"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_CommunityTies_CommunicationFrequency_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_CommunityTies_CommunicationFrequency_Current) RespondentID)';
        let vAvgScore_Parent_CommunityTies_CommunicationFrequency_Current = 'Sum('&chr(36)&'(vSet_Parent_CommunityTies_CommunicationFrequency_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_CommunicationFrequency_Current) CompletedItemCount)';
        let vmmAvgScore_Parent_CommunityTies_CommunicationFrequency_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_CommunityTies_CommunicationFrequency_Current), '&chr(36)&'(vAvgScore_Parent_CommunityTies_CommunicationFrequency_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
       
        let vSet_Parent_CommunityTies_Involvement_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"Parent/Guardian-Community Ties"}, [SubConstruct]={"Parent/Guardian Involvement"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_CommunityTies_Involvement_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_CommunityTies_Involvement_Current) RespondentID)';
        let vAvgScore_Parent_CommunityTies_Involvement_Current = 'Sum('&chr(36)&'(vSet_Parent_CommunityTies_Involvement_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Involvement_Current) CompletedItemCount)';
        let vmmAvgScore_Parent_CommunityTies_Involvement_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_CommunityTies_Involvement_Current), '&chr(36)&'(vAvgScore_Parent_CommunityTies_Involvement_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Parent_CommunityTies_Networks_Current = '{<[Respondent Group]={"Parent"}, [Construct]={"Parent/Guardian-Community Ties"}, [SubConstruct]={"Parent/Guardian-School Networks"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Parent_CommunityTies_Networks_Current = 'Count(distinct '&chr(36)&'(vSet_Parent_CommunityTies_Networks_Current) RespondentID)';
        let vAvgScore_Parent_CommunityTies_Networks_Current = 'Sum('&chr(36)&'(vSet_Parent_CommunityTies_Networks_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Networks_Current) CompletedItemCount)';
        let vmmAvgScore_Parent_CommunityTies_Networks_Current = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_CommunityTies_Networks_Current), '&chr(36)&'(vAvgScore_Parent_CommunityTies_Networks_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
       
      // Professional Capacity
        let vSet_Teacher_ProfessionalCapacity_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"Professional Capacity"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_ProfessionalCapacity_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) RespondentID)';
        let vPercMP_Teacher_ProfessionalCapacity_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_7))';
        let vmmPercMP_Teacher_ProfessionalCapacity_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_ProfessionalCapacity_Current), '&chr(36)&'(vPercMP_Teacher_ProfessionalCapacity_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Teacher_ProfessionalCapacity_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_7))';
        let vmmAvgScore_Teacher_ProfessionalCapacity_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_ProfessionalCapacity_Current), '&chr(36)&'(vAvgScore_Teacher_ProfessionalCapacity_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Principal_ProfessionalCapacity_Current = '{<[Respondent Group]={"Principal"}, [Construct]={"Professional Capacity"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Principal_ProfessionalCapacity_Current = 'Count(distinct '&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) RespondentID)';
        let vPercMP_Principal_ProfessionalCapacity_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_7))';
        let vmmPercMP_Principal_ProfessionalCapacity_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_ProfessionalCapacity_Current), '&chr(36)&'(vPercMP_Principal_ProfessionalCapacity_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Principal_ProfessionalCapacity_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Current) NCompleted_7))';
        let vmmAvgScore_Principal_ProfessionalCapacity_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_ProfessionalCapacity_Current), '&chr(36)&'(vAvgScore_Principal_ProfessionalCapacity_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
    
        // subconstructs for PSSA scatter
        // Teacher: Innovation, Quality of Professional Development: Delivery, Quality of Professional Development: Consistency
        let vSet_Teacher_ProfessionalCapacity_Innovation_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"Professional Capacity"}, [SubConstruct]={"Innovation"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_ProfessionalCapacity_Innovation_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Innovation_Current) RespondentID)';
        let vAvgScore_Teacher_ProfessionalCapacity_Innovation_Current = 'Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Innovation_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Innovation_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_ProfessionalCapacity_Innovation_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_ProfessionalCapacity_Innovation_Current), '&chr(36)&'(vAvgScore_Teacher_ProfessionalCapacity_Innovation_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"Professional Capacity"}, [SubConstruct]={"Quality of Professional Development: Delivery"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current) RespondentID)';
        let vAvgScore_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current = 'Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current), '&chr(36)&'(vAvgScore_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"Professional Capacity"}, [SubConstruct]={"Quality of Professional Development: Consistency"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current) RespondentID)';
        let vAvgScore_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current = 'Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current), '&chr(36)&'(vAvgScore_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';

      // School Leadership
        let vSet_Teacher_SchoolLeadership_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Leadership"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_SchoolLeadership_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) RespondentID)';
        let vPercMP_Teacher_SchoolLeadership_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_7))';
        let vmmPercMP_Teacher_SchoolLeadership_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_SchoolLeadership_Current), '&chr(36)&'(vPercMP_Teacher_SchoolLeadership_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Teacher_SchoolLeadership_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Current) NCompleted_7))';
        let vmmAvgScore_Teacher_SchoolLeadership_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_SchoolLeadership_Current), '&chr(36)&'(vAvgScore_Teacher_SchoolLeadership_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
       
        let vSet_Principal_SchoolLeadership_Current = '{<[Respondent Group]={"Principal"}, [Construct]={"School Leadership"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Principal_SchoolLeadership_Current = 'Count(distinct '&chr(36)&'(vSet_Principal_SchoolLeadership_Current) RespondentID)';
        let vPercMP_Principal_SchoolLeadership_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_7))';
        let vmmPercMP_Principal_SchoolLeadership_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_SchoolLeadership_Current), '&chr(36)&'(vPercMP_Principal_SchoolLeadership_Current), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        let vAvgScore_Principal_SchoolLeadership_Current = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_1)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_2)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_3)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_4)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_5)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_6)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_7)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Current) NCompleted_7))';
        let vmmAvgScore_Principal_SchoolLeadership_Current = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_SchoolLeadership_Current), '&chr(36)&'(vAvgScore_Principal_SchoolLeadership_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
              
        // subconstructs for PSSA scatter
        // Teacher: Expectations & Feedback, Inclusive Leadership 
        let vSet_Teacher_SchoolLeadership_ExpectationsFeedback_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Leadership"}, [SubConstruct]={"Expectations & Feedback"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_SchoolLeadership_ExpectationsFeedback_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_SchoolLeadership_ExpectationsFeedback_Current) RespondentID)';
        let vAvgScore_Teacher_SchoolLeadership_ExpectationsFeedback_Current = 'Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_ExpectationsFeedback_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_ExpectationsFeedback_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_SchoolLeadership_ExpectationsFeedback_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_SchoolLeadership_ExpectationsFeedback_Current), '&chr(36)&'(vAvgScore_Teacher_SchoolLeadership_ExpectationsFeedback_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
        let vSet_Teacher_SchoolLeadership_InclusiveLeadership_Current = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Leadership"}, [SubConstruct]={"Inclusive Leadership"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))}>}';
        let vCount_Teacher_SchoolLeadership_InclusiveLeadership_Current = 'Count(distinct '&chr(36)&'(vSet_Teacher_SchoolLeadership_InclusiveLeadership_Current) RespondentID)';
        let vAvgScore_Teacher_SchoolLeadership_InclusiveLeadership_Current = 'Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_InclusiveLeadership_Current) sumSurveyScaledScore)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_InclusiveLeadership_Current) CompletedItemCount)';
        let vmmAvgScore_Teacher_SchoolLeadership_InclusiveLeadership_Current = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_SchoolLeadership_InclusiveLeadership_Current), '&chr(36)&'(vAvgScore_Teacher_SchoolLeadership_InclusiveLeadership_Current), Null()),'&chr(39)&'##0.##'&chr(39)&')';
        
          
    /// Previous Year (don'&chr(39)&'t have AvgScore because we'&chr(39)&'re not using it at the moment)  
      // Climate 
        let vSet_Student_Climate_Previous = '{<[Respondent Group]={"Student"}, [Construct]={"School Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Student_Climate_Previous = 'RangeMax(Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_1),Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_7))';
        let vPercMP_Student_Climate_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Student_Climate_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Climate_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Student_Climate_Previous) NCompleted_7))';
        let vmmPercMP_Student_Climate_Previous = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Climate_Previous), '&chr(36)&'(vPercMP_Student_Climate_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Parent_Climate_Previous = '{<[Respondent Group]={"Parent"}, [Construct]={"School Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Parent_Climate_Previous = 'RangeMax(Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_1),Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_7))';
        let vPercMP_Parent_Climate_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Parent_Climate_Previous) NCompleted_7))';
        let vmmPercMP_Parent_Climate_Previous = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Climate_Previous), '&chr(36)&'(vPercMP_Parent_Climate_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Teacher_Climate_Previous = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Teacher_Climate_Previous = 'Count(distinct '&chr(36)&'(vSet_Teacher_Climate_Previous) RespondentID)';
        let vPercMP_Teacher_Climate_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_Climate_Previous) NCompleted_7))';
        let vmmPercMP_Teacher_Climate_Previous = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Climate_Previous), '&chr(36)&'(vPercMP_Teacher_Climate_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Principal_Climate_Previous = '{<[Respondent Group]={"Principal"}, [Construct]={"School Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Principal_Climate_Previous = 'Count(distinct '&chr(36)&'(vSet_Principal_Climate_Previous) RespondentID)';
        let vPercMP_Principal_Climate_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_Climate_Previous) NCompleted_7))';
        let vmmPercMP_Principal_Climate_Previous = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Climate_Previous), '&chr(36)&'(vPercMP_Principal_Climate_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      
      // Instruction 
        let vSet_Student_Instruction_Previous = '{<[Respondent Group]={"Student"}, [Construct]={"Instruction"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Student_Instruction_Previous = 'Count(distinct '&chr(36)&'(vSet_Student_Instruction_Previous) RespondentID)';
        let vPercMP_Student_Instruction_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Student_Instruction_Previous) NCompleted_7))';
        let vmmPercMP_Student_Instruction_Previous = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCount_Student_Instruction_Previous), '&chr(36)&'(vPercMP_Student_Instruction_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Parent_Instruction_Previous = '{<[Respondent Group]={"Parent"}, [Construct]={"Instruction"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Parent_Instruction_Previous = 'Count(distinct '&chr(36)&'(vSet_Parent_Instruction_Previous) RespondentID)';
        let vPercMP_Parent_Instruction_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Parent_Instruction_Previous) NCompleted_7))';
        let vmmPercMP_Parent_Instruction_Previous = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_Instruction_Previous), '&chr(36)&'(vPercMP_Parent_Instruction_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Teacher_Instruction_Previous = '{<[Respondent Group]={"Teacher"}, [Construct]={"Instruction"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Teacher_Instruction_Previous = 'Count(distinct '&chr(36)&'(vSet_Teacher_Instruction_Previous) RespondentID)';
        let vPercMP_Teacher_Instruction_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_Instruction_Previous) NCompleted_7))';
        let vmmPercMP_Teacher_Instruction_Previous = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_Instruction_Previous), '&chr(36)&'(vPercMP_Teacher_Instruction_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Principal_Instruction_Previous = '{<[Respondent Group]={"Principal"}, [Construct]={"Instruction"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Principal_Instruction_Previous = 'Count(distinct '&chr(36)&'(vSet_Principal_Instruction_Previous) RespondentID)';
        let vPercMP_Principal_Instruction_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_Instruction_Previous) NCompleted_7))';
        let vmmPercMP_Principal_Instruction_Previous = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_Instruction_Previous), '&chr(36)&'(vPercMP_Principal_Instruction_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
           
      // Parent/Guardian Community Ties
        let vSet_Parent_CommunityTies_Previous = '{<[Respondent Group]={"Parent"}, [Construct]={"Parent/Guardian-Community Ties"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Parent_CommunityTies_Previous = 'Count(distinct '&chr(36)&'(vSet_Parent_CommunityTies_Previous) RespondentID)';
        let vPercMP_Parent_CommunityTies_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Parent_CommunityTies_Previous) NCompleted_7))';
        let vmmPercMP_Parent_CommunityTies_Previous = 'Num(IF('&chr(36)&'(vMinParents) <= '&chr(36)&'(vCount_Parent_CommunityTies_Previous), '&chr(36)&'(vPercMP_Parent_CommunityTies_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Teacher_CommunityTies_Previous = '{<[Respondent Group]={"Teacher"}, [Construct]={"Parent/Guardian-Community Ties"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Teacher_CommunityTies_Previous = 'Count(distinct '&chr(36)&'(vSet_Teacher_CommunityTies_Previous) RespondentID)';
        let vPercMP_Teacher_CommunityTies_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_CommunityTies_Previous) NCompleted_7))';
        let vmmPercMP_Teacher_CommunityTies_Previous = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_CommunityTies_Previous), '&chr(36)&'(vPercMP_Teacher_CommunityTies_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Principal_CommunityTies_Previous = '{<[Respondent Group]={"Principal"}, [Construct]={"Parent/Guardian-Community Ties"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Principal_CommunityTies_Previous = 'Count(distinct '&chr(36)&'(vSet_Principal_CommunityTies_Previous) RespondentID)';
        let vPercMP_Principal_CommunityTies_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_CommunityTies_Previous) NCompleted_7))';
        let vmmPercMP_Principal_CommunityTies_Previous = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_CommunityTies_Previous), '&chr(36)&'(vPercMP_Principal_CommunityTies_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
      
      // Professional Capacity
        let vSet_Teacher_ProfessionalCapacity_Previous = '{<[Respondent Group]={"Teacher"}, [Construct]={"Professional Capacity"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Teacher_ProfessionalCapacity_Previous = 'Count(distinct '&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) RespondentID)';
        let vPercMP_Teacher_ProfessionalCapacity_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_7))';
        let vmmPercMP_Teacher_ProfessionalCapacity_Previous = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_ProfessionalCapacity_Previous), '&chr(36)&'(vPercMP_Teacher_ProfessionalCapacity_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Principal_ProfessionalCapacity_Previous = '{<[Respondent Group]={"Principal"}, [Construct]={"Professional Capacity"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Principal_ProfessionalCapacity_Previous = 'Count(distinct '&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) RespondentID)';
        let vPercMP_Principal_ProfessionalCapacity_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_7))';
        let vmmPercMP_Principal_ProfessionalCapacity_Previous = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_ProfessionalCapacity_Previous), '&chr(36)&'(vPercMP_Principal_ProfessionalCapacity_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
    
      // School Leadership
        let vSet_Teacher_SchoolLeadership_Previous = '{<[Respondent Group]={"Teacher"}, [Construct]={"School Leadership"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Teacher_SchoolLeadership_Previous = 'Count(distinct '&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) RespondentID)';
        let vPercMP_Teacher_SchoolLeadership_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Teacher_SchoolLeadership_Previous) NCompleted_7))';
        let vmmPercMP_Teacher_SchoolLeadership_Previous = 'Num(IF('&chr(36)&'(vMinTeachers) <= '&chr(36)&'(vCount_Teacher_SchoolLeadership_Previous), '&chr(36)&'(vPercMP_Teacher_SchoolLeadership_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
        
        let vSet_Principal_SchoolLeadership_Previous = '{<[Respondent Group]={"Principal"}, [Construct]={"School Leadership"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vLastYearEnd))}>}';
        let vCount_Principal_SchoolLeadership_Previous = 'Count(distinct '&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) RespondentID)';
        let vPercMP_Principal_SchoolLeadership_Previous = 'RangeAvg(Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NHighest_1)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NCompleted_1), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NHighest_2)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NCompleted_2), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NHighest_3)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NCompleted_3), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NHighest_4)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NCompleted_4), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NHighest_5)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NCompleted_5), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NHighest_6)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NCompleted_6), Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NHighest_7)/Sum('&chr(36)&'(vSet_Principal_SchoolLeadership_Previous) NCompleted_7))';
        let vmmPercMP_Principal_SchoolLeadership_Previous = 'Num(IF('&chr(36)&'(vMinPrincipals) <= '&chr(36)&'(vCount_Principal_SchoolLeadership_Previous), '&chr(36)&'(vPercMP_Principal_SchoolLeadership_Previous), Null()),'&chr(39)&'#.#%'&chr(39)&')';
               


//// PSSA
  /// For dimensions
    let vCountPSSA_Subject_Current = 'Count({<Subject={"'&chr(36)&'(='&chr(36)&'(vFocusSubject))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore)';
    let vAvgPSSA_Subject_Current = 'Avg({<Subject={"'&chr(36)&'(='&chr(36)&'(vFocusSubject))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore)';
    let vmmAvgPSSA_Subject_Current = 'Num(IF('&chr(36)&'(vMinStudents) <= '&chr(36)&'(vCountPSSA_Subject_Current), '&chr(36)&'(vAvgPSSA_Subject_Current), Null()),'&chr(39)&'##0.#'&chr(39)&')';
        
  /// for reference lines
    let vAvgPSSA_Subject_Current_District = 'Avg({1<Subject={"'&chr(36)&'(='&chr(36)&'(vFocusSubject))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore)';
    let vMinPSSA_Subject_Current_District = 'Min({1<Subject={"'&chr(36)&'(='&chr(36)&'(vFocusSubject))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore)';
    let vMaxPSSA_Subject_Current_District = 'Max({1<Subject={"'&chr(36)&'(='&chr(36)&'(vFocusSubject))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore)';
    