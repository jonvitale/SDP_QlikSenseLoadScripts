/**
*	Loading Variables: District Wide Surveys
*	Jonathan Vitale
*	Changes:
*
*	Version 1.0.5.1:
*		- The counts for the focus questions include non score responses (but not skips)
*
*	Reminders:
*	- All the let statements will be strings, if you want an actual single quote in the string, use '
*	- Alternatively, you can use double-quotes in set analyses, but these enable search and wildcards, so be careful.
*   - A $(somevar) tells click to substitute whatever is somevar immediately. If you want to prevent this expansion replace $ with $
*   - Similarly $(=$(somevar)) tells Qlik to evaluate the somevar expression, if you do not want this done in the load script replace both $ with chr(36)
**/

set vVersionNumber = 1.1.0;

///// What is the latest year?
  let vMaxYearEnd = Max(YearEnd);
  let vLastYearEnd = (Max(YearEnd)-1);
  let vLastLastYearEnd = (Max(YearEnd)-2);
  let vMaxYear = (max(left(year,4))) & '-' & (max(right(year,4)));
  let vLastYear = (max(left(year,4))-1) & '-' & (max(right(year,4))-1);
  let vLastLastYear = (max(left(year,4))-2) & '-' & (max(right(year,4))-2);

///// what is the minimum number of individuals and percent of respondents for an analysis
  let vMinStudents = 25; 
  let vMinParents = 25;
  let vMinTeachers = 5;
  let vMinPrincipals = 5;
  
  /// for now we are not using the following
  let vMinStudentsPerc = 0; 
  let vMinParentsPerc = 0;
  let vMinTeachersPerc = 0;
  let vMinPrincipalsPerc = 0;
  
let vCol_Respondent = 
    If(surveytype = 'STUDENT', '#0B315B',
    If(surveytype = 'PARENT', '#FFAA30',
    If(surveytype = 'TEACHER', '#C3DAC2',
    If(surveytype = 'PRINCIPAL', '#47AAD8'))));



///// Response Rate
  //// Master Measure vmmCount_Responded_Student_Current: Count of Students in current year - for use in sizing points in the scatter plot
    let vmmCount_Responded_Student_Current = Count({$<surveyTypeForDisplay = {"Student"}, responded={1}, 
      YearEnd = {$(=$(vMaxYearEnd))}
      >} responded);

  //// Text for subtitle in Response Rate KPIs
    let vSubTitle_RespondedKPI_Student = 
    $(=vMaxYear) & ', # of Student Responses: ' &
        Num(Count(distinct {$<YearEnd = {$(=$(vMaxYearEnd))}, surveyTypeForDisplay={"Student"}, responded={1}>} respondentid),
        '#,##0');
    let vSubTitle_RespondedKPI_Parent = $(=vMaxYear) & ', # of Parent Responses: ' &
        Num(Count(distinct {$<YearEnd = {$(=$(vMaxYearEnd))}, surveyTypeForDisplay={"Parent"}, responded={1}>} respondentid),
        '#,##0');
    let vSubTitle_RespondedKPI_Teacher = $(=vMaxYear) & ', # of Teacher Responses: ' &
        Num(Count(distinct {$<YearEnd = {$(=$(vMaxYearEnd))}, surveyTypeForDisplay={"Teacher"}, responded={1}>} respondentid),
        '#,##0');
    let vSubTitle_RespondedKPI_Principal = $(=vMaxYear) & ', # of Principal Responses: ' &
        Num(Count(distinct {$<YearEnd = {$(=$(vMaxYearEnd))}, surveyTypeForDisplay={"Principal"}, responded={1}>} respondentid),
        '#,##0');


  //// Numerator - count of respondents
    /// Master Measure: vmmCount_Responded_Student: How many students (or other) responded to the survey?
      // Note, these don't take sample size into account, but if they do here is a sample of how:
      let vmmCount_Responded_Student = Num(Sum({$<surveyTypeForDisplay = {"Student"}, year= >} responded), '#,##0');
      let vmmCount_Responded_Parent = Num(Sum({$<surveyTypeForDisplay = {"Parent"}, year= >} responded), '#,##0');
      let vmmCount_Responded_Teacher = Num(Sum({$<surveyTypeForDisplay = {"Teacher"}, year= >} responded),'#,##0');
      let vmmCount_Responded_Principal = Num(Sum({$<surveyTypeForDisplay = {"Principal"}, year= >} responded),'#,##0');

  //// Denominator - total # in respective groups
    /// Master Measure: vmmCount_Student - the number of students in grades 3 - 12
      let vmmCount_Student = Num(Count({$<surveyTypeForDisplay = {"Student"}, year=, inEnrollmentCounter={1}, 
        grade -= {"00", "01", "02"}>} responded), '#,##0');
      let vmmCount_Parent = Num(Count({$<surveyTypeForDisplay = {"Parent"}, year=, inEnrollmentCounter={1}>} responded), '#,##0');
      let vmmCount_Teacher = Num(Count({$<surveyTypeForDisplay = {"Teacher"}, year=, inEnrollmentCounter={1} >} responded), '#,##0');
      // Principal is a little different because we are counting distinct schools
      let vmmCount_Principal = Num(Count({$<surveyTypeForDisplay = {"Principal"}, year=, inEnrollmentCounter={1}>} responded), '#,##0');

  //// Rate - Numerator / Denominator for current year
      let vmmRatio_Responded_by_Total_Student_Current = Num(Sum({$<surveyTypeForDisplay = {"Student"},
          YearEnd = {$(=$(vMaxYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Student"}, inEnrollmentCounter={1}, 
          YearEnd = {$(=$(vMaxYearEnd))},
          grade -= {"00", "01", "02"}
          >} responded), '#.#%');
      let vmmRatio_Responded_by_Total_Parent_Current = Num(Sum({$<surveyTypeForDisplay = {"Parent"},
          YearEnd = {$(=$(vMaxYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Parent"}, inEnrollmentCounter={1}, 
          YearEnd = {$(=$(vMaxYearEnd))}>} responded), '#.#%');
      let vmmRatio_Responded_by_Total_Teacher_Current = Num(Sum({$<surveyTypeForDisplay = {"Teacher"},
          YearEnd = {$(=$(vMaxYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Teacher"}, inEnrollmentCounter={1},
          YearEnd = {$(=$(vMaxYearEnd))}>} responded), '#.#%');
      let vmmRatio_Responded_by_Total_Principal_Current =  Num(Sum({$<surveyTypeForDisplay = {"Principal"},
          YearEnd = {$(=$(vMaxYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Principal"}, inEnrollmentCounter={1},
          YearEnd = {$(=$(vMaxYearEnd))}>} responded), '#.#%');

  //// Year over year
      let vmmRatio_Responded_by_Total_Student_YOY = Num(
        Sum({$<surveyTypeForDisplay = {"Student"},
          YearEnd = {$(=$(vMaxYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Student"}, inEnrollmentCounter={1}, 
          YearEnd = {$(=$(vMaxYearEnd))},
          grade -= {"00", "01", "02"}
          >} responded)
        -
        Sum({$<surveyTypeForDisplay = {"Student"},
          YearEnd = {$(=$(vLastYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Student"}, inEnrollmentCounter={1}, 
          YearEnd = {$(=$(vLastYearEnd))},
          grade -= {"00", "01", "02"}
          >} responded), '#.#%');
      let vmmRatio_Responded_by_Total_Parent_YOY = Num(
        Sum({$<surveyTypeForDisplay = {"Parent"},
          YearEnd = {$(=$(vMaxYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Parent"}, inEnrollmentCounter={1}, 
          YearEnd = {$(=$(vMaxYearEnd))}
          >} responded)
        -
        Sum({$<surveyTypeForDisplay = {"Parent"},
          YearEnd = {$(=$(vLastYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Parent"}, inEnrollmentCounter={1}, 
          YearEnd = {$(=$(vLastYearEnd))}
          >} responded), '#.#%');
      let vmmRatio_Responded_by_Total_Teacher_YOY = Num(
        Sum({$<surveyTypeForDisplay = {"Teacher"},
          YearEnd = {$(=$(vMaxYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Teacher"}, inEnrollmentCounter={1}, 
          YearEnd = {$(=$(vMaxYearEnd))}
          >} responded)
        -
        Sum({$<surveyTypeForDisplay = {"Teacher"}, 
          YearEnd = {$(=$(vLastYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Teacher"}, inEnrollmentCounter={1},
          YearEnd = {$(=$(vLastYearEnd))}
          >} responded), '#.#%');
      let vmmRatio_Responded_by_Total_Principal_YOY =  Num(
        Sum({$<surveyTypeForDisplay = {"Principal"},
          YearEnd = {$(=$(vMaxYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Principal"}, inEnrollmentCounter={1}, 
          YearEnd = {$(=$(vMaxYearEnd))}
          >} responded)
        -
        Sum({$<surveyTypeForDisplay = {"Principal"}, 
          YearEnd = {$(=$(vLastYearEnd))} >} responded) /
        Count({$<surveyTypeForDisplay = {"Principal"}, inEnrollmentCounter={1},
          YearEnd = {$(=$(vLastYearEnd))}
          >} responded), '#.#%');

  //// Rate - Numerator / Denominator for all years
      let vmmRatio_Responded_by_Total_Student_AllYears = Num(Sum({$<surveyTypeForDisplay = {"Student"},
          YearEnd = >} responded) /
        Count({$<surveyTypeForDisplay = {"Student"}, inEnrollmentCounter={1}, 
           grade -= {"00", "01", "02"}, YearEnd =      
          >} responded), '#.#%');
      let vmmRatio_Responded_by_Total_Parent_AllYears = Num(Sum({$<surveyTypeForDisplay = {"Parent"},
          YearEnd = >} responded) /
        Count({$<surveyTypeForDisplay = {"Parent"}, inEnrollmentCounter={1}, 
          YearEnd = >} responded), '#.#%');
      let vmmRatio_Responded_by_Total_Teacher_AllYears = Num(Sum({$<surveyTypeForDisplay = {"Teacher"},
          YearEnd =  >} responded) /
        Count({$<surveyTypeForDisplay = {"Teacher"}, inEnrollmentCounter={1},
          YearEnd = >} responded), '#.#%');
      let vmmRatio_Responded_by_Total_Principal_AllYears = Num(Sum({$<surveyTypeForDisplay = {"Principal"},
          YearEnd =  >} responded) /
        Count({$<surveyTypeForDisplay = {"Principal"}, inEnrollmentCounter={1},
          YearEnd = >} responded), '#.#%');


///// Survey Focus Questions - Percent Most Positive
  //// Question codes
    let vStudentQuestionCode1 = 'STUDENT|Q3f';
    let vStudentQuestionCode2 = 'STUDENT|Q1b';
    let vStudentQuestionCode3 = 'STUDENT|Q3k';
    let vStudentQuestionCode4 = 'STUDENT|Q3a';

    let vParentQuestionCode1 = 'PARENT|Q7f';
    let vParentQuestionCode2 = 'PARENT|Q7a';
    let vParentQuestionCode3 = 'PARENT|Q7d';
    let vParentQuestionCode4 = 'PARENT|Q3g';

    let vTeacherQuestionCode1 = 'TEACHER|Q5a';
    let vTeacherQuestionCode2 = 'TEACHER|Q3e';
    let vTeacherQuestionCode3 = 'TEACHER|Q3i';
    let vTeacherQuestionCode4 = 'TEACHER|Q4e';

  //// Question text (originally I was figuring this out by code, but this will make it faster)
    let vStudentQuestion1 = I enjoy being in school.;
    let vStudentQuestion2 = My teachers have high expectations for me in school.;
    let vStudentQuestion3 = My school is clean.;
    let vStudentQuestion4 = I am bullied at school.;
    
    let vParentQuestion1 = I am pleased with the quality of education my child's school is providing for my child.;
    let vParentQuestion2 = My child's school has high expectations for my child's learning.;
    let vParentQuestion3 = Teachers at my child's school encourage my child to work hard.;
    let vParentQuestion4 = My child feels safe at school.;
    
    let vTeacherQuestion1 = The principal communicates a clear mission for our school.;
    let vTeacherQuestion2 = My students are motivated to learn.;
    let vTeacherQuestion3 = My students influence decisions regarding learning activities.;
    let vTeacherQuestion4 = My students are more focused on grades than learning.;

  //// Question abbreviation
    let vStudentQuestion1Abbr = I enjoy being in school;
    let vStudentQuestion2Abbr = My teachers have high expectations;
    let vStudentQuestion3Abbr = My school is clean;
    let vStudentQuestion4Abbr = I am bullied;
    
    let vParentQuestion1Abbr = Pleased with quality of education;
    let vParentQuestion2Abbr = Teachers have high expectations;
    let vParentQuestion3Abbr = Teachers encourage hard work;    
    let vParentQuestion4Abbr = My child feels safe;

    let vTeacherQuestion1Abbr = Clear mission by principal;
    let vTeacherQuestion2Abbr = My students are motivated;
    let vTeacherQuestion3Abbr = Students influence decisions;
    let vTeacherQuestion4Abbr = Students focus on grades over learning;

  //// Question best "most positive" responses
    let vStudentQuestion1MostPositive = Most or all the time;
    let vStudentQuestion2MostPositive = Most or all the time;
    let vStudentQuestion3MostPositive = Most or all the time;
    let vStudentQuestion4MostPositive = Never;
    
    let vParentQuestion1MostPositive = Strongly Agree;
    let vParentQuestion2MostPositive = Strongly Agree;
    let vParentQuestion3MostPositive = Strongly Agree;    
    let vParentQuestion4MostPositive = Most or all the time;

    let vTeacherQuestion1MostPositive = Strongly Agree;
    let vTeacherQuestion2MostPositive = Most or all the time;
    let vTeacherQuestion3MostPositive = Most or all the time;
    let vTeacherQuestion4MostPositive = Never;

  //// Current Count
    let vCount_Student_Q1_Current = Count({$<
      surveyquestnum={'$(=$(vStudentQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Student_Q2_Current = Count({$<
      surveyquestnum={'$(=$(vStudentQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Student_Q3_Current = Count({$<
      surveyquestnum={'$(=$(vStudentQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Student_Q4_Current = Count({$<
      surveyquestnum={'$(=$(vStudentQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Parent_Q1_Current = Count({$<
      surveyquestnum={'$(=$(vParentQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Parent_Q2_Current = Count({$<
      surveyquestnum={'$(=$(vParentQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Parent_Q3_Current = Count({$<
      surveyquestnum={'$(=$(vParentQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Parent_Q4_Current = Count({$<
      surveyquestnum={'$(=$(vParentQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Teacher_Q1_Current = Count({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Teacher_Q2_Current = Count({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Teacher_Q3_Current = Count({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Teacher_Q4_Current = Count({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
  //// Previous Year Count
    let vCount_Student_Q1_Previous = Count({$<
      surveyquestnum={'$(=$(vStudentQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Student_Q2_Previous = Count({$<
      surveyquestnum={'$(=$(vStudentQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Student_Q3_Previous = Count({$<
      surveyquestnum={'$(=$(vStudentQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Student_Q4_Previous = Count({$<
      surveyquestnum={'$(=$(vStudentQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Parent_Q1_Previous = Count({$<
      surveyquestnum={'$(=$(vParentQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Parent_Q2_Previous = Count({$<
      surveyquestnum={'$(=$(vParentQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Parent_Q3_Previous = Count({$<
      surveyquestnum={'$(=$(vParentQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Parent_Q4_Previous = Count({$<
      surveyquestnum={'$(=$(vParentQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Teacher_Q1_Previous = Count({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Teacher_Q2_Previous = Count({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Teacher_Q3_Previous = Count({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCount_Teacher_Q4_Previous = Count({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);

  //// Current Count of non-skip, not applicable responses (e.g., "I don't know", "Not sure", "not applicable", etc)
    let vCountNA_Student_Q1_Current = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Student_Q2_Current = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Student_Q3_Current = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Student_Q4_Current = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Parent_Q1_Current = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Parent_Q2_Current = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Parent_Q3_Current = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Parent_Q4_Current = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Teacher_Q1_Current = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Teacher_Q2_Current = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Teacher_Q3_Current = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Teacher_Q4_Current = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);
  //// Previous Year Count
    let vCountNA_Student_Q1_Previous = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Student_Q2_Previous = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Student_Q3_Previous = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Student_Q4_Previous = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Parent_Q1_Previous = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Parent_Q2_Previous = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Parent_Q3_Previous = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Parent_Q4_Previous = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Teacher_Q1_Previous = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Teacher_Q2_Previous = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Teacher_Q3_Previous = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);
    let vCountNA_Teacher_Q4_Previous = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);

  //// Current Count (Total)
    let vCountTotal_Student_Q1_Current = Count(Total {$<
      surveyquestnum={'$(=$(vStudentQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Student_Q2_Current = Count(Total {$<
      surveyquestnum={'$(=$(vStudentQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Student_Q3_Current = Count(Total {$<
      surveyquestnum={'$(=$(vStudentQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Student_Q4_Current = Count(Total {$<
      surveyquestnum={'$(=$(vStudentQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Parent_Q1_Current = Count(Total {$<
      surveyquestnum={'$(=$(vParentQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Parent_Q2_Current = Count(Total {$<
      surveyquestnum={'$(=$(vParentQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Parent_Q3_Current = Count(Total {$<
      surveyquestnum={'$(=$(vParentQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Parent_Q4_Current = Count(Total {$<
      surveyquestnum={'$(=$(vParentQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Teacher_Q1_Current = Count(Total {$<
      surveyquestnum={'$(=$(vTeacherQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Teacher_Q2_Current = Count(Total {$<
      surveyquestnum={'$(=$(vTeacherQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Teacher_Q3_Current = Count(Total {$<
      surveyquestnum={'$(=$(vTeacherQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Teacher_Q4_Current = Count(Total {$<
      surveyquestnum={'$(=$(vTeacherQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} scoreForDisplay);

  //// Previous Year Count (Total)
    let vCountTotal_Student_Q1_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vStudentQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Student_Q2_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vStudentQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Student_Q3_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vStudentQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Student_Q4_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vStudentQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Parent_Q1_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vParentQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Parent_Q2_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vParentQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Parent_Q3_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vParentQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Parent_Q4_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vParentQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Teacher_Q1_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vTeacherQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Teacher_Q2_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vTeacherQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Teacher_Q3_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vTeacherQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);
    let vCountTotal_Teacher_Q4_Previous = Count(Total {$<
      surveyquestnum={'$(=$(vTeacherQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} scoreForDisplay);      

  //// Current Percent Most Positive
    let vPercMP_Student_Q1_Current = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Student_Q1_Current);
    let vPercMP_Student_Q2_Current = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Student_Q2_Current);
    let vPercMP_Student_Q3_Current = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Student_Q3_Current);
    let vPercMP_Student_Q4_Current = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Student_Q4_Current);
    let vPercMP_Parent_Q1_Current = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Parent_Q1_Current);
    let vPercMP_Parent_Q2_Current = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Parent_Q2_Current);
    let vPercMP_Parent_Q3_Current = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Parent_Q3_Current);
    let vPercMP_Parent_Q4_Current = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Parent_Q4_Current);
    let vPercMP_Teacher_Q1_Current = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode1))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Teacher_Q1_Current);
    let vPercMP_Teacher_Q2_Current = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode2))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Teacher_Q2_Current);
    let vPercMP_Teacher_Q3_Current = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode3))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Teacher_Q3_Current);
    let vPercMP_Teacher_Q4_Current = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode4))'}, 
      YearEnd = {$(=$(vMaxYearEnd))}, responded={1}>} highest)
      / $(vCount_Teacher_Q4_Current);

  //// Previous Percent Most Positive
    let vPercMP_Student_Q1_Previous = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Student_Q1_Previous);
    let vPercMP_Student_Q2_Previous = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Student_Q2_Previous);
    let vPercMP_Student_Q3_Previous = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Student_Q3_Previous);
    let vPercMP_Student_Q4_Previous = Sum({$<
      surveyquestnum={'$(=$(vStudentQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Student_Q4_Previous);
    let vPercMP_Parent_Q1_Previous = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Parent_Q1_Previous);
    let vPercMP_Parent_Q2_Previous = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Parent_Q2_Previous);
    let vPercMP_Parent_Q3_Previous = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Parent_Q3_Previous);
    let vPercMP_Parent_Q4_Previous = Sum({$<
      surveyquestnum={'$(=$(vParentQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Parent_Q4_Previous);
    let vPercMP_Teacher_Q1_Previous = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode1))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Teacher_Q1_Previous);
    let vPercMP_Teacher_Q2_Previous = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode2))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Teacher_Q2_Previous);
    let vPercMP_Teacher_Q3_Previous = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode3))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Teacher_Q3_Previous);
    let vPercMP_Teacher_Q4_Previous = Sum({$<
      surveyquestnum={'$(=$(vTeacherQuestionCode4))'}, 
      YearEnd = {$(=$(vLastYearEnd))}, responded={1}>} highest)
      / $(vCount_Teacher_Q4_Previous);

  //// Text for subtitle in % Most Positive KPIs
    let vSubTitle_PercMPKPI_Student_Q1 = $(=vMaxYear) & ', # of Student Responses: ' &
        Num($(vCount_Student_Q1_Current),
        '#,##0');
    let vSubTitle_PercMPKPI_Student_Q2 = $(=vMaxYear) & ', # of Student Responses: ' &
        Num($(vCount_Student_Q2_Current),
        '#,##0');
    let vSubTitle_PercMPKPI_Student_Q3 = $(=vMaxYear) & ', # of Student Responses: ' &
        Num($(vCount_Student_Q3_Current),
        '#,##0');
    let vSubTitle_PercMPKPI_Student_Q4 = $(=vMaxYear) & ', # of Student Responses: ' &
        Num($(vCount_Student_Q4_Current),
        '#,##0');

    let vSubTitle_PercMPKPI_Parent_Q1 = $(=vMaxYear) & ', # of Parent Responses: ' &
        Num($(vCount_Parent_Q1_Current),
        '#,##0');
    let vSubTitle_PercMPKPI_Parent_Q2 = $(=vMaxYear) & ', # of Parent Responses: ' &
        Num($(vCount_Parent_Q2_Current),
        '#,##0');
    let vSubTitle_PercMPKPI_Parent_Q3 = $(=vMaxYear) & ', # of Parent Responses: ' &
        Num($(vCount_Parent_Q3_Current),
        '#,##0');
    let vSubTitle_PercMPKPI_Parent_Q4 = $(=vMaxYear) & ', # of Parent Responses: ' &
        Num($(vCount_Parent_Q4_Current),
        '#,##0');

    let vSubTitle_PercMPKPI_Teacher_Q1 = $(=vMaxYear) & ', # of Teacher Responses: ' &
        Num($(vCount_Teacher_Q1_Current),
        '#,##0');
    let vSubTitle_PercMPKPI_Teacher_Q2 = $(=vMaxYear) & ', # of Teacher Responses: ' &
        Num($(vCount_Teacher_Q2_Current),
        '#,##0');
    let vSubTitle_PercMPKPI_Teacher_Q3 = $(=vMaxYear) & ', # of Teacher Responses: ' &
        Num($(vCount_Teacher_Q3_Current),
        '#,##0');
    let vSubTitle_PercMPKPI_Teacher_Q4 = $(=vMaxYear) & ', # of Teacher Responses: ' &
        Num($(vCount_Teacher_Q4_Current),
        '#,##0');

    
  //// Master Measures for KPIs - Current Year
    let vmmPercMP_Student_Q1_Current = Num(If($(vMinStudents) < $(vCount_Student_Q1_Current),
                            $(vPercMP_Student_Q1_Current), Null()), '#.#%');
    let vmmPercMP_Student_Q2_Current = Num(If($(vMinStudents) <= $(vCount_Student_Q2_Current),
                            $(vPercMP_Student_Q2_Current), Null()), '#.#%');
    let vmmPercMP_Student_Q3_Current = Num(If($(vMinStudents) <= $(vCount_Student_Q3_Current),
                            $(vPercMP_Student_Q3_Current), Null()), '#.#%');
    let vmmPercMP_Student_Q4_Current = Num(If($(vMinStudents) <= $(vCount_Student_Q4_Current),
                            $(vPercMP_Student_Q4_Current), Null()), '#.#%');
    let vmmPercMP_Parent_Q1_Current = Num(If($(vMinParents) <= $(vCount_Parent_Q1_Current),
                            $(vPercMP_Parent_Q1_Current), Null()), '#.#%');
    let vmmPercMP_Parent_Q2_Current = Num(If($(vMinParents) <= $(vCount_Parent_Q2_Current),
                            $(vPercMP_Parent_Q2_Current), Null()), '#.#%');
    let vmmPercMP_Parent_Q3_Current = Num(If($(vMinParents) <= $(vCount_Parent_Q3_Current),
                            $(vPercMP_Parent_Q3_Current), Null()), '#.#%');
    let vmmPercMP_Parent_Q4_Current = Num(If($(vMinParents) <= $(vCount_Parent_Q4_Current),
                            $(vPercMP_Parent_Q4_Current), Null()), '#.#%');
    let vmmPercMP_Teacher_Q1_Current = Num(If($(vMinTeachers) <= $(vCount_Teacher_Q1_Current),
                            $(vPercMP_Teacher_Q1_Current), Null()), '#.#%');
    let vmmPercMP_Teacher_Q2_Current = Num(If($(vMinTeachers) <= $(vCount_Teacher_Q2_Current),
                            $(vPercMP_Teacher_Q2_Current), Null()), '#.#%');
    let vmmPercMP_Teacher_Q3_Current = Num(If($(vMinTeachers) <= $(vCount_Teacher_Q3_Current),
                            $(vPercMP_Teacher_Q3_Current), Null()), '#.#%');
    let vmmPercMP_Teacher_Q4_Current = Num(If($(vMinTeachers) <= $(vCount_Teacher_Q4_Current),
                            $(vPercMP_Teacher_Q4_Current), Null()), '#.#%');
  
  //// Master Measures for KPIs - YOY
    let vmmPercMP_Student_Q1_YOY = Num(If($(vMinStudents) <= $(vCount_Student_Q1_Current) and 
        $(vMinStudents) <= $(vCount_Student_Q1_Previous),
        $(vPercMP_Student_Q1_Current) - $(vPercMP_Student_Q1_Previous), Null()), '#.#%');
    let vmmPercMP_Student_Q2_YOY = Num(If($(vMinStudents) <= $(vCount_Student_Q2_Current) and 
        $(vMinStudents) <= $(vCount_Student_Q2_Previous),
        $(vPercMP_Student_Q2_Current) - $(vPercMP_Student_Q2_Previous), Null()), '#.#%');
    let vmmPercMP_Student_Q3_YOY = Num(If($(vMinStudents) <= $(vCount_Student_Q3_Current) and 
        $(vMinStudents) <= $(vCount_Student_Q3_Previous),
        $(vPercMP_Student_Q3_Current) - $(vPercMP_Student_Q3_Previous), Null()), '#.#%');
    let vmmPercMP_Student_Q4_YOY = Num(If($(vMinStudents) <= $(vCount_Student_Q4_Current) and 
        $(vMinStudents) <= $(vCount_Student_Q4_Previous),
        $(vPercMP_Student_Q4_Current) - $(vPercMP_Student_Q4_Previous), Null()), '#.#%');
    let vmmPercMP_Parent_Q1_YOY = Num(If($(vMinParents) <= $(vCount_Parent_Q1_Current) and 
        $(vMinParents) <= $(vCount_Parent_Q1_Previous),
        $(vPercMP_Parent_Q1_Current) - $(vPercMP_Parent_Q1_Previous), Null()), '#.#%');
    let vmmPercMP_Parent_Q2_YOY = Num(If($(vMinParents) <= $(vCount_Parent_Q2_Current) and 
        $(vMinParents) <= $(vCount_Parent_Q2_Previous),
        $(vPercMP_Parent_Q2_Current) - $(vPercMP_Parent_Q2_Previous), Null()), '#.#%');
    let vmmPercMP_Parent_Q3_YOY = Num(If($(vMinParents) <= $(vCount_Parent_Q3_Current) and 
        $(vMinParents) <= $(vCount_Parent_Q3_Previous),
        $(vPercMP_Parent_Q3_Current) - $(vPercMP_Parent_Q3_Previous), Null()), '#.#%');
    let vmmPercMP_Parent_Q4_YOY = Num(If($(vMinParents) <= $(vCount_Parent_Q4_Current) and 
        $(vMinParents) <= $(vCount_Parent_Q4_Previous),
        $(vPercMP_Parent_Q4_Current) - $(vPercMP_Parent_Q4_Previous), Null()), '#.#%');
    let vmmPercMP_Teacher_Q1_YOY = Num(If($(vMinTeachers) <= $(vCount_Teacher_Q1_Current) and 
        $(vMinTeachers) <= $(vCount_Teacher_Q1_Previous),
        $(vPercMP_Teacher_Q1_Current) - $(vPercMP_Teacher_Q1_Previous), Null()), '#.#%');
    let vmmPercMP_Teacher_Q2_YOY = Num(If($(vMinTeachers) <= $(vCount_Teacher_Q2_Current) and 
        $(vMinTeachers) <= $(vCount_Teacher_Q2_Previous),
        $(vPercMP_Teacher_Q2_Current) - $(vPercMP_Teacher_Q2_Previous), Null()), '#.#%');
    let vmmPercMP_Teacher_Q3_YOY = Num(If($(vMinTeachers) <= $(vCount_Teacher_Q3_Current) and 
        $(vMinTeachers) <= $(vCount_Teacher_Q3_Previous),
        $(vPercMP_Teacher_Q3_Current) - $(vPercMP_Teacher_Q3_Previous), Null()), '#.#%');
    let vmmPercMP_Teacher_Q4_YOY = Num(If($(vMinTeachers) <= $(vCount_Teacher_Q4_Current) and 
        $(vMinTeachers) <= $(vCount_Teacher_Q4_Previous),
        $(vPercMP_Teacher_Q4_Current) - $(vPercMP_Teacher_Q4_Previous), Null()), '#.#%');

    //// Master Measures for Bar Charts - Current Year Note: the extra multiplier of 0 is for showing all dimensions in the bar chart)
    let vmmRatio_Student_Q1_Current_Zero = Num(If($(vMinStudents) <= $(vCountTotal_Student_Q1_Current),
        $(vCount_Student_Q1_Current) / $(vCountTotal_Student_Q1_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vStudentQuestionCode1))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Student_Q2_Current_Zero = Num(If($(vMinStudents) <= $(vCountTotal_Student_Q2_Current),
        $(vCount_Student_Q2_Current) / $(vCountTotal_Student_Q2_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vStudentQuestionCode2))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Student_Q3_Current_Zero = Num(If($(vMinStudents) <= $(vCountTotal_Student_Q3_Current),
        $(vCount_Student_Q3_Current) / $(vCountTotal_Student_Q3_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vStudentQuestionCode3))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Student_Q4_Current_Zero = Num(If($(vMinStudents) <= $(vCountTotal_Student_Q4_Current),
        $(vCount_Student_Q4_Current) / $(vCountTotal_Student_Q4_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vStudentQuestionCode4))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Parent_Q1_Current_Zero = Num(If($(vMinParents) <= $(vCountTotal_Parent_Q1_Current),
        $(vCount_Parent_Q1_Current) / $(vCountTotal_Parent_Q1_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vParentQuestionCode1))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Parent_Q2_Current_Zero = Num(If($(vMinParents) <= $(vCountTotal_Parent_Q2_Current),
        $(vCount_Parent_Q2_Current) / $(vCountTotal_Parent_Q2_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vParentQuestionCode2))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Parent_Q3_Current_Zero = Num(If($(vMinParents) <= $(vCountTotal_Parent_Q3_Current),
        $(vCount_Parent_Q3_Current) / $(vCountTotal_Parent_Q3_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vParentQuestionCode3))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Parent_Q4_Current_Zero = Num(If($(vMinParents) <= $(vCountTotal_Parent_Q4_Current),
        $(vCount_Parent_Q4_Current) / $(vCountTotal_Parent_Q4_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vParentQuestionCode4))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%'); 
    let vmmRatio_Teacher_Q1_Current_Zero = Num(If($(vMinTeachers) <= $(vCountTotal_Teacher_Q1_Current),
        $(vCount_Teacher_Q1_Current) / $(vCountTotal_Teacher_Q1_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vTeacherQuestionCode1))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Teacher_Q2_Current_Zero = Num(If($(vMinTeachers) <= $(vCountTotal_Teacher_Q2_Current),
        $(vCount_Teacher_Q2_Current) / $(vCountTotal_Teacher_Q2_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vTeacherQuestionCode2))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Teacher_Q3_Current_Zero = Num(If($(vMinTeachers) <= $(vCountTotal_Teacher_Q3_Current),
        $(vCount_Teacher_Q3_Current) / $(vCountTotal_Teacher_Q3_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vTeacherQuestionCode3))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%');
    let vmmRatio_Teacher_Q4_Current_Zero = Num(If($(vMinTeachers) <= $(vCountTotal_Teacher_Q4_Current),
        $(vCount_Teacher_Q4_Current) / $(vCountTotal_Teacher_Q4_Current) 
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vTeacherQuestionCode4))"}, YearEnd = {$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay) 
          >} responded)
        , 0), '#.#%'); 

  //// Master Measures for Bar Charts - Previous Year
    let vmmRatio_Student_Q1_Previous_Zero = Num(If($(vMinStudents) <= $(vCountTotal_Student_Q1_Previous),
        $(vCount_Student_Q1_Previous) / $(vCountTotal_Student_Q1_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vStudentQuestionCode1))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Student_Q2_Previous_Zero = Num(If($(vMinStudents) <= $(vCountTotal_Student_Q2_Previous),
        $(vCount_Student_Q2_Previous) / $(vCountTotal_Student_Q2_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vStudentQuestionCode2))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Student_Q3_Previous_Zero = Num(If($(vMinStudents) <= $(vCountTotal_Student_Q3_Previous),
        $(vCount_Student_Q3_Previous) / $(vCountTotal_Student_Q3_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vStudentQuestionCode3))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Student_Q4_Previous_Zero = Num(If($(vMinStudents) <= $(vCountTotal_Student_Q4_Previous),
        $(vCount_Student_Q4_Previous) / $(vCountTotal_Student_Q4_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vStudentQuestionCode4))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Parent_Q1_Previous_Zero = Num(If($(vMinParents) <= $(vCountTotal_Parent_Q1_Previous),
        $(vCount_Parent_Q1_Previous) / $(vCountTotal_Parent_Q1_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vParentQuestionCode1))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Parent_Q2_Previous_Zero = Num(If($(vMinParents) <= $(vCountTotal_Parent_Q2_Previous),
        $(vCount_Parent_Q2_Previous) / $(vCountTotal_Parent_Q2_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vParentQuestionCode2))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Parent_Q3_Previous_Zero = Num(If($(vMinParents) <= $(vCountTotal_Parent_Q3_Previous),
        $(vCount_Parent_Q3_Previous) / $(vCountTotal_Parent_Q3_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vParentQuestionCode3))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Parent_Q4_Previous_Zero = Num(If($(vMinParents) <= $(vCountTotal_Parent_Q4_Previous),
        $(vCount_Parent_Q4_Previous) / $(vCountTotal_Parent_Q4_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vParentQuestionCode4))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                   >} responded)
        , 0), '#.#%'); 
    let vmmRatio_Teacher_Q1_Previous_Zero = Num(If($(vMinTeachers) <= $(vCountTotal_Teacher_Q1_Previous),
        $(vCount_Teacher_Q1_Previous) / $(vCountTotal_Teacher_Q1_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vTeacherQuestionCode1))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Teacher_Q2_Previous_Zero = Num(If($(vMinTeachers) <= $(vCountTotal_Teacher_Q2_Previous),
        $(vCount_Teacher_Q2_Previous) / $(vCountTotal_Teacher_Q2_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vTeacherQuestionCode2))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Teacher_Q3_Previous_Zero = Num(If($(vMinTeachers) <= $(vCountTotal_Teacher_Q3_Previous),
        $(vCount_Teacher_Q3_Previous) / $(vCountTotal_Teacher_Q3_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vTeacherQuestionCode3))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%');
    let vmmRatio_Teacher_Q4_Previous_Zero = Num(If($(vMinTeachers) <= $(vCountTotal_Teacher_Q4_Previous),
        $(vCount_Teacher_Q4_Previous) / $(vCountTotal_Teacher_Q4_Previous) 
          + -0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vTeacherQuestionCode4))"}, YearEnd = {$(=$(vLastYearEnd))}>}scoreChoiceForDisplay) 
                    >} responded)
        , 0), '#.#%'); 

///// Survey Focus Question
    let vFocusQuestionCode = 'STUDENT|Q3f';
    let vFocusQuestionCode2 = 'PARENT|Q7f';

    let vFocusQuestion = Mode({1<surveyquestnum={$(vFocusQuestionCode)}>}questiondetailedtext);
    let vFocusQuestion2 = Mode({1<surveyquestnum={$(vFocusQuestionCode2)}>}questiondetailedtext);

    let vFocusQuestionMostPositive = Mode({1<surveyquestnum={$(vFocusQuestionCode)}, highest={1}>}choice);
    let vFocusQuestion2MostPositive = Mode({1<surveyquestnum={$(vFocusQuestionCode2)}, highest={1}>}choice);
    
    // for reference lines in district and network
    let vCount_FocusQuestion_Current_District = Count({1< surveyquestnum={"$(=$(vFocusQuestionCode))"}, YearEnd = {$(=$(vMaxYearEnd))} >}  scoreForDisplay);
    let vPercMP_FocusQuestion_Current_District = Sum({1< surveyquestnum={"$(=$(vFocusQuestionCode))"}, YearEnd = {$(=$(vMaxYearEnd))} >}  highest) / $(vCount_FocusQuestion_Current_District);

    let vCount_FocusQuestion_Current_Network = Count({1< surveyquestnum={"$(=$(vFocusQuestionCode))"}, YearEnd = {$(=$(vMaxYearEnd))}, learningnetwork = p() >}  scoreForDisplay);
    let vPercMP_FocusQuestion_Current_Network = Sum({1< surveyquestnum={"$(=$(vFocusQuestionCode))"}, YearEnd = {$(=$(vMaxYearEnd))}, learningnetwork = p()  >}  highest) / $(vCount_FocusQuestion_Current_Network);

///// Survey Focus Respondent Group and Topic
  
  //// Selection vars
    
    /// Basic group and respondent selection
      let vCurrentRespondentSimple = 'Student';
      let vCurrentRespondentSimple2 = 'Teacher';
      let vCurrentTopic = 'School Climate';
      // vCurrentRespondent takes into account if there are any topics for this respondent group
      let vCurrentRespondent = If($(vCurrentRespondentSimple) = 'Student' and $(vCurrentTopic) = 'Parent/Guardian-Community Ties', 'Parent',
        If(($(vCurrentRespondentSimple) = 'Student' or $(vCurrentRespondentSimple) = 'Parent') and ($(vCurrentTopic) = 'School Leadership' or $(vCurrentTopic) = 'Professional Capacity'),'Teacher',
        $(vCurrentRespondentSimple)
      ));
      let vCurrentRespondent2 = If($(vCurrentRespondentSimple2) = 'Student' and $(vCurrentTopic) = 'Parent/Guardian-Community Ties', 'Parent',
        If(($(vCurrentRespondentSimple2) = 'Student' or $(vCurrentRespondentSimple2) = 'Parent') and ($(vCurrentTopic) = 'School Leadership' or $(vCurrentTopic) = 'Professional Capacity'),'Teacher',
        $(vCurrentRespondentSimple2)
      ));
      // vCurrentOrFirstRespondent takes account of any selections the user has made to limit groups
      let vCurrentOrFirstRespondent = If(GetSelectedCount(surveyTypeForDisplay)=0 or WildMatch(GetFieldSelections(surveyTypeForDisplay), '*'$(vCurrentRespondent)&'*') > 0, 
        $(vCurrentRespondent),
         MinString(surveyTypeForDisplay));
      let vCurrentOrFirstRespondent2 = If(GetSelectedCount(surveyTypeForDisplay)=0 or WildMatch(GetFieldSelections(surveyTypeForDisplay), '*'$(=$(vCurrentRespondent2))&'*') > 0, 
        $(vCurrentRespondent2),
         MinString(surveyTypeForDisplay));

    /// First Question available (with sorting at sub-construct level)
      // vFirstSubTopic is the first available subtopic for the given topic and available respondent
      let vFirstSubTopic = MinString({$<
          ISSQuestionTable_surveyTypeForDisplay={$(=$(vCurrentOrFirstRespondent))}, 
          ISSQuestionTable_questionconstruct={$(vCurrentTopic)}, 
          ISSQuestionTable_Subconstruct={"*"}
          >}ISSQuestionTable_Subconstruct);
      // vFirstQuestionDisplayed is the first available question for the first available sub-topic
      // Note we replace single quotes with two single quotes, this allows set analysis later on where a single-quote would break the string
      let vFirstQuestionDisplayed = If(GetSelectedCount(ISSQuestionTable_questiontext) > 0,
          Replace(MinString(ISSQuestionTable_questiontext), Chr(39), Chr(39)&Chr(39)),
          Replace(MinString({$<ISSQuestionTable_surveyTypeForDisplay={"$(=$(vCurrentOrFirstRespondent))"}, ISSQuestionTable_questionconstruct={$(vCurrentTopic)}, ISSQuestionTable_Subconstruct={"$(=$(vFirstSubTopic))"}>}ISSQuestionTable_questiontext), Chr(39), Chr(39)&Chr(39))
      );

      // vFirstQuestionKey is the code corresponding to the first displayed question
      let vFirstQuestionKey = If(GetSelectedCount(ISSQuestionTable_questiontext) = 0,
        MinString({$<ISSQuestionTable_questiontext={'$(=$(vFirstQuestionDisplayed))'}, ISSQuestionTable_questionconstruct={$(vCurrentTopic)}, ISSQuestionTable_surveyTypeForDisplay={"$(=$(vCurrentOrFirstRespondent))"} >}ISSQuestionTable_surveyyearquestcode)
        ,
        If( Count({$<ISSQuestionTable_questiontext={'$(=$(vFirstQuestionDisplayed))'}, ISSQuestionTable_surveyTypeForDisplay={"$(=$(vCurrentOrFirstRespondent))"}>} ISSQuestionTable_surveyyearquestcode) > 0,
          MinString({$<ISSQuestionTable_questiontext={'$(=$(vFirstQuestionDisplayed))'}, ISSQuestionTable_surveyTypeForDisplay={"$(=$(vCurrentOrFirstRespondent))"}>}ISSQuestionTable_surveyyearquestcode),
           MinString({$<ISSQuestionTable_questiontext={'$(=$(vFirstQuestionDisplayed))'}>}ISSQuestionTable_surveyyearquestcode)
        )
      );
      
      // vFirstQuestionm, vFirstQuestionRespondent and vFirstQuestionTopic are derived from the code (for display, not set analysis, use code)
      //let vFirstQuestionCode = SubField($(vFirstQuestionKey),'|',1) &'|'& SubField($(vFirstQuestionKey),'|',3);
      let vFirstQuestionCode = Only({$<ISSQuestionTable_surveyyearquestcode={"$(=$(vFirstQuestionKey))"}>}ISSQuestionTable_surveyquestnum);
      //let vFirstQuestionYear = SubField($(vFirstQuestionKey),'|',2);
      //let vFirstQuestionYearEnd = SubField($(vFirstQuestionYear),'-',2);
      let vFirstQuestion = MinString({$<ISSQuestionTable_surveyyearquestcode={"$(=$(vFirstQuestionKey))"}>}ISSQuestionTable_questiontext);
      let vFirstQuestionRespondent = Only({$<ISSQuestionTable_surveyyearquestcode={"$(=$(vFirstQuestionKey))"}>}ISSQuestionTable_surveyTypeForDisplay);
      let vFirstQuestionTopic = Only({$<ISSQuestionTable_surveyyearquestcode={"$(=$(vFirstQuestionKey))"}>}ISSQuestionTable_questionconstruct);
  
      // measures for the graph.
      let vCount_Respondent_Topic_Question_Current = Count(total {<surveyquestnum={"$(=$(vFirstQuestionCode))"}, YearEnd={$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay);
      
      let vCountNA_Respondent_Topic_Question_Current = Sum({$<
          surveyquestnum={'$(=$(vFirstQuestionCode))'}, 
          YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}>} responded);

      let vRatio_Respondent_Topic_Question_Current = Count({<surveyquestnum={"$(=$(vFirstQuestionCode))"},YearEnd={$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay)
          /
          Count(total{<surveyquestnum={"$(=$(vFirstQuestionCode))"},YearEnd={$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay)
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vFirstQuestionCode))"}, YearEnd={$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay)>} responded);

      let vmmRatio_Respondent_Topic_Question_Current = Num(
            If(
              '$(=$(vFirstQuestionRespondent))' = 'Student' and $(vMinStudents) <= $(vCount_Respondent_Topic_Question_Current) or
              '$(=$(vFirstQuestionRespondent))' = 'Parent' and $(vMinParents) <= $(vCount_Respondent_Topic_Question_Current) or
              '$(=$(vFirstQuestionRespondent))' = 'Teacher' and $(vMinTeachers) <= $(vCount_Respondent_Topic_Question_Current) or
              '$(=$(vFirstQuestionRespondent))' = 'Principal' and $(vMinPrincipals) <= $(vCount_Respondent_Topic_Question_Current)
            , 
            $(vRatio_Respondent_Topic_Question_Current), 0)
          ,'#.#%');

      
      let vCount_Respondent_Topic_Question_Previous = Count(total {<surveyquestnum={"$(=$(vFirstQuestionCode))"}, YearEnd={$(=$(vLastYearEnd))}>}scoreChoiceForDisplay);
      
      let vCountNA_Respondent_Topic_Question_Previous = Sum({$<
          surveyquestnum={'$(=$(vFirstQuestionCode))'}, 
          YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}>} responded);


      let vRatio_Respondent_Topic_Question_Previous = Count({<surveyquestnum={"$(=$(vFirstQuestionCode))"},YearEnd={$(=$(vLastYearEnd))}>}scoreChoiceForDisplay)
          /
          Count(total{<surveyquestnum={"$(=$(vFirstQuestionCode))"},YearEnd={$(=$(vLastYearEnd))}>}scoreChoiceForDisplay)
          - 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vFirstQuestionCode))"}, YearEnd={$(=$(vLastYearEnd))}>}scoreChoiceForDisplay)>} responded);

      let vmmRatio_Respondent_Topic_Question_Previous = Num(
            If(
              '$(=$(vFirstQuestionRespondent))' = 'Student' and $(vMinStudents) <= $(vCount_Respondent_Topic_Question_Previous) or
              '$(=$(vFirstQuestionRespondent))' = 'Parent' and $(vMinParents) <= $(vCount_Respondent_Topic_Question_Previous) or
              '$(=$(vFirstQuestionRespondent))' = 'Teacher' and $(vMinTeachers) <= $(vCount_Respondent_Topic_Question_Previous) or
              '$(=$(vFirstQuestionRespondent))' = 'Principal' and $(vMinPrincipals) <= $(vCount_Respondent_Topic_Question_Previous)
            , 
            $(vRatio_Respondent_Topic_Question_Previous), 0)
          ,'#.#%');

      let vCount_Respondent_Topic_Question_Current_Alt = Count(total {1<surveyquestnum={"$(=$(vFirstQuestionCode))"}, YearEnd={$(=$(vMaxYearEnd))}> * Alt} scoreChoiceForDisplay);
      
      let vCountNA_Respondent_Topic_Question_Current_Alt = Sum({1<
          surveyquestnum={'$(=$(vFirstQuestionCode))'}, 
          YearEnd = {$(=$(vMaxYearEnd))}, scoreNoSkips={">100"}> * Alt} responded); 

      let vRatio_Respondent_Topic_Question_Current_Alt = Count({1<surveyquestnum={"$(=$(vFirstQuestionCode))"},YearEnd={$(=$(vMaxYearEnd))}> * Alt} scoreChoiceForDisplay)
          /
          Count(total{1<surveyquestnum={"$(=$(vFirstQuestionCode))"},YearEnd={$(=$(vMaxYearEnd))}> * Alt} scoreChoiceForDisplay)
          + 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vFirstQuestionCode))"}, YearEnd={$(=$(vMaxYearEnd))}>}scoreChoiceForDisplay)>} responded);

     
      let vmmRatio_Respondent_Topic_Question_Current_Alt = Num(
            If(
              '$(=$(vFirstQuestionRespondent))' = 'Student' and $(vMinStudents) <= $(vCount_Respondent_Topic_Question_Current_Alt) or
              '$(=$(vFirstQuestionRespondent))' = 'Parent' and $(vMinParents) <= $(vCount_Respondent_Topic_Question_Current_Alt) or
              '$(=$(vFirstQuestionRespondent))' = 'Teacher' and $(vMinTeachers) <= $(vCount_Respondent_Topic_Question_Current_Alt) or
              '$(=$(vFirstQuestionRespondent))' = 'Principal' and $(vMinPrincipals) <= $(vCount_Respondent_Topic_Question_Current_Alt)
            , 
            $(vRatio_Respondent_Topic_Question_Current_Alt), 0)
          ,'#.#%');

      let vCount_Respondent_Topic_Question_Previous_Alt = Count(total {1<surveyquestnum={"$(=$(vFirstQuestionCode))"}, YearEnd={$(=$(vLastYearEnd))}> * Alt} scoreChoiceForDisplay);
      
      let vCountNA_Respondent_Topic_Question_Previous_Alt = Sum({1<
          surveyquestnum={'$(=$(vFirstQuestionCode))'}, 
          YearEnd = {$(=$(vLastYearEnd))}, scoreNoSkips={">100"}> * Alt} responded); 


      let vRatio_Respondent_Topic_Question_Previous_Alt = Count({1<surveyquestnum={"$(=$(vFirstQuestionCode))"},YearEnd={$(=$(vLastYearEnd))}> * Alt} scoreChoiceForDisplay)
          /
          Count(total{1<surveyquestnum={"$(=$(vFirstQuestionCode))"},YearEnd={$(=$(vLastYearEnd))}> * Alt} scoreChoiceForDisplay)
          - 0.000001 * Max({1<scoreChoiceForDisplay=P({1<surveyquestnum={"$(=$(vFirstQuestionCode))"}, YearEnd={$(=$(vLastYearEnd))}>}scoreChoiceForDisplay)>} responded);

      let vmmRatio_Respondent_Topic_Question_Previous_Alt = Num(
            If(
              '$(=$(vFirstQuestionRespondent))' = 'Student' and $(vMinStudents) <= $(vCount_Respondent_Topic_Question_Previous_Alt) or
              '$(=$(vFirstQuestionRespondent))' = 'Parent' and $(vMinParents) <= $(vCount_Respondent_Topic_Question_Previous_Alt) or
              '$(=$(vFirstQuestionRespondent))' = 'Teacher' and $(vMinTeachers) <= $(vCount_Respondent_Topic_Question_Previous_Alt) or
              '$(=$(vFirstQuestionRespondent))' = 'Principal' and $(vMinPrincipals) <= $(vCount_Respondent_Topic_Question_Previous_Alt)
            , 
            $(vRatio_Respondent_Topic_Question_Previous_Alt), 0)
          ,'#.#%');
        
///// Survey Constructs and Subconstruct - Percent Most Positive (down and across method)
  //// Selected Respondent and Selected Topic
     let vCurrentOrFirstRespondent_Min = IF($(vCurrentOrFirstRespondent) = 'Student', $(vMinStudents), IF($(vCurrentOrFirstRespondent) = 'Parent', $(vMinParents), IF($(vCurrentOrFirstRespondent) = 'Teacher', $(vMinTeachers), IF($(vCurrentOrFirstRespondent) = 'Principal', $(vMinPrincipals), 5))));
     
    /// Current Year
      let vSet_Respondent_Topic_Current = {<surveyTypeForDisplay={"$(=$(vCurrentOrFirstRespondent))"}, ISSQuestionTable_questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vMaxYearEnd))}>};
      let vCount_Respondent_Topic_Current = Count(distinct $(vSet_Respondent_Topic_Current) respondentid);
      let vPercMP_Respondent_Topic_Current = RangeAvg(Sum($(vSet_Respondent_Topic_Current) NHighest_1)/Sum($(vSet_Respondent_Topic_Current) NCompleted_1), Sum($(vSet_Respondent_Topic_Current) NHighest_2)/Sum($(vSet_Respondent_Topic_Current) NCompleted_2), Sum($(vSet_Respondent_Topic_Current) NHighest_3)/Sum($(vSet_Respondent_Topic_Current) NCompleted_3), Sum($(vSet_Respondent_Topic_Current) NHighest_4)/Sum($(vSet_Respondent_Topic_Current) NCompleted_4), Sum($(vSet_Respondent_Topic_Current) NHighest_5)/Sum($(vSet_Respondent_Topic_Current) NCompleted_5), Sum($(vSet_Respondent_Topic_Current) NHighest_6)/Sum($(vSet_Respondent_Topic_Current) NCompleted_6), Sum($(vSet_Respondent_Topic_Current) NHighest_7)/Sum($(vSet_Respondent_Topic_Current) NCompleted_7));
      let vmmPercMP_Respondent_Topic_Current = Num(IF($(vCurrentOrFirstRespondent_Min) <= $(vCount_Respondent_Topic_Current), $(vPercMP_Respondent_Topic_Current), Null()),'#.#%');
  
    // Previous Year
      let vSet_Respondent_Topic_Previous = {<surveyTypeForDisplay={"$(=$(vCurrentOrFirstRespondent))"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vLastYearEnd))}>};
      let vCount_Respondent_Topic_Previous = Count(distinct $(vSet_Respondent_Topic_Previous) respondentid);
      let vPercMP_Respondent_Topic_Previous = RangeAvg(Sum($(vSet_Respondent_Topic_Previous) NHighest_1)/Sum($(vSet_Respondent_Topic_Previous) NCompleted_1), Sum($(vSet_Respondent_Topic_Previous) NHighest_2)/Sum($(vSet_Respondent_Topic_Previous) NCompleted_2), Sum($(vSet_Respondent_Topic_Previous) NHighest_3)/Sum($(vSet_Respondent_Topic_Previous) NCompleted_3), Sum($(vSet_Respondent_Topic_Previous) NHighest_4)/Sum($(vSet_Respondent_Topic_Previous) NCompleted_4), Sum($(vSet_Respondent_Topic_Previous) NHighest_5)/Sum($(vSet_Respondent_Topic_Previous) NCompleted_5), Sum($(vSet_Respondent_Topic_Previous) NHighest_6)/Sum($(vSet_Respondent_Topic_Previous) NCompleted_6), Sum($(vSet_Respondent_Topic_Previous) NHighest_7)/Sum($(vSet_Respondent_Topic_Previous) NCompleted_7));
      let vmmPercMP_Respondent_Topic_Previous = Num(IF($(vCurrentOrFirstRespondent_Min) <= $(vCount_Respondent_Topic_Previous), $(vPercMP_Respondent_Topic_Previous), Null()),'#.#%');

    // District and network wide (for reference lines)
      let vSet_Respondent_Topic_Current_District = {1<surveyTypeForDisplay={"$(=$(vCurrentOrFirstRespondent))"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vMaxYearEnd))}>};
      let vCount_Respondent_Topic_Current_District = Count(distinct $(vSet_Respondent_Topic_Current_District) respondentid);
      let vPercMP_Respondent_Topic_Current_District = RangeAvg(Sum($(vSet_Respondent_Topic_Current_District) NHighest_1)/Sum($(vSet_Respondent_Topic_Current_District) NCompleted_1), Sum($(vSet_Respondent_Topic_Current_District) NHighest_2)/Sum($(vSet_Respondent_Topic_Current_District) NCompleted_2), Sum($(vSet_Respondent_Topic_Current_District) NHighest_3)/Sum($(vSet_Respondent_Topic_Current_District) NCompleted_3), Sum($(vSet_Respondent_Topic_Current_District) NHighest_4)/Sum($(vSet_Respondent_Topic_Current_District) NCompleted_4), Sum($(vSet_Respondent_Topic_Current_District) NHighest_5)/Sum($(vSet_Respondent_Topic_Current_District) NCompleted_5), Sum($(vSet_Respondent_Topic_Current_District) NHighest_6)/Sum($(vSet_Respondent_Topic_Current_District) NCompleted_6), Sum($(vSet_Respondent_Topic_Current_District) NHighest_7)/Sum($(vSet_Respondent_Topic_Current_District) NCompleted_7));
      
      let vSet_Respondent_Topic_Current_Network = {1<surveyTypeForDisplay={"$(=$(vCurrentOrFirstRespondent))"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vMaxYearEnd))}, learningnetwork = p() >};
      let vCount_Respondent_Topic_Current_Network = Count(distinct $(vSet_Respondent_Topic_Current_Network) respondentid);
      let vPercMP_Respondent_Topic_Current_Network = RangeAvg(Sum($(vSet_Respondent_Topic_Current_Network) NHighest_1)/Sum($(vSet_Respondent_Topic_Current_Network) NCompleted_1), Sum($(vSet_Respondent_Topic_Current_Network) NHighest_2)/Sum($(vSet_Respondent_Topic_Current_Network) NCompleted_2), Sum($(vSet_Respondent_Topic_Current_Network) NHighest_3)/Sum($(vSet_Respondent_Topic_Current_Network) NCompleted_3), Sum($(vSet_Respondent_Topic_Current_Network) NHighest_4)/Sum($(vSet_Respondent_Topic_Current_Network) NCompleted_4), Sum($(vSet_Respondent_Topic_Current_Network) NHighest_5)/Sum($(vSet_Respondent_Topic_Current_Network) NCompleted_5), Sum($(vSet_Respondent_Topic_Current_Network) NHighest_6)/Sum($(vSet_Respondent_Topic_Current_Network) NCompleted_6), Sum($(vSet_Respondent_Topic_Current_Network) NHighest_7)/Sum($(vSet_Respondent_Topic_Current_Network) NCompleted_7));

    // YOY
    let vmmPercMP_Respondent_Topic_YOY = Num($(vmmPercMP_Respondent_Topic_Current) - $(vmmPercMP_Respondent_Topic_Previous),  '#.#%');

  //// Selected Topic each respondent
    /// Current Year
      let vSet_Student_Topic_Current = {<surveyTypeForDisplay={"Student"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vMaxYearEnd))}>};
      let vCount_Student_Topic_Current = Count(distinct $(vSet_Student_Topic_Current) respondentid);
      let vPercMP_Student_Topic_Current = RangeAvg(Sum($(vSet_Student_Topic_Current) NHighest_1)/Sum($(vSet_Student_Topic_Current) NCompleted_1), Sum($(vSet_Student_Topic_Current) NHighest_2)/Sum($(vSet_Student_Topic_Current) NCompleted_2), Sum($(vSet_Student_Topic_Current) NHighest_3)/Sum($(vSet_Student_Topic_Current) NCompleted_3), Sum($(vSet_Student_Topic_Current) NHighest_4)/Sum($(vSet_Student_Topic_Current) NCompleted_4), Sum($(vSet_Student_Topic_Current) NHighest_5)/Sum($(vSet_Student_Topic_Current) NCompleted_5), Sum($(vSet_Student_Topic_Current) NHighest_6)/Sum($(vSet_Student_Topic_Current) NCompleted_6), Sum($(vSet_Student_Topic_Current) NHighest_7)/Sum($(vSet_Student_Topic_Current) NCompleted_7));
      let vmmPercMP_Student_Topic_Current = Num(IF($(vMinStudents) <= $(vCount_Student_Topic_Current), $(vPercMP_Student_Topic_Current), Null()),'#.#%');
      let vmmPercMP_Student_Topic_Current_Neg = Num(IF($(vMinStudents) <= $(vCount_Student_Topic_Current), $(vPercMP_Student_Topic_Current), -1),'#.#%');
      
      let vSet_Parent_Topic_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vMaxYearEnd))}>};
      let vCount_Parent_Topic_Current = Count(distinct $(vSet_Parent_Topic_Current) respondentid);
      let vPercMP_Parent_Topic_Current = RangeAvg(Sum($(vSet_Parent_Topic_Current) NHighest_1)/Sum($(vSet_Parent_Topic_Current) NCompleted_1), Sum($(vSet_Parent_Topic_Current) NHighest_2)/Sum($(vSet_Parent_Topic_Current) NCompleted_2), Sum($(vSet_Parent_Topic_Current) NHighest_3)/Sum($(vSet_Parent_Topic_Current) NCompleted_3), Sum($(vSet_Parent_Topic_Current) NHighest_4)/Sum($(vSet_Parent_Topic_Current) NCompleted_4), Sum($(vSet_Parent_Topic_Current) NHighest_5)/Sum($(vSet_Parent_Topic_Current) NCompleted_5), Sum($(vSet_Parent_Topic_Current) NHighest_6)/Sum($(vSet_Parent_Topic_Current) NCompleted_6), Sum($(vSet_Parent_Topic_Current) NHighest_7)/Sum($(vSet_Parent_Topic_Current) NCompleted_7));
      let vmmPercMP_Parent_Topic_Current = Num(IF($(vMinParents) <= $(vCount_Parent_Topic_Current), $(vPercMP_Parent_Topic_Current), Null()),'#.#%');
      let vmmPercMP_Parent_Topic_Current_Neg = Num(IF($(vMinParents) <= $(vCount_Parent_Topic_Current), $(vPercMP_Parent_Topic_Current), -1),'#.#%');
      
      let vSet_Teacher_Topic_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vMaxYearEnd))}>};
      let vCount_Teacher_Topic_Current = Count(distinct $(vSet_Teacher_Topic_Current) respondentid);
      let vPercMP_Teacher_Topic_Current = RangeAvg(Sum($(vSet_Teacher_Topic_Current) NHighest_1)/Sum($(vSet_Teacher_Topic_Current) NCompleted_1), Sum($(vSet_Teacher_Topic_Current) NHighest_2)/Sum($(vSet_Teacher_Topic_Current) NCompleted_2), Sum($(vSet_Teacher_Topic_Current) NHighest_3)/Sum($(vSet_Teacher_Topic_Current) NCompleted_3), Sum($(vSet_Teacher_Topic_Current) NHighest_4)/Sum($(vSet_Teacher_Topic_Current) NCompleted_4), Sum($(vSet_Teacher_Topic_Current) NHighest_5)/Sum($(vSet_Teacher_Topic_Current) NCompleted_5), Sum($(vSet_Teacher_Topic_Current) NHighest_6)/Sum($(vSet_Teacher_Topic_Current) NCompleted_6), Sum($(vSet_Teacher_Topic_Current) NHighest_7)/Sum($(vSet_Teacher_Topic_Current) NCompleted_7));
      let vmmPercMP_Teacher_Topic_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Topic_Current), $(vPercMP_Teacher_Topic_Current), Null()),'#.#%');
      let vmmPercMP_Teacher_Topic_Current_Neg = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Topic_Current), $(vPercMP_Teacher_Topic_Current), -1),'#.#%');
      
      let vSet_Principal_Topic_Current = {<surveyTypeForDisplay={"Principal"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vMaxYearEnd))}>};
      let vCount_Principal_Topic_Current = Count(distinct $(vSet_Principal_Topic_Current) respondentid);
      let vPercMP_Principal_Topic_Current = RangeAvg(Sum($(vSet_Principal_Topic_Current) NHighest_1)/Sum($(vSet_Principal_Topic_Current) NCompleted_1), Sum($(vSet_Principal_Topic_Current) NHighest_2)/Sum($(vSet_Principal_Topic_Current) NCompleted_2), Sum($(vSet_Principal_Topic_Current) NHighest_3)/Sum($(vSet_Principal_Topic_Current) NCompleted_3), Sum($(vSet_Principal_Topic_Current) NHighest_4)/Sum($(vSet_Principal_Topic_Current) NCompleted_4), Sum($(vSet_Principal_Topic_Current) NHighest_5)/Sum($(vSet_Principal_Topic_Current) NCompleted_5), Sum($(vSet_Principal_Topic_Current) NHighest_6)/Sum($(vSet_Principal_Topic_Current) NCompleted_6), Sum($(vSet_Principal_Topic_Current) NHighest_7)/Sum($(vSet_Principal_Topic_Current) NCompleted_7));
      let vmmPercMP_Principal_Topic_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Topic_Current), $(vPercMP_Principal_Topic_Current), Null()),'#.#%');
      let vmmPercMP_Principal_Topic_Current_Neg = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Topic_Current), $(vPercMP_Principal_Topic_Current), -1),'#.#%');

    /// Previous Year
      let vSet_Student_Topic_Previous = {<surveyTypeForDisplay={"Student"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vLastYearEnd))}>};
      let vCount_Student_Topic_Previous = RangeMax(Sum($(vSet_Student_Topic_Previous) NCompleted_1),Sum($(vSet_Student_Topic_Previous) NCompleted_2), Sum($(vSet_Student_Topic_Previous) NCompleted_3), Sum($(vSet_Student_Topic_Previous) NCompleted_4), Sum($(vSet_Student_Topic_Previous) NCompleted_5), Sum($(vSet_Student_Topic_Previous) NCompleted_6), Sum($(vSet_Student_Topic_Previous) NCompleted_7));
      let vPercMP_Student_Topic_Previous = RangeAvg(Sum($(vSet_Student_Topic_Previous) NHighest_1)/Sum($(vSet_Student_Topic_Previous) NCompleted_1), Sum($(vSet_Student_Topic_Previous) NHighest_2)/Sum($(vSet_Student_Topic_Previous) NCompleted_2), Sum($(vSet_Student_Topic_Previous) NHighest_3)/Sum($(vSet_Student_Topic_Previous) NCompleted_3), Sum($(vSet_Student_Topic_Previous) NHighest_4)/Sum($(vSet_Student_Topic_Previous) NCompleted_4), Sum($(vSet_Student_Topic_Previous) NHighest_5)/Sum($(vSet_Student_Topic_Previous) NCompleted_5), Sum($(vSet_Student_Topic_Previous) NHighest_6)/Sum($(vSet_Student_Topic_Previous) NCompleted_6), Sum($(vSet_Student_Topic_Previous) NHighest_7)/Sum($(vSet_Student_Topic_Previous) NCompleted_7));
      let vmmPercMP_Student_Topic_Previous = Num(IF($(vMinStudents) <= $(vCount_Student_Topic_Previous), $(vPercMP_Student_Topic_Previous), Null()),'#.#%');
      
      let vSet_Parent_Topic_Previous = {<surveyTypeForDisplay={"Parent"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vLastYearEnd))}>};
      let vCount_Parent_Topic_Previous = RangeMax(Sum($(vSet_Parent_Topic_Previous) NCompleted_1),Sum($(vSet_Parent_Topic_Previous) NCompleted_2), Sum($(vSet_Parent_Topic_Previous) NCompleted_3), Sum($(vSet_Parent_Topic_Previous) NCompleted_4), Sum($(vSet_Parent_Topic_Previous) NCompleted_5), Sum($(vSet_Parent_Topic_Previous) NCompleted_6), Sum($(vSet_Parent_Topic_Previous) NCompleted_7));
      let vPercMP_Parent_Topic_Previous = RangeAvg(Sum($(vSet_Parent_Topic_Previous) NHighest_1)/Sum($(vSet_Parent_Topic_Previous) NCompleted_1), Sum($(vSet_Parent_Topic_Previous) NHighest_2)/Sum($(vSet_Parent_Topic_Previous) NCompleted_2), Sum($(vSet_Parent_Topic_Previous) NHighest_3)/Sum($(vSet_Parent_Topic_Previous) NCompleted_3), Sum($(vSet_Parent_Topic_Previous) NHighest_4)/Sum($(vSet_Parent_Topic_Previous) NCompleted_4), Sum($(vSet_Parent_Topic_Previous) NHighest_5)/Sum($(vSet_Parent_Topic_Previous) NCompleted_5), Sum($(vSet_Parent_Topic_Previous) NHighest_6)/Sum($(vSet_Parent_Topic_Previous) NCompleted_6), Sum($(vSet_Parent_Topic_Previous) NHighest_7)/Sum($(vSet_Parent_Topic_Previous) NCompleted_7));
      let vmmPercMP_Parent_Topic_Previous = Num(IF($(vMinParents) <= $(vCount_Parent_Topic_Previous), $(vPercMP_Parent_Topic_Previous), Null()),'#.#%');
      
      let vSet_Teacher_Topic_Previous = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vLastYearEnd))}>};
      let vCount_Teacher_Topic_Previous = RangeMax(Sum($(vSet_Teacher_Topic_Previous) NCompleted_1),Sum($(vSet_Teacher_Topic_Previous) NCompleted_2), Sum($(vSet_Teacher_Topic_Previous) NCompleted_3), Sum($(vSet_Teacher_Topic_Previous) NCompleted_4), Sum($(vSet_Teacher_Topic_Previous) NCompleted_5), Sum($(vSet_Teacher_Topic_Previous) NCompleted_6), Sum($(vSet_Teacher_Topic_Previous) NCompleted_7));
      let vPercMP_Teacher_Topic_Previous = RangeAvg(Sum($(vSet_Teacher_Topic_Previous) NHighest_1)/Sum($(vSet_Teacher_Topic_Previous) NCompleted_1), Sum($(vSet_Teacher_Topic_Previous) NHighest_2)/Sum($(vSet_Teacher_Topic_Previous) NCompleted_2), Sum($(vSet_Teacher_Topic_Previous) NHighest_3)/Sum($(vSet_Teacher_Topic_Previous) NCompleted_3), Sum($(vSet_Teacher_Topic_Previous) NHighest_4)/Sum($(vSet_Teacher_Topic_Previous) NCompleted_4), Sum($(vSet_Teacher_Topic_Previous) NHighest_5)/Sum($(vSet_Teacher_Topic_Previous) NCompleted_5), Sum($(vSet_Teacher_Topic_Previous) NHighest_6)/Sum($(vSet_Teacher_Topic_Previous) NCompleted_6), Sum($(vSet_Teacher_Topic_Previous) NHighest_7)/Sum($(vSet_Teacher_Topic_Previous) NCompleted_7));
      let vmmPercMP_Teacher_Topic_Previous = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Topic_Previous), $(vPercMP_Teacher_Topic_Previous), Null()),'#.#%');
      
      let vSet_Principal_Topic_Previous = {<surveyTypeForDisplay={"Principal"}, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vLastYearEnd))}>};
      let vCount_Principal_Topic_Previous = RangeMax(Sum($(vSet_Principal_Topic_Previous) NCompleted_1),Sum($(vSet_Principal_Topic_Previous) NCompleted_2), Sum($(vSet_Principal_Topic_Previous) NCompleted_3), Sum($(vSet_Principal_Topic_Previous) NCompleted_4), Sum($(vSet_Principal_Topic_Previous) NCompleted_5), Sum($(vSet_Principal_Topic_Previous) NCompleted_6), Sum($(vSet_Principal_Topic_Previous) NCompleted_7));
      let vPercMP_Principal_Topic_Previous = RangeAvg(Sum($(vSet_Principal_Topic_Previous) NHighest_1)/Sum($(vSet_Principal_Topic_Previous) NCompleted_1), Sum($(vSet_Principal_Topic_Previous) NHighest_2)/Sum($(vSet_Principal_Topic_Previous) NCompleted_2), Sum($(vSet_Principal_Topic_Previous) NHighest_3)/Sum($(vSet_Principal_Topic_Previous) NCompleted_3), Sum($(vSet_Principal_Topic_Previous) NHighest_4)/Sum($(vSet_Principal_Topic_Previous) NCompleted_4), Sum($(vSet_Principal_Topic_Previous) NHighest_5)/Sum($(vSet_Principal_Topic_Previous) NCompleted_5), Sum($(vSet_Principal_Topic_Previous) NHighest_6)/Sum($(vSet_Principal_Topic_Previous) NCompleted_6), Sum($(vSet_Principal_Topic_Previous) NHighest_7)/Sum($(vSet_Principal_Topic_Previous) NCompleted_7));
      let vmmPercMP_Principal_Topic_Previous = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Topic_Previous), $(vPercMP_Principal_Topic_Previous), Null()),'#.#%');

    /// AllYears
      let vSet_Student_Topic_AllYears = {<surveyTypeForDisplay={"Student"}, questionconstruct={$(vCurrentTopic)}, YearEnd=>};
      let vCount_Student_Topic_AllYears = RangeMax(Sum($(vSet_Student_Topic_AllYears) NCompleted_1),Sum($(vSet_Student_Topic_AllYears) NCompleted_2), Sum($(vSet_Student_Topic_AllYears) NCompleted_3), Sum($(vSet_Student_Topic_AllYears) NCompleted_4), Sum($(vSet_Student_Topic_AllYears) NCompleted_5), Sum($(vSet_Student_Topic_AllYears) NCompleted_6), Sum($(vSet_Student_Topic_AllYears) NCompleted_7));
      let vPercMP_Student_Topic_AllYears = RangeAvg(Sum($(vSet_Student_Topic_AllYears) NHighest_1)/Sum($(vSet_Student_Topic_AllYears) NCompleted_1), Sum($(vSet_Student_Topic_AllYears) NHighest_2)/Sum($(vSet_Student_Topic_AllYears) NCompleted_2), Sum($(vSet_Student_Topic_AllYears) NHighest_3)/Sum($(vSet_Student_Topic_AllYears) NCompleted_3), Sum($(vSet_Student_Topic_AllYears) NHighest_4)/Sum($(vSet_Student_Topic_AllYears) NCompleted_4), Sum($(vSet_Student_Topic_AllYears) NHighest_5)/Sum($(vSet_Student_Topic_AllYears) NCompleted_5), Sum($(vSet_Student_Topic_AllYears) NHighest_6)/Sum($(vSet_Student_Topic_AllYears) NCompleted_6), Sum($(vSet_Student_Topic_AllYears) NHighest_7)/Sum($(vSet_Student_Topic_AllYears) NCompleted_7));
      let vmmPercMP_Student_Topic_AllYears = Num(IF($(vMinStudents) <= $(vCount_Student_Topic_AllYears), $(vPercMP_Student_Topic_AllYears), Null()),'#.#%');
      
      let vSet_Parent_Topic_AllYears = {<surveyTypeForDisplay={"Parent"}, questionconstruct={$(vCurrentTopic)}, YearEnd=>};
      let vCount_Parent_Topic_AllYears = RangeMax(Sum($(vSet_Parent_Topic_AllYears) NCompleted_1),Sum($(vSet_Parent_Topic_AllYears) NCompleted_2), Sum($(vSet_Parent_Topic_AllYears) NCompleted_3), Sum($(vSet_Parent_Topic_AllYears) NCompleted_4), Sum($(vSet_Parent_Topic_AllYears) NCompleted_5), Sum($(vSet_Parent_Topic_AllYears) NCompleted_6), Sum($(vSet_Parent_Topic_AllYears) NCompleted_7));
      let vPercMP_Parent_Topic_AllYears = RangeAvg(Sum($(vSet_Parent_Topic_AllYears) NHighest_1)/Sum($(vSet_Parent_Topic_AllYears) NCompleted_1), Sum($(vSet_Parent_Topic_AllYears) NHighest_2)/Sum($(vSet_Parent_Topic_AllYears) NCompleted_2), Sum($(vSet_Parent_Topic_AllYears) NHighest_3)/Sum($(vSet_Parent_Topic_AllYears) NCompleted_3), Sum($(vSet_Parent_Topic_AllYears) NHighest_4)/Sum($(vSet_Parent_Topic_AllYears) NCompleted_4), Sum($(vSet_Parent_Topic_AllYears) NHighest_5)/Sum($(vSet_Parent_Topic_AllYears) NCompleted_5), Sum($(vSet_Parent_Topic_AllYears) NHighest_6)/Sum($(vSet_Parent_Topic_AllYears) NCompleted_6), Sum($(vSet_Parent_Topic_AllYears) NHighest_7)/Sum($(vSet_Parent_Topic_AllYears) NCompleted_7));
      let vmmPercMP_Parent_Topic_AllYears = Num(IF($(vMinParents) <= $(vCount_Parent_Topic_AllYears), $(vPercMP_Parent_Topic_AllYears), Null()),'#.#%');
      
      let vSet_Teacher_Topic_AllYears = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={$(vCurrentTopic)}, YearEnd=>};
      let vCount_Teacher_Topic_AllYears = RangeMax(Sum($(vSet_Teacher_Topic_AllYears) NCompleted_1),Sum($(vSet_Teacher_Topic_AllYears) NCompleted_2), Sum($(vSet_Teacher_Topic_AllYears) NCompleted_3), Sum($(vSet_Teacher_Topic_AllYears) NCompleted_4), Sum($(vSet_Teacher_Topic_AllYears) NCompleted_5), Sum($(vSet_Teacher_Topic_AllYears) NCompleted_6), Sum($(vSet_Teacher_Topic_AllYears) NCompleted_7));
      let vPercMP_Teacher_Topic_AllYears = RangeAvg(Sum($(vSet_Teacher_Topic_AllYears) NHighest_1)/Sum($(vSet_Teacher_Topic_AllYears) NCompleted_1), Sum($(vSet_Teacher_Topic_AllYears) NHighest_2)/Sum($(vSet_Teacher_Topic_AllYears) NCompleted_2), Sum($(vSet_Teacher_Topic_AllYears) NHighest_3)/Sum($(vSet_Teacher_Topic_AllYears) NCompleted_3), Sum($(vSet_Teacher_Topic_AllYears) NHighest_4)/Sum($(vSet_Teacher_Topic_AllYears) NCompleted_4), Sum($(vSet_Teacher_Topic_AllYears) NHighest_5)/Sum($(vSet_Teacher_Topic_AllYears) NCompleted_5), Sum($(vSet_Teacher_Topic_AllYears) NHighest_6)/Sum($(vSet_Teacher_Topic_AllYears) NCompleted_6), Sum($(vSet_Teacher_Topic_AllYears) NHighest_7)/Sum($(vSet_Teacher_Topic_AllYears) NCompleted_7));
      let vmmPercMP_Teacher_Topic_AllYears = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Topic_AllYears), $(vPercMP_Teacher_Topic_AllYears), Null()),'#.#%');
      
      let vSet_Principal_Topic_AllYears = {<surveyTypeForDisplay={"Principal"}, questionconstruct={$(vCurrentTopic)}, YearEnd=>};
      let vCount_Principal_Topic_AllYears = RangeMax(Sum($(vSet_Principal_Topic_AllYears) NCompleted_1),Sum($(vSet_Principal_Topic_AllYears) NCompleted_2), Sum($(vSet_Principal_Topic_AllYears) NCompleted_3), Sum($(vSet_Principal_Topic_AllYears) NCompleted_4), Sum($(vSet_Principal_Topic_AllYears) NCompleted_5), Sum($(vSet_Principal_Topic_AllYears) NCompleted_6), Sum($(vSet_Principal_Topic_AllYears) NCompleted_7));
      let vPercMP_Principal_Topic_AllYears = RangeAvg(Sum($(vSet_Principal_Topic_AllYears) NHighest_1)/Sum($(vSet_Principal_Topic_AllYears) NCompleted_1), Sum($(vSet_Principal_Topic_AllYears) NHighest_2)/Sum($(vSet_Principal_Topic_AllYears) NCompleted_2), Sum($(vSet_Principal_Topic_AllYears) NHighest_3)/Sum($(vSet_Principal_Topic_AllYears) NCompleted_3), Sum($(vSet_Principal_Topic_AllYears) NHighest_4)/Sum($(vSet_Principal_Topic_AllYears) NCompleted_4), Sum($(vSet_Principal_Topic_AllYears) NHighest_5)/Sum($(vSet_Principal_Topic_AllYears) NCompleted_5), Sum($(vSet_Principal_Topic_AllYears) NHighest_6)/Sum($(vSet_Principal_Topic_AllYears) NCompleted_6), Sum($(vSet_Principal_Topic_AllYears) NHighest_7)/Sum($(vSet_Principal_Topic_AllYears) NCompleted_7));
      let vmmPercMP_Principal_Topic_AllYears = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Topic_AllYears), $(vPercMP_Principal_Topic_AllYears), Null()),'#.#%');
  
  //// Selected Topic, each respondent
      let vmmCount_Responded_Student_Topic = Num(Sum({$<surveyTypeForDisplay = {"Student"}, questionconstruct={$(vCurrentTopic)}, year= >} responded), '#0.#');
      let vmmCount_Responded_Parent_Topic = Num(Sum({$<surveyTypeForDisplay = {"Parent"}, questionconstruct={$(vCurrentTopic)}, year= >} responded), '#0.#');
      let vmmCount_Responded_Teacher_Topic = Num(Sum({$<surveyTypeForDisplay = {"Teacher"}, questionconstruct={$(vCurrentTopic)}, year= >} responded),'#0.#');
      let vmmCount_Responded_Principal_Topic = Num(Sum({$<surveyTypeForDisplay = {"Principal"}, questionconstruct={$(vCurrentTopic)}, year= >} responded),'#0.#');

  //// All Respondents and Selected Topic
    /// Current Year
      let vSet_AnyRespondent_Topic_Current = {<surveyTypeForDisplay=, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vMaxYearEnd))}>};
      let vCount_AnyRespondent_Topic_Current = Count(distinct $(vSet_AnyRespondent_Topic_Current) respondentid);
      let vPercMP_AnyRespondent_Topic_Current = RangeAvg(Sum($(vSet_AnyRespondent_Topic_Current) NHighest_1)/Sum($(vSet_AnyRespondent_Topic_Current) NCompleted_1), Sum($(vSet_AnyRespondent_Topic_Current) NHighest_2)/Sum($(vSet_AnyRespondent_Topic_Current) NCompleted_2), Sum($(vSet_AnyRespondent_Topic_Current) NHighest_3)/Sum($(vSet_AnyRespondent_Topic_Current) NCompleted_3), Sum($(vSet_AnyRespondent_Topic_Current) NHighest_4)/Sum($(vSet_AnyRespondent_Topic_Current) NCompleted_4), Sum($(vSet_AnyRespondent_Topic_Current) NHighest_5)/Sum($(vSet_AnyRespondent_Topic_Current) NCompleted_5), Sum($(vSet_AnyRespondent_Topic_Current) NHighest_6)/Sum($(vSet_AnyRespondent_Topic_Current) NCompleted_6), Sum($(vSet_AnyRespondent_Topic_Current) NHighest_7)/Sum($(vSet_AnyRespondent_Topic_Current) NCompleted_7));
      let vmmPercMP_AnyRespondent_Topic_Current = Num(IF(surveyTypeForDisplay = 'Student', IF($(vMinStudents) <= $(vCount_Student_Topic_Current), $(vPercMP_Student_Topic_Current), Null()), IF(surveyTypeForDisplay = 'Parent', IF($(vMinParents) <= $(vCount_Parent_Topic_Current), $(vPercMP_Parent_Topic_Current), Null()), IF(surveyTypeForDisplay = 'Teacher', IF($(vMinTeachers) <= $(vCount_Teacher_Topic_Current), $(vPercMP_Teacher_Topic_Current), Null()), IF(surveyTypeForDisplay = 'Principal', IF($(vMinPrincipals) <= $(vCount_Principal_Topic_Current), $(vPercMP_Principal_Topic_Current), Null()), 5)))),'#.#%');
    
    /// Previous Year
      let vSet_AnyRespondent_Topic_Previous = {<surveyTypeForDisplay=, questionconstruct={$(vCurrentTopic)}, YearEnd={$(=$(vLastYearEnd))}>};
      let vCount_AnyRespondent_Topic_Previous = RangeMax(Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_1),Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_2), Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_3), Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_4), Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_5), Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_6), Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_7));
      let vPercMP_AnyRespondent_Topic_Previous = RangeAvg(Sum($(vSet_AnyRespondent_Topic_Previous) NHighest_1)/Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_1), Sum($(vSet_AnyRespondent_Topic_Previous) NHighest_2)/Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_2), Sum($(vSet_AnyRespondent_Topic_Previous) NHighest_3)/Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_3), Sum($(vSet_AnyRespondent_Topic_Previous) NHighest_4)/Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_4), Sum($(vSet_AnyRespondent_Topic_Previous) NHighest_5)/Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_5), Sum($(vSet_AnyRespondent_Topic_Previous) NHighest_6)/Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_6), Sum($(vSet_AnyRespondent_Topic_Previous) NHighest_7)/Sum($(vSet_AnyRespondent_Topic_Previous) NCompleted_7));
      let vmmPercMP_AnyRespondent_Topic_Previous = Num(IF(surveyTypeForDisplay = 'Student', IF($(vMinStudents) <= $(vCount_Student_Topic_Previous), $(vPercMP_Student_Topic_Previous), Null()), IF(surveyTypeForDisplay = 'Parent', IF($(vMinParents) <= $(vCount_Parent_Topic_Previous), $(vPercMP_Parent_Topic_Previous), Null()), IF(surveyTypeForDisplay = 'Teacher', IF($(vMinTeachers) <= $(vCount_Teacher_Topic_Previous), $(vPercMP_Teacher_Topic_Previous), Null()), IF(surveyTypeForDisplay = 'Principal', IF($(vMinPrincipals) <= $(vCount_Principal_Topic_Previous), $(vPercMP_Principal_Topic_Previous), Null()), 5)))),'#.#%');
    
  //// each Topic each respondent  
    /// Current Year   
      // Climate 
        let vSet_Student_Climate_Current = {<surveyTypeForDisplay={"Student"}, questionconstruct={"School Climate"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Student_Climate_Current = Count(distinct $(vSet_Student_Climate_Current) respondentid);
        let vPercMP_Student_Climate_Current = RangeAvg(Sum($(vSet_Student_Climate_Current) NHighest_1)/Sum($(vSet_Student_Climate_Current) NCompleted_1), Sum($(vSet_Student_Climate_Current) NHighest_2)/Sum($(vSet_Student_Climate_Current) NCompleted_2), Sum($(vSet_Student_Climate_Current) NHighest_3)/Sum($(vSet_Student_Climate_Current) NCompleted_3), Sum($(vSet_Student_Climate_Current) NHighest_4)/Sum($(vSet_Student_Climate_Current) NCompleted_4), Sum($(vSet_Student_Climate_Current) NHighest_5)/Sum($(vSet_Student_Climate_Current) NCompleted_5), Sum($(vSet_Student_Climate_Current) NHighest_6)/Sum($(vSet_Student_Climate_Current) NCompleted_6), Sum($(vSet_Student_Climate_Current) NHighest_7)/Sum($(vSet_Student_Climate_Current) NCompleted_7));
        let vmmPercMP_Student_Climate_Current = Num(IF($(vMinStudents) <= $(vCount_Student_Climate_Current), $(vPercMP_Student_Climate_Current), Null()),'#.#%');
        let vAvgScore_Student_Climate_Current = RangeAvg(Sum($(vSet_Student_Climate_Current) AvgScaledScore_1)/Sum($(vSet_Student_Climate_Current) NCompleted_1), Sum($(vSet_Student_Climate_Current) AvgScaledScore_2)/Sum($(vSet_Student_Climate_Current) NCompleted_2), Sum($(vSet_Student_Climate_Current) AvgScaledScore_3)/Sum($(vSet_Student_Climate_Current) NCompleted_3), Sum($(vSet_Student_Climate_Current) AvgScaledScore_4)/Sum($(vSet_Student_Climate_Current) NCompleted_4), Sum($(vSet_Student_Climate_Current) AvgScaledScore_5)/Sum($(vSet_Student_Climate_Current) NCompleted_5), Sum($(vSet_Student_Climate_Current) AvgScaledScore_6)/Sum($(vSet_Student_Climate_Current) NCompleted_6), Sum($(vSet_Student_Climate_Current) AvgScaledScore_7)/Sum($(vSet_Student_Climate_Current) NCompleted_7));
        let vmmAvgScore_Student_Climate_Current = Num(IF($(vMinStudents) <= $(vCount_Student_Climate_Current), $(vAvgScore_Student_Climate_Current), Null()),'##0.##');
        
        let vSet_Parent_Climate_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"School Climate"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_Climate_Current = Count(distinct $(vSet_Parent_Climate_Current) respondentid);
        let vPercMP_Parent_Climate_Current = RangeAvg(Sum($(vSet_Parent_Climate_Current) NHighest_1)/Sum($(vSet_Parent_Climate_Current) NCompleted_1), Sum($(vSet_Parent_Climate_Current) NHighest_2)/Sum($(vSet_Parent_Climate_Current) NCompleted_2), Sum($(vSet_Parent_Climate_Current) NHighest_3)/Sum($(vSet_Parent_Climate_Current) NCompleted_3), Sum($(vSet_Parent_Climate_Current) NHighest_4)/Sum($(vSet_Parent_Climate_Current) NCompleted_4), Sum($(vSet_Parent_Climate_Current) NHighest_5)/Sum($(vSet_Parent_Climate_Current) NCompleted_5), Sum($(vSet_Parent_Climate_Current) NHighest_6)/Sum($(vSet_Parent_Climate_Current) NCompleted_6), Sum($(vSet_Parent_Climate_Current) NHighest_7)/Sum($(vSet_Parent_Climate_Current) NCompleted_7));
        let vmmPercMP_Parent_Climate_Current = Num(IF($(vMinParents) <= $(vCount_Parent_Climate_Current), $(vPercMP_Parent_Climate_Current), Null()),'#.#%');
        let vAvgScore_Parent_Climate_Current = RangeAvg(Sum($(vSet_Parent_Climate_Current) AvgScaledScore_1)/Sum($(vSet_Parent_Climate_Current) NCompleted_1), Sum($(vSet_Parent_Climate_Current) AvgScaledScore_2)/Sum($(vSet_Parent_Climate_Current) NCompleted_2), Sum($(vSet_Parent_Climate_Current) AvgScaledScore_3)/Sum($(vSet_Parent_Climate_Current) NCompleted_3), Sum($(vSet_Parent_Climate_Current) AvgScaledScore_4)/Sum($(vSet_Parent_Climate_Current) NCompleted_4), Sum($(vSet_Parent_Climate_Current) AvgScaledScore_5)/Sum($(vSet_Parent_Climate_Current) NCompleted_5), Sum($(vSet_Parent_Climate_Current) AvgScaledScore_6)/Sum($(vSet_Parent_Climate_Current) NCompleted_6), Sum($(vSet_Parent_Climate_Current) AvgScaledScore_7)/Sum($(vSet_Parent_Climate_Current) NCompleted_7));
        let vmmAvgScore_Parent_Climate_Current = Num(IF($(vMinParents) <= $(vCount_Parent_Climate_Current), $(vAvgScore_Parent_Climate_Current), Null()),'##0.##');
      
        let vSet_Teacher_Climate_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Climate"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_Climate_Current = Count(distinct $(vSet_Teacher_Climate_Current) respondentid);
        let vPercMP_Teacher_Climate_Current = RangeAvg(Sum($(vSet_Teacher_Climate_Current) NHighest_1)/Sum($(vSet_Teacher_Climate_Current) NCompleted_1), Sum($(vSet_Teacher_Climate_Current) NHighest_2)/Sum($(vSet_Teacher_Climate_Current) NCompleted_2), Sum($(vSet_Teacher_Climate_Current) NHighest_3)/Sum($(vSet_Teacher_Climate_Current) NCompleted_3), Sum($(vSet_Teacher_Climate_Current) NHighest_4)/Sum($(vSet_Teacher_Climate_Current) NCompleted_4), Sum($(vSet_Teacher_Climate_Current) NHighest_5)/Sum($(vSet_Teacher_Climate_Current) NCompleted_5), Sum($(vSet_Teacher_Climate_Current) NHighest_6)/Sum($(vSet_Teacher_Climate_Current) NCompleted_6), Sum($(vSet_Teacher_Climate_Current) NHighest_7)/Sum($(vSet_Teacher_Climate_Current) NCompleted_7));
        let vmmPercMP_Teacher_Climate_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Climate_Current), $(vPercMP_Teacher_Climate_Current), Null()),'#.#%');
        let vAvgScore_Teacher_Climate_Current = RangeAvg(Sum($(vSet_Teacher_Climate_Current) AvgScaledScore_1)/Sum($(vSet_Teacher_Climate_Current) NCompleted_1), Sum($(vSet_Teacher_Climate_Current) AvgScaledScore_2)/Sum($(vSet_Teacher_Climate_Current) NCompleted_2), Sum($(vSet_Teacher_Climate_Current) AvgScaledScore_3)/Sum($(vSet_Teacher_Climate_Current) NCompleted_3), Sum($(vSet_Teacher_Climate_Current) AvgScaledScore_4)/Sum($(vSet_Teacher_Climate_Current) NCompleted_4), Sum($(vSet_Teacher_Climate_Current) AvgScaledScore_5)/Sum($(vSet_Teacher_Climate_Current) NCompleted_5), Sum($(vSet_Teacher_Climate_Current) AvgScaledScore_6)/Sum($(vSet_Teacher_Climate_Current) NCompleted_6), Sum($(vSet_Teacher_Climate_Current) AvgScaledScore_7)/Sum($(vSet_Teacher_Climate_Current) NCompleted_7));
        let vmmAvgScore_Teacher_Climate_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Climate_Current), $(vAvgScore_Teacher_Climate_Current), Null()),'##0.##');
        
        let vSet_Principal_Climate_Current = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"School Climate"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Principal_Climate_Current = Count(distinct $(vSet_Principal_Climate_Current) respondentid);
        let vPercMP_Principal_Climate_Current = RangeAvg(Sum($(vSet_Principal_Climate_Current) NHighest_1)/Sum($(vSet_Principal_Climate_Current) NCompleted_1), Sum($(vSet_Principal_Climate_Current) NHighest_2)/Sum($(vSet_Principal_Climate_Current) NCompleted_2), Sum($(vSet_Principal_Climate_Current) NHighest_3)/Sum($(vSet_Principal_Climate_Current) NCompleted_3), Sum($(vSet_Principal_Climate_Current) NHighest_4)/Sum($(vSet_Principal_Climate_Current) NCompleted_4), Sum($(vSet_Principal_Climate_Current) NHighest_5)/Sum($(vSet_Principal_Climate_Current) NCompleted_5), Sum($(vSet_Principal_Climate_Current) NHighest_6)/Sum($(vSet_Principal_Climate_Current) NCompleted_6), Sum($(vSet_Principal_Climate_Current) NHighest_7)/Sum($(vSet_Principal_Climate_Current) NCompleted_7));
        let vmmPercMP_Principal_Climate_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Climate_Current), $(vPercMP_Principal_Climate_Current), Null()),'#.#%');
        let vAvgScore_Principal_Climate_Current = RangeAvg(Sum($(vSet_Principal_Climate_Current) AvgScaledScore_1)/Sum($(vSet_Principal_Climate_Current) NCompleted_1), Sum($(vSet_Principal_Climate_Current) AvgScaledScore_2)/Sum($(vSet_Principal_Climate_Current) NCompleted_2), Sum($(vSet_Principal_Climate_Current) AvgScaledScore_3)/Sum($(vSet_Principal_Climate_Current) NCompleted_3), Sum($(vSet_Principal_Climate_Current) AvgScaledScore_4)/Sum($(vSet_Principal_Climate_Current) NCompleted_4), Sum($(vSet_Principal_Climate_Current) AvgScaledScore_5)/Sum($(vSet_Principal_Climate_Current) NCompleted_5), Sum($(vSet_Principal_Climate_Current) AvgScaledScore_6)/Sum($(vSet_Principal_Climate_Current) NCompleted_6), Sum($(vSet_Principal_Climate_Current) AvgScaledScore_7)/Sum($(vSet_Principal_Climate_Current) NCompleted_7));
        let vmmAvgScore_Principal_Climate_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Climate_Current), $(vAvgScore_Principal_Climate_Current), Null()),'##0.##');
      
        // subconstructs for PSSA scatter
        // Student: Belonging, Bullying, Safety/Building Condition
        let vSet_Student_Climate_Belonging_Current = {<surveyTypeForDisplay={"Student"}, questionconstruct={"School Climate"}, subconstruct={"Belonging"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Student_Climate_Belonging_Current = Count(distinct $(vSet_Student_Climate_Belonging_Current) respondentid);
        let vAvgScore_Student_Climate_Belonging_Current = Sum($(vSet_Student_Climate_Belonging_Current) sumSurveyScaledScore)/Sum($(vSet_Student_Climate_Belonging_Current) CompletedItemCount);
        let vmmAvgScore_Student_Climate_Belonging_Current = Num(IF($(vMinStudents) <= $(vCount_Student_Climate_Belonging_Current), $(vAvgScore_Student_Climate_Belonging_Current), Null()),'##0.##');
        
        let vSet_Student_Climate_Bullying_Current = {<surveyTypeForDisplay={"Student"}, questionconstruct={"School Climate"}, subconstruct={"Bullying"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Student_Climate_Bullying_Current = Count(distinct $(vSet_Student_Climate_Bullying_Current) respondentid);
        let vAvgScore_Student_Climate_Bullying_Current = Sum($(vSet_Student_Climate_Bullying_Current) sumSurveyScaledScore)/Sum($(vSet_Student_Climate_Bullying_Current) CompletedItemCount);
        let vmmAvgScore_Student_Climate_Bullying_Current = Num(IF($(vMinStudents) <= $(vCount_Student_Climate_Bullying_Current), $(vAvgScore_Student_Climate_Bullying_Current), Null()),'##0.##');
        
        let vSet_Student_Climate_Safety_Current = {<surveyTypeForDisplay={"Student"}, questionconstruct={"School Climate"}, subconstruct={"Safety/Building Condition"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Student_Climate_Safety_Current = Count(distinct $(vSet_Student_Climate_Safety_Current) respondentid);
        let vAvgScore_Student_Climate_Safety_Current = Sum($(vSet_Student_Climate_Safety_Current) sumSurveyScaledScore)/Sum($(vSet_Student_Climate_Safety_Current) CompletedItemCount);
        let vmmAvgScore_Student_Climate_Safety_Current = Num(IF($(vMinStudents) <= $(vCount_Student_Climate_Safety_Current), $(vAvgScore_Student_Climate_Safety_Current), Null()),'##0.##');
        
        // Parent: Bullying, Safety/Building Condition
        let vSet_Parent_Climate_Bullying_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"School Climate"}, subconstruct={"Bullying"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_Climate_Bullying_Current = Count(distinct $(vSet_Parent_Climate_Bullying_Current) respondentid);
        let vAvgScore_Parent_Climate_Bullying_Current = Sum($(vSet_Parent_Climate_Bullying_Current) sumSurveyScaledScore)/Sum($(vSet_Parent_Climate_Bullying_Current) CompletedItemCount);
        let vmmAvgScore_Parent_Climate_Bullying_Current = Num(IF($(vMinParents) <= $(vCount_Parent_Climate_Bullying_Current), $(vAvgScore_Parent_Climate_Bullying_Current), Null()),'##0.##');
        
        let vSet_Parent_Climate_Safety_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"School Climate"}, subconstruct={"Safety/Building Condition"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_Climate_Safety_Current = Count(distinct $(vSet_Parent_Climate_Safety_Current) respondentid);
        let vAvgScore_Parent_Climate_Safety_Current = Sum($(vSet_Parent_Climate_Safety_Current) sumSurveyScaledScore)/Sum($(vSet_Parent_Climate_Safety_Current) CompletedItemCount);
        let vmmAvgScore_Parent_Climate_Safety_Current = Num(IF($(vMinParents) <= $(vCount_Parent_Climate_Safety_Current), $(vAvgScore_Parent_Climate_Safety_Current), Null()),'##0.##');
        
        // Teacher: Student-Centered Learning Climate, Respect, Classroom Level Challenges to Student Learning, School Level Challenges, External Challenges
        let vSet_Teacher_Climate_StudentCenteredLearningClimate_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Climate"}, subconstruct={"Student-Centered Learning Climate"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_Climate_StudentCenteredLearningClimate_Current = Count(distinct $(vSet_Teacher_Climate_StudentCenteredLearningClimate_Current) respondentid);
        let vAvgScore_Teacher_Climate_StudentCenteredLearningClimate_Current = Sum($(vSet_Teacher_Climate_StudentCenteredLearningClimate_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_Climate_StudentCenteredLearningClimate_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_Climate_StudentCenteredLearningClimate_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Climate_StudentCenteredLearningClimate_Current), $(vAvgScore_Teacher_Climate_StudentCenteredLearningClimate_Current), Null()),'##0.##');
       
        let vSet_Teacher_Climate_Respect_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Climate"}, subconstruct={"Respect"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_Climate_Respect_Current = Count(distinct $(vSet_Teacher_Climate_Respect_Current) respondentid);
        let vAvgScore_Teacher_Climate_Respect_Current = Sum($(vSet_Teacher_Climate_Respect_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_Climate_Respect_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_Climate_Respect_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Climate_Respect_Current), $(vAvgScore_Teacher_Climate_Respect_Current), Null()),'##0.##');
       
        let vSet_Teacher_Climate_ClassroomLevelChallenges_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Climate"}, subconstruct={"Classroom Level Challenges to Student Learning"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_Climate_ClassroomLevelChallenges_Current = Count(distinct $(vSet_Teacher_Climate_ClassroomLevelChallenges_Current) respondentid);
        let vAvgScore_Teacher_Climate_ClassroomLevelChallenges_Current = Sum($(vSet_Teacher_Climate_ClassroomLevelChallenges_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_Climate_ClassroomLevelChallenges_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_Climate_ClassroomLevelChallenges_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Climate_ClassroomLevelChallenges_Current), $(vAvgScore_Teacher_Climate_ClassroomLevelChallenges_Current), Null()),'##0.##');
       
        let vSet_Teacher_Climate_SchoolLevelChallenges_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Climate"}, subconstruct={"School Level Challenges to Student Learning"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_Climate_SchoolLevelChallenges_Current = Count(distinct $(vSet_Teacher_Climate_SchoolLevelChallenges_Current) respondentid);
        let vAvgScore_Teacher_Climate_SchoolLevelChallenges_Current = Sum($(vSet_Teacher_Climate_SchoolLevelChallenges_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_Climate_SchoolLevelChallenges_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_Climate_SchoolLevelChallenges_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Climate_SchoolLevelChallenges_Current), $(vAvgScore_Teacher_Climate_SchoolLevelChallenges_Current), Null()),'##0.##');

        let vSet_Teacher_Climate_ExternalChallenges_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Climate"}, subconstruct={"External Challenges to Student Learning"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_Climate_ExternalChallenges_Current = Count(distinct $(vSet_Teacher_Climate_ExternalChallenges_Current) respondentid);
        let vAvgScore_Teacher_Climate_ExternalChallenges_Current = Sum($(vSet_Teacher_Climate_ExternalChallenges_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_Climate_ExternalChallenges_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_Climate_ExternalChallenges_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Climate_ExternalChallenges_Current), $(vAvgScore_Teacher_Climate_ExternalChallenges_Current), Null()),'##0.##');
       
      // Instruction 
        let vSet_Student_Instruction_Current = {<surveyTypeForDisplay={"Student"}, questionconstruct={"Instruction"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Student_Instruction_Current = Count(distinct $(vSet_Student_Instruction_Current) respondentid);
        let vPercMP_Student_Instruction_Current = RangeAvg(Sum($(vSet_Student_Instruction_Current) NHighest_1)/Sum($(vSet_Student_Instruction_Current) NCompleted_1), Sum($(vSet_Student_Instruction_Current) NHighest_2)/Sum($(vSet_Student_Instruction_Current) NCompleted_2), Sum($(vSet_Student_Instruction_Current) NHighest_3)/Sum($(vSet_Student_Instruction_Current) NCompleted_3), Sum($(vSet_Student_Instruction_Current) NHighest_4)/Sum($(vSet_Student_Instruction_Current) NCompleted_4), Sum($(vSet_Student_Instruction_Current) NHighest_5)/Sum($(vSet_Student_Instruction_Current) NCompleted_5), Sum($(vSet_Student_Instruction_Current) NHighest_6)/Sum($(vSet_Student_Instruction_Current) NCompleted_6), Sum($(vSet_Student_Instruction_Current) NHighest_7)/Sum($(vSet_Student_Instruction_Current) NCompleted_7));
        let vmmPercMP_Student_Instruction_Current = Num(IF($(vMinStudents) <= $(vCount_Student_Instruction_Current), $(vPercMP_Student_Instruction_Current), Null()),'#.#%');
        let vAvgScore_Student_Instruction_Current = RangeAvg(Sum($(vSet_Student_Instruction_Current) AvgScaledScore_1)/Sum($(vSet_Student_Instruction_Current) NCompleted_1), Sum($(vSet_Student_Instruction_Current) AvgScaledScore_2)/Sum($(vSet_Student_Instruction_Current) NCompleted_2), Sum($(vSet_Student_Instruction_Current) AvgScaledScore_3)/Sum($(vSet_Student_Instruction_Current) NCompleted_3), Sum($(vSet_Student_Instruction_Current) AvgScaledScore_4)/Sum($(vSet_Student_Instruction_Current) NCompleted_4), Sum($(vSet_Student_Instruction_Current) AvgScaledScore_5)/Sum($(vSet_Student_Instruction_Current) NCompleted_5), Sum($(vSet_Student_Instruction_Current) AvgScaledScore_6)/Sum($(vSet_Student_Instruction_Current) NCompleted_6), Sum($(vSet_Student_Instruction_Current) AvgScaledScore_7)/Sum($(vSet_Student_Instruction_Current) NCompleted_7));
        let vmmAvgScore_Student_Instruction_Current = Num(IF($(vMinStudents) <= $(vCount_Student_Instruction_Current), $(vAvgScore_Student_Instruction_Current), Null()),'##0.##');
        
        let vSet_Parent_Instruction_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"Instruction"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_Instruction_Current = Count(distinct $(vSet_Parent_Instruction_Current) respondentid);
        let vPercMP_Parent_Instruction_Current = RangeAvg(Sum($(vSet_Parent_Instruction_Current) NHighest_1)/Sum($(vSet_Parent_Instruction_Current) NCompleted_1), Sum($(vSet_Parent_Instruction_Current) NHighest_2)/Sum($(vSet_Parent_Instruction_Current) NCompleted_2), Sum($(vSet_Parent_Instruction_Current) NHighest_3)/Sum($(vSet_Parent_Instruction_Current) NCompleted_3), Sum($(vSet_Parent_Instruction_Current) NHighest_4)/Sum($(vSet_Parent_Instruction_Current) NCompleted_4), Sum($(vSet_Parent_Instruction_Current) NHighest_5)/Sum($(vSet_Parent_Instruction_Current) NCompleted_5), Sum($(vSet_Parent_Instruction_Current) NHighest_6)/Sum($(vSet_Parent_Instruction_Current) NCompleted_6), Sum($(vSet_Parent_Instruction_Current) NHighest_7)/Sum($(vSet_Parent_Instruction_Current) NCompleted_7));
        let vmmPercMP_Parent_Instruction_Current = Num(IF($(vMinParents) <= $(vCount_Parent_Instruction_Current), $(vPercMP_Parent_Instruction_Current), Null()),'#.#%');
        let vAvgScore_Parent_Instruction_Current = RangeAvg(Sum($(vSet_Parent_Instruction_Current) AvgScaledScore_1)/Sum($(vSet_Parent_Instruction_Current) NCompleted_1), Sum($(vSet_Parent_Instruction_Current) AvgScaledScore_2)/Sum($(vSet_Parent_Instruction_Current) NCompleted_2), Sum($(vSet_Parent_Instruction_Current) AvgScaledScore_3)/Sum($(vSet_Parent_Instruction_Current) NCompleted_3), Sum($(vSet_Parent_Instruction_Current) AvgScaledScore_4)/Sum($(vSet_Parent_Instruction_Current) NCompleted_4), Sum($(vSet_Parent_Instruction_Current) AvgScaledScore_5)/Sum($(vSet_Parent_Instruction_Current) NCompleted_5), Sum($(vSet_Parent_Instruction_Current) AvgScaledScore_6)/Sum($(vSet_Parent_Instruction_Current) NCompleted_6), Sum($(vSet_Parent_Instruction_Current) AvgScaledScore_7)/Sum($(vSet_Parent_Instruction_Current) NCompleted_7));
        let vmmAvgScore_Parent_Instruction_Current = Num(IF($(vMinParents) <= $(vCount_Parent_Instruction_Current), $(vAvgScore_Parent_Instruction_Current), Null()),'##0.##');
        
        let vSet_Teacher_Instruction_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"Instruction"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_Instruction_Current = Count(distinct $(vSet_Teacher_Instruction_Current) respondentid);
        let vPercMP_Teacher_Instruction_Current = RangeAvg(Sum($(vSet_Teacher_Instruction_Current) NHighest_1)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_1), Sum($(vSet_Teacher_Instruction_Current) NHighest_2)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_2), Sum($(vSet_Teacher_Instruction_Current) NHighest_3)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_3), Sum($(vSet_Teacher_Instruction_Current) NHighest_4)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_4), Sum($(vSet_Teacher_Instruction_Current) NHighest_5)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_5), Sum($(vSet_Teacher_Instruction_Current) NHighest_6)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_6), Sum($(vSet_Teacher_Instruction_Current) NHighest_7)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_7));
        let vmmPercMP_Teacher_Instruction_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Instruction_Current), $(vPercMP_Teacher_Instruction_Current), Null()),'#.#%');
        let vAvgScore_Teacher_Instruction_Current = RangeAvg(Sum($(vSet_Teacher_Instruction_Current) AvgScaledScore_1)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_1), Sum($(vSet_Teacher_Instruction_Current) AvgScaledScore_2)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_2), Sum($(vSet_Teacher_Instruction_Current) AvgScaledScore_3)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_3), Sum($(vSet_Teacher_Instruction_Current) AvgScaledScore_4)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_4), Sum($(vSet_Teacher_Instruction_Current) AvgScaledScore_5)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_5), Sum($(vSet_Teacher_Instruction_Current) AvgScaledScore_6)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_6), Sum($(vSet_Teacher_Instruction_Current) AvgScaledScore_7)/Sum($(vSet_Teacher_Instruction_Current) NCompleted_7));
        let vmmAvgScore_Teacher_Instruction_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Instruction_Current), $(vAvgScore_Teacher_Instruction_Current), Null()),'##0.##');
        
        let vSet_Principal_Instruction_Current = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"Instruction"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Principal_Instruction_Current = Count(distinct $(vSet_Principal_Instruction_Current) respondentid);
        let vPercMP_Principal_Instruction_Current = RangeAvg(Sum($(vSet_Principal_Instruction_Current) NHighest_1)/Sum($(vSet_Principal_Instruction_Current) NCompleted_1), Sum($(vSet_Principal_Instruction_Current) NHighest_2)/Sum($(vSet_Principal_Instruction_Current) NCompleted_2), Sum($(vSet_Principal_Instruction_Current) NHighest_3)/Sum($(vSet_Principal_Instruction_Current) NCompleted_3), Sum($(vSet_Principal_Instruction_Current) NHighest_4)/Sum($(vSet_Principal_Instruction_Current) NCompleted_4), Sum($(vSet_Principal_Instruction_Current) NHighest_5)/Sum($(vSet_Principal_Instruction_Current) NCompleted_5), Sum($(vSet_Principal_Instruction_Current) NHighest_6)/Sum($(vSet_Principal_Instruction_Current) NCompleted_6), Sum($(vSet_Principal_Instruction_Current) NHighest_7)/Sum($(vSet_Principal_Instruction_Current) NCompleted_7));
        let vmmPercMP_Principal_Instruction_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Instruction_Current), $(vPercMP_Principal_Instruction_Current), Null()),'#.#%');
        let vAvgScore_Principal_Instruction_Current = RangeAvg(Sum($(vSet_Principal_Instruction_Current) AvgScaledScore_1)/Sum($(vSet_Principal_Instruction_Current) NCompleted_1), Sum($(vSet_Principal_Instruction_Current) AvgScaledScore_2)/Sum($(vSet_Principal_Instruction_Current) NCompleted_2), Sum($(vSet_Principal_Instruction_Current) AvgScaledScore_3)/Sum($(vSet_Principal_Instruction_Current) NCompleted_3), Sum($(vSet_Principal_Instruction_Current) AvgScaledScore_4)/Sum($(vSet_Principal_Instruction_Current) NCompleted_4), Sum($(vSet_Principal_Instruction_Current) AvgScaledScore_5)/Sum($(vSet_Principal_Instruction_Current) NCompleted_5), Sum($(vSet_Principal_Instruction_Current) AvgScaledScore_6)/Sum($(vSet_Principal_Instruction_Current) NCompleted_6), Sum($(vSet_Principal_Instruction_Current) AvgScaledScore_7)/Sum($(vSet_Principal_Instruction_Current) NCompleted_7));
        let vmmAvgScore_Principal_Instruction_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Instruction_Current), $(vAvgScore_Principal_Instruction_Current), Null()),'##0.##');
           
      // Parent/Guardian Community Ties
        let vSet_Parent_CommunityTies_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"Parent/Guardian-Community Ties"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_CommunityTies_Current = Count(distinct $(vSet_Parent_CommunityTies_Current) respondentid);
        let vPercMP_Parent_CommunityTies_Current = RangeAvg(Sum($(vSet_Parent_CommunityTies_Current) NHighest_1)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_1), Sum($(vSet_Parent_CommunityTies_Current) NHighest_2)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_2), Sum($(vSet_Parent_CommunityTies_Current) NHighest_3)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_3), Sum($(vSet_Parent_CommunityTies_Current) NHighest_4)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_4), Sum($(vSet_Parent_CommunityTies_Current) NHighest_5)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_5), Sum($(vSet_Parent_CommunityTies_Current) NHighest_6)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_6), Sum($(vSet_Parent_CommunityTies_Current) NHighest_7)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_7));
        let vmmPercMP_Parent_CommunityTies_Current = Num(IF($(vMinParents) <= $(vCount_Parent_CommunityTies_Current), $(vPercMP_Parent_CommunityTies_Current), Null()),'#.#%');
        let vAvgScore_Parent_CommunityTies_Current = RangeAvg(Sum($(vSet_Parent_CommunityTies_Current) AvgScaledScore_1)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_1), Sum($(vSet_Parent_CommunityTies_Current) AvgScaledScore_2)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_2), Sum($(vSet_Parent_CommunityTies_Current) AvgScaledScore_3)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_3), Sum($(vSet_Parent_CommunityTies_Current) AvgScaledScore_4)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_4), Sum($(vSet_Parent_CommunityTies_Current) AvgScaledScore_5)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_5), Sum($(vSet_Parent_CommunityTies_Current) AvgScaledScore_6)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_6), Sum($(vSet_Parent_CommunityTies_Current) AvgScaledScore_7)/Sum($(vSet_Parent_CommunityTies_Current) NCompleted_7));
        let vmmAvgScore_Parent_CommunityTies_Current = Num(IF($(vMinParents) <= $(vCount_Parent_CommunityTies_Current), $(vAvgScore_Parent_CommunityTies_Current), Null()),'##0.##');
        
        let vSet_Teacher_CommunityTies_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"Parent/Guardian-Community Ties"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_CommunityTies_Current = Count(distinct $(vSet_Teacher_CommunityTies_Current) respondentid);
        let vPercMP_Teacher_CommunityTies_Current = RangeAvg(Sum($(vSet_Teacher_CommunityTies_Current) NHighest_1)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_1), Sum($(vSet_Teacher_CommunityTies_Current) NHighest_2)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_2), Sum($(vSet_Teacher_CommunityTies_Current) NHighest_3)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_3), Sum($(vSet_Teacher_CommunityTies_Current) NHighest_4)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_4), Sum($(vSet_Teacher_CommunityTies_Current) NHighest_5)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_5), Sum($(vSet_Teacher_CommunityTies_Current) NHighest_6)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_6), Sum($(vSet_Teacher_CommunityTies_Current) NHighest_7)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_7));
        let vmmPercMP_Teacher_CommunityTies_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_CommunityTies_Current), $(vPercMP_Teacher_CommunityTies_Current), Null()),'#.#%');
        let vAvgScore_Teacher_CommunityTies_Current = RangeAvg(Sum($(vSet_Teacher_CommunityTies_Current) AvgScaledScore_1)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_1), Sum($(vSet_Teacher_CommunityTies_Current) AvgScaledScore_2)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_2), Sum($(vSet_Teacher_CommunityTies_Current) AvgScaledScore_3)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_3), Sum($(vSet_Teacher_CommunityTies_Current) AvgScaledScore_4)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_4), Sum($(vSet_Teacher_CommunityTies_Current) AvgScaledScore_5)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_5), Sum($(vSet_Teacher_CommunityTies_Current) AvgScaledScore_6)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_6), Sum($(vSet_Teacher_CommunityTies_Current) AvgScaledScore_7)/Sum($(vSet_Teacher_CommunityTies_Current) NCompleted_7));
        let vmmAvgScore_Teacher_CommunityTies_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_CommunityTies_Current), $(vAvgScore_Teacher_CommunityTies_Current), Null()),'##0.##');
        
        let vSet_Principal_CommunityTies_Current = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"Parent/Guardian-Community Ties"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Principal_CommunityTies_Current = Count(distinct $(vSet_Principal_CommunityTies_Current) respondentid);
        let vPercMP_Principal_CommunityTies_Current = RangeAvg(Sum($(vSet_Principal_CommunityTies_Current) NHighest_1)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_1), Sum($(vSet_Principal_CommunityTies_Current) NHighest_2)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_2), Sum($(vSet_Principal_CommunityTies_Current) NHighest_3)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_3), Sum($(vSet_Principal_CommunityTies_Current) NHighest_4)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_4), Sum($(vSet_Principal_CommunityTies_Current) NHighest_5)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_5), Sum($(vSet_Principal_CommunityTies_Current) NHighest_6)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_6), Sum($(vSet_Principal_CommunityTies_Current) NHighest_7)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_7));
        let vmmPercMP_Principal_CommunityTies_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_CommunityTies_Current), $(vPercMP_Principal_CommunityTies_Current), Null()),'#.#%');
        let vAvgScore_Principal_CommunityTies_Current = RangeAvg(Sum($(vSet_Principal_CommunityTies_Current) AvgScaledScore_1)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_1), Sum($(vSet_Principal_CommunityTies_Current) AvgScaledScore_2)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_2), Sum($(vSet_Principal_CommunityTies_Current) AvgScaledScore_3)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_3), Sum($(vSet_Principal_CommunityTies_Current) AvgScaledScore_4)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_4), Sum($(vSet_Principal_CommunityTies_Current) AvgScaledScore_5)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_5), Sum($(vSet_Principal_CommunityTies_Current) AvgScaledScore_6)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_6), Sum($(vSet_Principal_CommunityTies_Current) AvgScaledScore_7)/Sum($(vSet_Principal_CommunityTies_Current) NCompleted_7));
        let vmmAvgScore_Principal_CommunityTies_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_CommunityTies_Current), $(vAvgScore_Principal_CommunityTies_Current), Null()),'##0.##');
      
        // subconstructs for PSSA scatter
        // parent: Communication Quality, School Relationship, Communication Frequency, Parent/Guardian Involvement, Parent/Guardian-School Networks 
        let vSet_Parent_CommunityTies_CommunicationQuality_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"Parent/Guardian-Community Ties"}, subconstruct={"Communication Quality"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_CommunityTies_CommunicationQuality_Current = Count(distinct $(vSet_Parent_CommunityTies_CommunicationQuality_Current) respondentid);
        let vAvgScore_Parent_CommunityTies_CommunicationQuality_Current = Sum($(vSet_Parent_CommunityTies_CommunicationQuality_Current) sumSurveyScaledScore)/Sum($(vSet_Parent_CommunityTies_CommunicationQuality_Current) CompletedItemCount);
        let vmmAvgScore_Parent_CommunityTies_CommunicationQuality_Current = Num(IF($(vMinParents) <= $(vCount_Parent_CommunityTies_CommunicationQuality_Current), $(vAvgScore_Parent_CommunityTies_CommunicationQuality_Current), Null()),'##0.##');
        
        let vSet_Parent_CommunityTies_SchoolRelationship_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"Parent/Guardian-Community Ties"}, subconstruct={"School Relationship"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_CommunityTies_SchoolRelationship_Current = Count(distinct $(vSet_Parent_CommunityTies_SchoolRelationship_Current) respondentid);
        let vAvgScore_Parent_CommunityTies_SchoolRelationship_Current = Sum($(vSet_Parent_CommunityTies_SchoolRelationship_Current) sumSurveyScaledScore)/Sum($(vSet_Parent_CommunityTies_SchoolRelationship_Current) CompletedItemCount);
        let vmmAvgScore_Parent_CommunityTies_SchoolRelationship_Current = Num(IF($(vMinParents) <= $(vCount_Parent_CommunityTies_SchoolRelationship_Current), $(vAvgScore_Parent_CommunityTies_SchoolRelationship_Current), Null()),'##0.##');
        
        let vSet_Parent_CommunityTies_CommunicationFrequency_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"Parent/Guardian-Community Ties"}, subconstruct={"Communication Frequency"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_CommunityTies_CommunicationFrequency_Current = Count(distinct $(vSet_Parent_CommunityTies_CommunicationFrequency_Current) respondentid);
        let vAvgScore_Parent_CommunityTies_CommunicationFrequency_Current = Sum($(vSet_Parent_CommunityTies_CommunicationFrequency_Current) sumSurveyScaledScore)/Sum($(vSet_Parent_CommunityTies_CommunicationFrequency_Current) CompletedItemCount);
        let vmmAvgScore_Parent_CommunityTies_CommunicationFrequency_Current = Num(IF($(vMinParents) <= $(vCount_Parent_CommunityTies_CommunicationFrequency_Current), $(vAvgScore_Parent_CommunityTies_CommunicationFrequency_Current), Null()),'##0.##');
       
        let vSet_Parent_CommunityTies_Involvement_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"Parent/Guardian-Community Ties"}, subconstruct={"Parent/Guardian Involvement"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_CommunityTies_Involvement_Current = Count(distinct $(vSet_Parent_CommunityTies_Involvement_Current) respondentid);
        let vAvgScore_Parent_CommunityTies_Involvement_Current = Sum($(vSet_Parent_CommunityTies_Involvement_Current) sumSurveyScaledScore)/Sum($(vSet_Parent_CommunityTies_Involvement_Current) CompletedItemCount);
        let vmmAvgScore_Parent_CommunityTies_Involvement_Current = Num(IF($(vMinParents) <= $(vCount_Parent_CommunityTies_Involvement_Current), $(vAvgScore_Parent_CommunityTies_Involvement_Current), Null()),'##0.##');
        
        let vSet_Parent_CommunityTies_Networks_Current = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"Parent/Guardian-Community Ties"}, subconstruct={"Parent/Guardian-School Networks"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Parent_CommunityTies_Networks_Current = Count(distinct $(vSet_Parent_CommunityTies_Networks_Current) respondentid);
        let vAvgScore_Parent_CommunityTies_Networks_Current = Sum($(vSet_Parent_CommunityTies_Networks_Current) sumSurveyScaledScore)/Sum($(vSet_Parent_CommunityTies_Networks_Current) CompletedItemCount);
        let vmmAvgScore_Parent_CommunityTies_Networks_Current = Num(IF($(vMinParents) <= $(vCount_Parent_CommunityTies_Networks_Current), $(vAvgScore_Parent_CommunityTies_Networks_Current), Null()),'##0.##');
       
      // Professional Capacity
        let vSet_Teacher_ProfessionalCapacity_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"Professional Capacity"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_ProfessionalCapacity_Current = Count(distinct $(vSet_Teacher_ProfessionalCapacity_Current) respondentid);
        let vPercMP_Teacher_ProfessionalCapacity_Current = RangeAvg(Sum($(vSet_Teacher_ProfessionalCapacity_Current) NHighest_1)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_1), Sum($(vSet_Teacher_ProfessionalCapacity_Current) NHighest_2)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_2), Sum($(vSet_Teacher_ProfessionalCapacity_Current) NHighest_3)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_3), Sum($(vSet_Teacher_ProfessionalCapacity_Current) NHighest_4)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_4), Sum($(vSet_Teacher_ProfessionalCapacity_Current) NHighest_5)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_5), Sum($(vSet_Teacher_ProfessionalCapacity_Current) NHighest_6)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_6), Sum($(vSet_Teacher_ProfessionalCapacity_Current) NHighest_7)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_7));
        let vmmPercMP_Teacher_ProfessionalCapacity_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_ProfessionalCapacity_Current), $(vPercMP_Teacher_ProfessionalCapacity_Current), Null()),'#.#%');
        let vAvgScore_Teacher_ProfessionalCapacity_Current = RangeAvg(Sum($(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_1)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_1), Sum($(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_2)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_2), Sum($(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_3)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_3), Sum($(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_4)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_4), Sum($(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_5)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_5), Sum($(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_6)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_6), Sum($(vSet_Teacher_ProfessionalCapacity_Current) AvgScaledScore_7)/Sum($(vSet_Teacher_ProfessionalCapacity_Current) NCompleted_7));
        let vmmAvgScore_Teacher_ProfessionalCapacity_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_ProfessionalCapacity_Current), $(vAvgScore_Teacher_ProfessionalCapacity_Current), Null()),'##0.##');
        
        let vSet_Principal_ProfessionalCapacity_Current = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"Professional Capacity"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Principal_ProfessionalCapacity_Current = Count(distinct $(vSet_Principal_ProfessionalCapacity_Current) respondentid);
        let vPercMP_Principal_ProfessionalCapacity_Current = RangeAvg(Sum($(vSet_Principal_ProfessionalCapacity_Current) NHighest_1)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_1), Sum($(vSet_Principal_ProfessionalCapacity_Current) NHighest_2)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_2), Sum($(vSet_Principal_ProfessionalCapacity_Current) NHighest_3)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_3), Sum($(vSet_Principal_ProfessionalCapacity_Current) NHighest_4)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_4), Sum($(vSet_Principal_ProfessionalCapacity_Current) NHighest_5)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_5), Sum($(vSet_Principal_ProfessionalCapacity_Current) NHighest_6)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_6), Sum($(vSet_Principal_ProfessionalCapacity_Current) NHighest_7)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_7));
        let vmmPercMP_Principal_ProfessionalCapacity_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_ProfessionalCapacity_Current), $(vPercMP_Principal_ProfessionalCapacity_Current), Null()),'#.#%');
        let vAvgScore_Principal_ProfessionalCapacity_Current = RangeAvg(Sum($(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_1)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_1), Sum($(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_2)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_2), Sum($(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_3)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_3), Sum($(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_4)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_4), Sum($(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_5)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_5), Sum($(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_6)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_6), Sum($(vSet_Principal_ProfessionalCapacity_Current) AvgScaledScore_7)/Sum($(vSet_Principal_ProfessionalCapacity_Current) NCompleted_7));
        let vmmAvgScore_Principal_ProfessionalCapacity_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_ProfessionalCapacity_Current), $(vAvgScore_Principal_ProfessionalCapacity_Current), Null()),'##0.##');
    
        // subconstructs for PSSA scatter
        // Teacher: Innovation, Quality of Professional Development: Delivery, Quality of Professional Development: Consistency
        let vSet_Teacher_ProfessionalCapacity_Innovation_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"Professional Capacity"}, subconstruct={"Innovation"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_ProfessionalCapacity_Innovation_Current = Count(distinct $(vSet_Teacher_ProfessionalCapacity_Innovation_Current) respondentid);
        let vAvgScore_Teacher_ProfessionalCapacity_Innovation_Current = Sum($(vSet_Teacher_ProfessionalCapacity_Innovation_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_ProfessionalCapacity_Innovation_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_ProfessionalCapacity_Innovation_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_ProfessionalCapacity_Innovation_Current), $(vAvgScore_Teacher_ProfessionalCapacity_Innovation_Current), Null()),'##0.##');
        
        let vSet_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"Professional Capacity"}, subconstruct={"Quality of Professional Development: Delivery"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current = Count(distinct $(vSet_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current) respondentid);
        let vAvgScore_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current = Sum($(vSet_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current), $(vAvgScore_Teacher_ProfessionalCapacity_QualityofPDDelivery_Current), Null()),'##0.##');
        
        let vSet_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"Professional Capacity"}, subconstruct={"Quality of Professional Development: Consistency"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current = Count(distinct $(vSet_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current) respondentid);
        let vAvgScore_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current = Sum($(vSet_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current), $(vAvgScore_Teacher_ProfessionalCapacity_QualityofPDConsistency_Current), Null()),'##0.##');

      // School Leadership
        let vSet_Teacher_SchoolLeadership_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Leadership"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_SchoolLeadership_Current = Count(distinct $(vSet_Teacher_SchoolLeadership_Current) respondentid);
        let vPercMP_Teacher_SchoolLeadership_Current = RangeAvg(Sum($(vSet_Teacher_SchoolLeadership_Current) NHighest_1)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_1), Sum($(vSet_Teacher_SchoolLeadership_Current) NHighest_2)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_2), Sum($(vSet_Teacher_SchoolLeadership_Current) NHighest_3)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_3), Sum($(vSet_Teacher_SchoolLeadership_Current) NHighest_4)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_4), Sum($(vSet_Teacher_SchoolLeadership_Current) NHighest_5)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_5), Sum($(vSet_Teacher_SchoolLeadership_Current) NHighest_6)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_6), Sum($(vSet_Teacher_SchoolLeadership_Current) NHighest_7)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_7));
        let vmmPercMP_Teacher_SchoolLeadership_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_SchoolLeadership_Current), $(vPercMP_Teacher_SchoolLeadership_Current), Null()),'#.#%');
        let vAvgScore_Teacher_SchoolLeadership_Current = RangeAvg(Sum($(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_1)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_1), Sum($(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_2)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_2), Sum($(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_3)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_3), Sum($(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_4)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_4), Sum($(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_5)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_5), Sum($(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_6)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_6), Sum($(vSet_Teacher_SchoolLeadership_Current) AvgScaledScore_7)/Sum($(vSet_Teacher_SchoolLeadership_Current) NCompleted_7));
        let vmmAvgScore_Teacher_SchoolLeadership_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_SchoolLeadership_Current), $(vAvgScore_Teacher_SchoolLeadership_Current), Null()),'##0.##');
       
        let vSet_Principal_SchoolLeadership_Current = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"School Leadership"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Principal_SchoolLeadership_Current = Count(distinct $(vSet_Principal_SchoolLeadership_Current) respondentid);
        let vPercMP_Principal_SchoolLeadership_Current = RangeAvg(Sum($(vSet_Principal_SchoolLeadership_Current) NHighest_1)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_1), Sum($(vSet_Principal_SchoolLeadership_Current) NHighest_2)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_2), Sum($(vSet_Principal_SchoolLeadership_Current) NHighest_3)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_3), Sum($(vSet_Principal_SchoolLeadership_Current) NHighest_4)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_4), Sum($(vSet_Principal_SchoolLeadership_Current) NHighest_5)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_5), Sum($(vSet_Principal_SchoolLeadership_Current) NHighest_6)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_6), Sum($(vSet_Principal_SchoolLeadership_Current) NHighest_7)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_7));
        let vmmPercMP_Principal_SchoolLeadership_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_SchoolLeadership_Current), $(vPercMP_Principal_SchoolLeadership_Current), Null()),'#.#%');
        let vAvgScore_Principal_SchoolLeadership_Current = RangeAvg(Sum($(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_1)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_1), Sum($(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_2)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_2), Sum($(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_3)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_3), Sum($(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_4)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_4), Sum($(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_5)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_5), Sum($(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_6)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_6), Sum($(vSet_Principal_SchoolLeadership_Current) AvgScaledScore_7)/Sum($(vSet_Principal_SchoolLeadership_Current) NCompleted_7));
        let vmmAvgScore_Principal_SchoolLeadership_Current = Num(IF($(vMinPrincipals) <= $(vCount_Principal_SchoolLeadership_Current), $(vAvgScore_Principal_SchoolLeadership_Current), Null()),'##0.##');
              
        // subconstructs for PSSA scatter
        // Teacher: Expectations & Feedback, Inclusive Leadership 
        let vSet_Teacher_SchoolLeadership_ExpectationsFeedback_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Leadership"}, subconstruct={"Expectations & Feedback"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_SchoolLeadership_ExpectationsFeedback_Current = Count(distinct $(vSet_Teacher_SchoolLeadership_ExpectationsFeedback_Current) respondentid);
        let vAvgScore_Teacher_SchoolLeadership_ExpectationsFeedback_Current = Sum($(vSet_Teacher_SchoolLeadership_ExpectationsFeedback_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_SchoolLeadership_ExpectationsFeedback_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_SchoolLeadership_ExpectationsFeedback_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_SchoolLeadership_ExpectationsFeedback_Current), $(vAvgScore_Teacher_SchoolLeadership_ExpectationsFeedback_Current), Null()),'##0.##');
        
        let vSet_Teacher_SchoolLeadership_InclusiveLeadership_Current = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Leadership"}, subconstruct={"Inclusive Leadership"}, YearEnd={$(=$(vMaxYearEnd))}>};
        let vCount_Teacher_SchoolLeadership_InclusiveLeadership_Current = Count(distinct $(vSet_Teacher_SchoolLeadership_InclusiveLeadership_Current) respondentid);
        let vAvgScore_Teacher_SchoolLeadership_InclusiveLeadership_Current = Sum($(vSet_Teacher_SchoolLeadership_InclusiveLeadership_Current) sumSurveyScaledScore)/Sum($(vSet_Teacher_SchoolLeadership_InclusiveLeadership_Current) CompletedItemCount);
        let vmmAvgScore_Teacher_SchoolLeadership_InclusiveLeadership_Current = Num(IF($(vMinTeachers) <= $(vCount_Teacher_SchoolLeadership_InclusiveLeadership_Current), $(vAvgScore_Teacher_SchoolLeadership_InclusiveLeadership_Current), Null()),'##0.##');
        
          
    /// Previous Year (don't have AvgScore because we're not using it at the moment)  
      // Climate 
        let vSet_Student_Climate_Previous = {<surveyTypeForDisplay={"Student"}, questionconstruct={"School Climate"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Student_Climate_Previous = RangeMax(Sum($(vSet_Student_Climate_Previous) NCompleted_1),Sum($(vSet_Student_Climate_Previous) NCompleted_2), Sum($(vSet_Student_Climate_Previous) NCompleted_3), Sum($(vSet_Student_Climate_Previous) NCompleted_4), Sum($(vSet_Student_Climate_Previous) NCompleted_5), Sum($(vSet_Student_Climate_Previous) NCompleted_6), Sum($(vSet_Student_Climate_Previous) NCompleted_7));
        let vPercMP_Student_Climate_Previous = RangeAvg(Sum($(vSet_Student_Climate_Previous) NHighest_1)/Sum($(vSet_Student_Climate_Previous) NCompleted_1), Sum($(vSet_Student_Climate_Previous) NHighest_2)/Sum($(vSet_Student_Climate_Previous) NCompleted_2), Sum($(vSet_Student_Climate_Previous) NHighest_3)/Sum($(vSet_Student_Climate_Previous) NCompleted_3), Sum($(vSet_Student_Climate_Previous) NHighest_4)/Sum($(vSet_Student_Climate_Previous) NCompleted_4), Sum($(vSet_Student_Climate_Previous) NHighest_5)/Sum($(vSet_Student_Climate_Previous) NCompleted_5), Sum($(vSet_Student_Climate_Previous) NHighest_6)/Sum($(vSet_Student_Climate_Previous) NCompleted_6), Sum($(vSet_Student_Climate_Previous) NHighest_7)/Sum($(vSet_Student_Climate_Previous) NCompleted_7));
        let vmmPercMP_Student_Climate_Previous = Num(IF($(vMinStudents) <= $(vCount_Student_Climate_Previous), $(vPercMP_Student_Climate_Previous), Null()),'#.#%');
        
        let vSet_Parent_Climate_Previous = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"School Climate"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Parent_Climate_Previous = RangeMax(Sum($(vSet_Parent_Climate_Previous) NCompleted_1),Sum($(vSet_Parent_Climate_Previous) NCompleted_2), Sum($(vSet_Parent_Climate_Previous) NCompleted_3), Sum($(vSet_Parent_Climate_Previous) NCompleted_4), Sum($(vSet_Parent_Climate_Previous) NCompleted_5), Sum($(vSet_Parent_Climate_Previous) NCompleted_6), Sum($(vSet_Parent_Climate_Previous) NCompleted_7));
        let vPercMP_Parent_Climate_Previous = RangeAvg(Sum($(vSet_Parent_Climate_Previous) NHighest_1)/Sum($(vSet_Parent_Climate_Previous) NCompleted_1), Sum($(vSet_Parent_Climate_Previous) NHighest_2)/Sum($(vSet_Parent_Climate_Previous) NCompleted_2), Sum($(vSet_Parent_Climate_Previous) NHighest_3)/Sum($(vSet_Parent_Climate_Previous) NCompleted_3), Sum($(vSet_Parent_Climate_Previous) NHighest_4)/Sum($(vSet_Parent_Climate_Previous) NCompleted_4), Sum($(vSet_Parent_Climate_Previous) NHighest_5)/Sum($(vSet_Parent_Climate_Previous) NCompleted_5), Sum($(vSet_Parent_Climate_Previous) NHighest_6)/Sum($(vSet_Parent_Climate_Previous) NCompleted_6), Sum($(vSet_Parent_Climate_Previous) NHighest_7)/Sum($(vSet_Parent_Climate_Previous) NCompleted_7));
        let vmmPercMP_Parent_Climate_Previous = Num(IF($(vMinParents) <= $(vCount_Parent_Climate_Previous), $(vPercMP_Parent_Climate_Previous), Null()),'#.#%');
        
        let vSet_Teacher_Climate_Previous = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Climate"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Teacher_Climate_Previous = Count(distinct $(vSet_Teacher_Climate_Previous) respondentid);
        let vPercMP_Teacher_Climate_Previous = RangeAvg(Sum($(vSet_Teacher_Climate_Previous) NHighest_1)/Sum($(vSet_Teacher_Climate_Previous) NCompleted_1), Sum($(vSet_Teacher_Climate_Previous) NHighest_2)/Sum($(vSet_Teacher_Climate_Previous) NCompleted_2), Sum($(vSet_Teacher_Climate_Previous) NHighest_3)/Sum($(vSet_Teacher_Climate_Previous) NCompleted_3), Sum($(vSet_Teacher_Climate_Previous) NHighest_4)/Sum($(vSet_Teacher_Climate_Previous) NCompleted_4), Sum($(vSet_Teacher_Climate_Previous) NHighest_5)/Sum($(vSet_Teacher_Climate_Previous) NCompleted_5), Sum($(vSet_Teacher_Climate_Previous) NHighest_6)/Sum($(vSet_Teacher_Climate_Previous) NCompleted_6), Sum($(vSet_Teacher_Climate_Previous) NHighest_7)/Sum($(vSet_Teacher_Climate_Previous) NCompleted_7));
        let vmmPercMP_Teacher_Climate_Previous = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Climate_Previous), $(vPercMP_Teacher_Climate_Previous), Null()),'#.#%');
        
        let vSet_Principal_Climate_Previous = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"School Climate"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Principal_Climate_Previous = Count(distinct $(vSet_Principal_Climate_Previous) respondentid);
        let vPercMP_Principal_Climate_Previous = RangeAvg(Sum($(vSet_Principal_Climate_Previous) NHighest_1)/Sum($(vSet_Principal_Climate_Previous) NCompleted_1), Sum($(vSet_Principal_Climate_Previous) NHighest_2)/Sum($(vSet_Principal_Climate_Previous) NCompleted_2), Sum($(vSet_Principal_Climate_Previous) NHighest_3)/Sum($(vSet_Principal_Climate_Previous) NCompleted_3), Sum($(vSet_Principal_Climate_Previous) NHighest_4)/Sum($(vSet_Principal_Climate_Previous) NCompleted_4), Sum($(vSet_Principal_Climate_Previous) NHighest_5)/Sum($(vSet_Principal_Climate_Previous) NCompleted_5), Sum($(vSet_Principal_Climate_Previous) NHighest_6)/Sum($(vSet_Principal_Climate_Previous) NCompleted_6), Sum($(vSet_Principal_Climate_Previous) NHighest_7)/Sum($(vSet_Principal_Climate_Previous) NCompleted_7));
        let vmmPercMP_Principal_Climate_Previous = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Climate_Previous), $(vPercMP_Principal_Climate_Previous), Null()),'#.#%');
      
      // Instruction 
        let vSet_Student_Instruction_Previous = {<surveyTypeForDisplay={"Student"}, questionconstruct={"Instruction"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Student_Instruction_Previous = Count(distinct $(vSet_Student_Instruction_Previous) respondentid);
        let vPercMP_Student_Instruction_Previous = RangeAvg(Sum($(vSet_Student_Instruction_Previous) NHighest_1)/Sum($(vSet_Student_Instruction_Previous) NCompleted_1), Sum($(vSet_Student_Instruction_Previous) NHighest_2)/Sum($(vSet_Student_Instruction_Previous) NCompleted_2), Sum($(vSet_Student_Instruction_Previous) NHighest_3)/Sum($(vSet_Student_Instruction_Previous) NCompleted_3), Sum($(vSet_Student_Instruction_Previous) NHighest_4)/Sum($(vSet_Student_Instruction_Previous) NCompleted_4), Sum($(vSet_Student_Instruction_Previous) NHighest_5)/Sum($(vSet_Student_Instruction_Previous) NCompleted_5), Sum($(vSet_Student_Instruction_Previous) NHighest_6)/Sum($(vSet_Student_Instruction_Previous) NCompleted_6), Sum($(vSet_Student_Instruction_Previous) NHighest_7)/Sum($(vSet_Student_Instruction_Previous) NCompleted_7));
        let vmmPercMP_Student_Instruction_Previous = Num(IF($(vMinStudents) <= $(vCount_Student_Instruction_Previous), $(vPercMP_Student_Instruction_Previous), Null()),'#.#%');
        
        let vSet_Parent_Instruction_Previous = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"Instruction"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Parent_Instruction_Previous = Count(distinct $(vSet_Parent_Instruction_Previous) respondentid);
        let vPercMP_Parent_Instruction_Previous = RangeAvg(Sum($(vSet_Parent_Instruction_Previous) NHighest_1)/Sum($(vSet_Parent_Instruction_Previous) NCompleted_1), Sum($(vSet_Parent_Instruction_Previous) NHighest_2)/Sum($(vSet_Parent_Instruction_Previous) NCompleted_2), Sum($(vSet_Parent_Instruction_Previous) NHighest_3)/Sum($(vSet_Parent_Instruction_Previous) NCompleted_3), Sum($(vSet_Parent_Instruction_Previous) NHighest_4)/Sum($(vSet_Parent_Instruction_Previous) NCompleted_4), Sum($(vSet_Parent_Instruction_Previous) NHighest_5)/Sum($(vSet_Parent_Instruction_Previous) NCompleted_5), Sum($(vSet_Parent_Instruction_Previous) NHighest_6)/Sum($(vSet_Parent_Instruction_Previous) NCompleted_6), Sum($(vSet_Parent_Instruction_Previous) NHighest_7)/Sum($(vSet_Parent_Instruction_Previous) NCompleted_7));
        let vmmPercMP_Parent_Instruction_Previous = Num(IF($(vMinParents) <= $(vCount_Parent_Instruction_Previous), $(vPercMP_Parent_Instruction_Previous), Null()),'#.#%');
        
        let vSet_Teacher_Instruction_Previous = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"Instruction"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Teacher_Instruction_Previous = Count(distinct $(vSet_Teacher_Instruction_Previous) respondentid);
        let vPercMP_Teacher_Instruction_Previous = RangeAvg(Sum($(vSet_Teacher_Instruction_Previous) NHighest_1)/Sum($(vSet_Teacher_Instruction_Previous) NCompleted_1), Sum($(vSet_Teacher_Instruction_Previous) NHighest_2)/Sum($(vSet_Teacher_Instruction_Previous) NCompleted_2), Sum($(vSet_Teacher_Instruction_Previous) NHighest_3)/Sum($(vSet_Teacher_Instruction_Previous) NCompleted_3), Sum($(vSet_Teacher_Instruction_Previous) NHighest_4)/Sum($(vSet_Teacher_Instruction_Previous) NCompleted_4), Sum($(vSet_Teacher_Instruction_Previous) NHighest_5)/Sum($(vSet_Teacher_Instruction_Previous) NCompleted_5), Sum($(vSet_Teacher_Instruction_Previous) NHighest_6)/Sum($(vSet_Teacher_Instruction_Previous) NCompleted_6), Sum($(vSet_Teacher_Instruction_Previous) NHighest_7)/Sum($(vSet_Teacher_Instruction_Previous) NCompleted_7));
        let vmmPercMP_Teacher_Instruction_Previous = Num(IF($(vMinTeachers) <= $(vCount_Teacher_Instruction_Previous), $(vPercMP_Teacher_Instruction_Previous), Null()),'#.#%');
        
        let vSet_Principal_Instruction_Previous = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"Instruction"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Principal_Instruction_Previous = Count(distinct $(vSet_Principal_Instruction_Previous) respondentid);
        let vPercMP_Principal_Instruction_Previous = RangeAvg(Sum($(vSet_Principal_Instruction_Previous) NHighest_1)/Sum($(vSet_Principal_Instruction_Previous) NCompleted_1), Sum($(vSet_Principal_Instruction_Previous) NHighest_2)/Sum($(vSet_Principal_Instruction_Previous) NCompleted_2), Sum($(vSet_Principal_Instruction_Previous) NHighest_3)/Sum($(vSet_Principal_Instruction_Previous) NCompleted_3), Sum($(vSet_Principal_Instruction_Previous) NHighest_4)/Sum($(vSet_Principal_Instruction_Previous) NCompleted_4), Sum($(vSet_Principal_Instruction_Previous) NHighest_5)/Sum($(vSet_Principal_Instruction_Previous) NCompleted_5), Sum($(vSet_Principal_Instruction_Previous) NHighest_6)/Sum($(vSet_Principal_Instruction_Previous) NCompleted_6), Sum($(vSet_Principal_Instruction_Previous) NHighest_7)/Sum($(vSet_Principal_Instruction_Previous) NCompleted_7));
        let vmmPercMP_Principal_Instruction_Previous = Num(IF($(vMinPrincipals) <= $(vCount_Principal_Instruction_Previous), $(vPercMP_Principal_Instruction_Previous), Null()),'#.#%');
           
      // Parent/Guardian Community Ties
        let vSet_Parent_CommunityTies_Previous = {<surveyTypeForDisplay={"Parent"}, questionconstruct={"Parent/Guardian-Community Ties"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Parent_CommunityTies_Previous = Count(distinct $(vSet_Parent_CommunityTies_Previous) respondentid);
        let vPercMP_Parent_CommunityTies_Previous = RangeAvg(Sum($(vSet_Parent_CommunityTies_Previous) NHighest_1)/Sum($(vSet_Parent_CommunityTies_Previous) NCompleted_1), Sum($(vSet_Parent_CommunityTies_Previous) NHighest_2)/Sum($(vSet_Parent_CommunityTies_Previous) NCompleted_2), Sum($(vSet_Parent_CommunityTies_Previous) NHighest_3)/Sum($(vSet_Parent_CommunityTies_Previous) NCompleted_3), Sum($(vSet_Parent_CommunityTies_Previous) NHighest_4)/Sum($(vSet_Parent_CommunityTies_Previous) NCompleted_4), Sum($(vSet_Parent_CommunityTies_Previous) NHighest_5)/Sum($(vSet_Parent_CommunityTies_Previous) NCompleted_5), Sum($(vSet_Parent_CommunityTies_Previous) NHighest_6)/Sum($(vSet_Parent_CommunityTies_Previous) NCompleted_6), Sum($(vSet_Parent_CommunityTies_Previous) NHighest_7)/Sum($(vSet_Parent_CommunityTies_Previous) NCompleted_7));
        let vmmPercMP_Parent_CommunityTies_Previous = Num(IF($(vMinParents) <= $(vCount_Parent_CommunityTies_Previous), $(vPercMP_Parent_CommunityTies_Previous), Null()),'#.#%');
        
        let vSet_Teacher_CommunityTies_Previous = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"Parent/Guardian-Community Ties"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Teacher_CommunityTies_Previous = Count(distinct $(vSet_Teacher_CommunityTies_Previous) respondentid);
        let vPercMP_Teacher_CommunityTies_Previous = RangeAvg(Sum($(vSet_Teacher_CommunityTies_Previous) NHighest_1)/Sum($(vSet_Teacher_CommunityTies_Previous) NCompleted_1), Sum($(vSet_Teacher_CommunityTies_Previous) NHighest_2)/Sum($(vSet_Teacher_CommunityTies_Previous) NCompleted_2), Sum($(vSet_Teacher_CommunityTies_Previous) NHighest_3)/Sum($(vSet_Teacher_CommunityTies_Previous) NCompleted_3), Sum($(vSet_Teacher_CommunityTies_Previous) NHighest_4)/Sum($(vSet_Teacher_CommunityTies_Previous) NCompleted_4), Sum($(vSet_Teacher_CommunityTies_Previous) NHighest_5)/Sum($(vSet_Teacher_CommunityTies_Previous) NCompleted_5), Sum($(vSet_Teacher_CommunityTies_Previous) NHighest_6)/Sum($(vSet_Teacher_CommunityTies_Previous) NCompleted_6), Sum($(vSet_Teacher_CommunityTies_Previous) NHighest_7)/Sum($(vSet_Teacher_CommunityTies_Previous) NCompleted_7));
        let vmmPercMP_Teacher_CommunityTies_Previous = Num(IF($(vMinTeachers) <= $(vCount_Teacher_CommunityTies_Previous), $(vPercMP_Teacher_CommunityTies_Previous), Null()),'#.#%');
        
        let vSet_Principal_CommunityTies_Previous = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"Parent/Guardian-Community Ties"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Principal_CommunityTies_Previous = Count(distinct $(vSet_Principal_CommunityTies_Previous) respondentid);
        let vPercMP_Principal_CommunityTies_Previous = RangeAvg(Sum($(vSet_Principal_CommunityTies_Previous) NHighest_1)/Sum($(vSet_Principal_CommunityTies_Previous) NCompleted_1), Sum($(vSet_Principal_CommunityTies_Previous) NHighest_2)/Sum($(vSet_Principal_CommunityTies_Previous) NCompleted_2), Sum($(vSet_Principal_CommunityTies_Previous) NHighest_3)/Sum($(vSet_Principal_CommunityTies_Previous) NCompleted_3), Sum($(vSet_Principal_CommunityTies_Previous) NHighest_4)/Sum($(vSet_Principal_CommunityTies_Previous) NCompleted_4), Sum($(vSet_Principal_CommunityTies_Previous) NHighest_5)/Sum($(vSet_Principal_CommunityTies_Previous) NCompleted_5), Sum($(vSet_Principal_CommunityTies_Previous) NHighest_6)/Sum($(vSet_Principal_CommunityTies_Previous) NCompleted_6), Sum($(vSet_Principal_CommunityTies_Previous) NHighest_7)/Sum($(vSet_Principal_CommunityTies_Previous) NCompleted_7));
        let vmmPercMP_Principal_CommunityTies_Previous = Num(IF($(vMinPrincipals) <= $(vCount_Principal_CommunityTies_Previous), $(vPercMP_Principal_CommunityTies_Previous), Null()),'#.#%');
      
      // Professional Capacity
        let vSet_Teacher_ProfessionalCapacity_Previous = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"Professional Capacity"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Teacher_ProfessionalCapacity_Previous = Count(distinct $(vSet_Teacher_ProfessionalCapacity_Previous) respondentid);
        let vPercMP_Teacher_ProfessionalCapacity_Previous = RangeAvg(Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_1)/Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_1), Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_2)/Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_2), Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_3)/Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_3), Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_4)/Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_4), Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_5)/Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_5), Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_6)/Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_6), Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NHighest_7)/Sum($(vSet_Teacher_ProfessionalCapacity_Previous) NCompleted_7));
        let vmmPercMP_Teacher_ProfessionalCapacity_Previous = Num(IF($(vMinTeachers) <= $(vCount_Teacher_ProfessionalCapacity_Previous), $(vPercMP_Teacher_ProfessionalCapacity_Previous), Null()),'#.#%');
        
        let vSet_Principal_ProfessionalCapacity_Previous = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"Professional Capacity"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Principal_ProfessionalCapacity_Previous = Count(distinct $(vSet_Principal_ProfessionalCapacity_Previous) respondentid);
        let vPercMP_Principal_ProfessionalCapacity_Previous = RangeAvg(Sum($(vSet_Principal_ProfessionalCapacity_Previous) NHighest_1)/Sum($(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_1), Sum($(vSet_Principal_ProfessionalCapacity_Previous) NHighest_2)/Sum($(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_2), Sum($(vSet_Principal_ProfessionalCapacity_Previous) NHighest_3)/Sum($(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_3), Sum($(vSet_Principal_ProfessionalCapacity_Previous) NHighest_4)/Sum($(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_4), Sum($(vSet_Principal_ProfessionalCapacity_Previous) NHighest_5)/Sum($(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_5), Sum($(vSet_Principal_ProfessionalCapacity_Previous) NHighest_6)/Sum($(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_6), Sum($(vSet_Principal_ProfessionalCapacity_Previous) NHighest_7)/Sum($(vSet_Principal_ProfessionalCapacity_Previous) NCompleted_7));
        let vmmPercMP_Principal_ProfessionalCapacity_Previous = Num(IF($(vMinPrincipals) <= $(vCount_Principal_ProfessionalCapacity_Previous), $(vPercMP_Principal_ProfessionalCapacity_Previous), Null()),'#.#%');
    
      // School Leadership
        let vSet_Teacher_SchoolLeadership_Previous = {<surveyTypeForDisplay={"Teacher"}, questionconstruct={"School Leadership"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Teacher_SchoolLeadership_Previous = Count(distinct $(vSet_Teacher_SchoolLeadership_Previous) respondentid);
        let vPercMP_Teacher_SchoolLeadership_Previous = RangeAvg(Sum($(vSet_Teacher_SchoolLeadership_Previous) NHighest_1)/Sum($(vSet_Teacher_SchoolLeadership_Previous) NCompleted_1), Sum($(vSet_Teacher_SchoolLeadership_Previous) NHighest_2)/Sum($(vSet_Teacher_SchoolLeadership_Previous) NCompleted_2), Sum($(vSet_Teacher_SchoolLeadership_Previous) NHighest_3)/Sum($(vSet_Teacher_SchoolLeadership_Previous) NCompleted_3), Sum($(vSet_Teacher_SchoolLeadership_Previous) NHighest_4)/Sum($(vSet_Teacher_SchoolLeadership_Previous) NCompleted_4), Sum($(vSet_Teacher_SchoolLeadership_Previous) NHighest_5)/Sum($(vSet_Teacher_SchoolLeadership_Previous) NCompleted_5), Sum($(vSet_Teacher_SchoolLeadership_Previous) NHighest_6)/Sum($(vSet_Teacher_SchoolLeadership_Previous) NCompleted_6), Sum($(vSet_Teacher_SchoolLeadership_Previous) NHighest_7)/Sum($(vSet_Teacher_SchoolLeadership_Previous) NCompleted_7));
        let vmmPercMP_Teacher_SchoolLeadership_Previous = Num(IF($(vMinTeachers) <= $(vCount_Teacher_SchoolLeadership_Previous), $(vPercMP_Teacher_SchoolLeadership_Previous), Null()),'#.#%');
        
        let vSet_Principal_SchoolLeadership_Previous = {<surveyTypeForDisplay={"Principal"}, questionconstruct={"School Leadership"}, YearEnd={$(=$(vLastYearEnd))}>};
        let vCount_Principal_SchoolLeadership_Previous = Count(distinct $(vSet_Principal_SchoolLeadership_Previous) respondentid);
        let vPercMP_Principal_SchoolLeadership_Previous = RangeAvg(Sum($(vSet_Principal_SchoolLeadership_Previous) NHighest_1)/Sum($(vSet_Principal_SchoolLeadership_Previous) NCompleted_1), Sum($(vSet_Principal_SchoolLeadership_Previous) NHighest_2)/Sum($(vSet_Principal_SchoolLeadership_Previous) NCompleted_2), Sum($(vSet_Principal_SchoolLeadership_Previous) NHighest_3)/Sum($(vSet_Principal_SchoolLeadership_Previous) NCompleted_3), Sum($(vSet_Principal_SchoolLeadership_Previous) NHighest_4)/Sum($(vSet_Principal_SchoolLeadership_Previous) NCompleted_4), Sum($(vSet_Principal_SchoolLeadership_Previous) NHighest_5)/Sum($(vSet_Principal_SchoolLeadership_Previous) NCompleted_5), Sum($(vSet_Principal_SchoolLeadership_Previous) NHighest_6)/Sum($(vSet_Principal_SchoolLeadership_Previous) NCompleted_6), Sum($(vSet_Principal_SchoolLeadership_Previous) NHighest_7)/Sum($(vSet_Principal_SchoolLeadership_Previous) NCompleted_7));
        let vmmPercMP_Principal_SchoolLeadership_Previous = Num(IF($(vMinPrincipals) <= $(vCount_Principal_SchoolLeadership_Previous), $(vPercMP_Principal_SchoolLeadership_Previous), Null()),'#.#%');
               


//// PSSA
  /// For dimensions
    let vCountPSSA_Subject_Current = Count({$<Subject={"$(=$(vFocusSubject))"}, YearEnd={$(=$(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore);
    let vAvgPSSA_Subject_Current = Avg({$<Subject={"$(=$(vFocusSubject))"}, YearEnd={$(=$(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore);
    let vmmAvgPSSA_Subject_Current = Num(IF($(vMinStudents) <= $(vCountPSSA_Subject_Current), $(vAvgPSSA_Subject_Current), Null()),'##0.#');
        
  /// for reference lines
    let vAvgPSSA_Subject_Current_District = Avg({1<Subject={"$(=$(vFocusSubject))"}, YearEnd={$(=$(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore);
    let vMinPSSA_Subject_Current_District = Min({1<Subject={"$(=$(vFocusSubject))"}, YearEnd={$(=$(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore);
    let vMaxPSSA_Subject_Current_District = Max({1<Subject={"$(=$(vFocusSubject))"}, YearEnd={$(=$(vMaxYearEnd))} , [Performance Level Code]={">0"} >} pssaScaledScore);
    