/**
*	Loading Variables: SPR Display
*	Jonathan Vitale
*	Changes:
*
*	Version 1.02:
*   - Made sure to add line: , [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"} to all domain level metrics
* Version 0.6
*		- No longer have "Overall" or "Educator Effectiveness" within "Domain Name", nor do we have any overall scores in the "Metric Name"
*		- Format: By sheet, Visualziation
*
*	Reminder:
*	THIS FILE IS THE RAW QLIK CODE. IT **MUST** BE COMPILED INTO STRINGS TO BE LOADED INTO A SCRIPT.
*   Make sure to save the formatted code in a separate file and keep this file raw. 
*	For SUBLIME TEXT use the RegReplace package with custom rules and commands
*   Note: I am using the RegEx instead of the default py regualar expression engine (v.1). Set this in package settings.
*	Also, instead of using single quotes for final strings, use ` to avoid unnecessary replacements
**/

///// Universal Variables
	// NOTE COLORS
		// Intervene: rgb(192,80,77) #c0504d
		// Watch: rgb(247,150,70) #f79646
		// Reinforce: rgb(0,176,80) #00b050
		// Model: rgb(0,112,192) #0070c0

	//// Set Analysis Shortcuts
		let vExclude_SchoolNetworkSelections = '[City Council District] =, [Admission Type] =, [SPR Report Type] =, [Peer Group] =, [Learning Network] =, [School Name] =, [School Name (Reporting Category)] =, [School Abbrev Name (Reporting Category)] = , [SRC School ID] = ';
		let vExclude_SchoolSelections = '[City Council District] =, [Admission Type] =, [SPR Report Type] =, [Peer Group] =, [School Name] =, [School Name (Reporting Category)] =, [School Abbrev Name (Reporting Category)] = , [SRC School ID] = ';


	//// Expressions

		let vExpr_AllDomainsPossible = 'GetPossibleCount([Domain_Name]) > 1 and GetSelectedCount([Domain_Name]) = 0';
		let vExpr_MultipleDomainsSelected = 'GetSelectedCount([Domain_Name]) > 1';
		let vExpr_MultipleMetricsSelected = 'GetSelectedCount([Metric_Name]) > 1';
		let vExpr_SomeDomainsSelected = 'GetSelectedCount([Domain_Name]) > 0';
		let vExpr_SingleDomainSelected = 'GetSelectedCount([Domain_Name]) = 1';
		let vExpr_SingleDomainSelected_AllMetricsPossible = chr(36)&'(vExpr_SingleDomainSelected) and GetSelectedCount([Metric_Name]) = 0';
		let vExpr_SomeDomainsSelected_AllMetricsPossible = 'GetSelectedCount([Domain_Name]) > 0 and GetSelectedCount([Metric_Name]) = 0';
		let vExpr_SingleDomainPossible_SomeMetricsSelected = chr(36)&'(vExpr_SingleDomainSelected) and GetSelectedCount([Metric_Name]) > 0';
		let vExpr_MultipleDomainsPossible = 'GetPossibleCount([Domain_Name]) > 1';
		let vExpr_MultipleDomainsPossible_AllMetricsPossible = chr(36)&'(vExpr_MultipleDomainsPossible) and GetSelectedCount([Metric_Name]) = 0';
		let vExpr_MultipleDomainsPossible_SomeMetricsSelected = chr(36)&'(vExpr_MultipleDomainsPossible) and GetSelectedCount([Metric_Name]) > 0';
		let vExpr_SomeMetricsSelected = 'GetSelectedCount([Metric_Name]) > 0';
		let vExpr_SingleMetricSelected = 'GetSelectedCount([Metric_Name]) = 1';
		let vExpr_NoMetricSelected = 'GetSelectedCount([Metric_Name]) = 0';
		let vExpr_SingleDomainSelected_or_SingleMetricSelected = chr(36)&'(vExpr_SingleDomainSelected) or '&chr(36)&'(vExpr_SingleMetricSelected)';

	//// Date
		 let v_Max_YearEnd = 'Num#(Max(YearEnd))';
		 let v_Last_YearEnd = 'Num#(Max(YearEnd)-1)';
		 let v_LastLast_YearEnd = 'Num#(Max(YearEnd)-2)';
		 let v_LastLastLast_YearEnd = 'Num#(Max(YearEnd)-3)';
		 let v_Max_Year = '(max(left(Year,4))) & '&chr(39)&chr(45)&chr(39)&' & (max(right(Year,4)))';
		 let v_Max_Year_Short = 'right((max(left(Year,4))),2) & '&chr(39)&chr(45)&chr(39)&' & (max(right(Year,2)))';
		 let v_Last_Year = '(max(left(Year,4))-1) & '&chr(39)&chr(45)&chr(39)&' & (max(right(Year,4))-1)';
		 let v_LastLast_Year = '(max(left(Year,4))-2) & '&chr(39)&chr(45)&chr(39)&' & (max(right(Year,4))-2)';
		 let v_LastLastLast_Year = '(max(left(Year,4))-3) & '&chr(39)&chr(45)&chr(39)&' & (max(right(Year,4))-3)';

	//// Count of schools, students
		let vMM_Count_Reports = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Points Possible Overall] = {">0"}, [Overall Tier] = {"*"}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Points Possible in Domain] = {">0"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Points Possible for Metric] = {">0"}, [Tier for Metric] = {"*"}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		// The number of schools in the most recent year.
		let vMM_Count_Reports_Current = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Points Possible Overall] = {">0"}, [Overall Tier] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Points Possible in Domain] = {">0"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Points Possible for Metric] = {">0"}, [Tier for Metric] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vLab_Count_Reports_Current = chr(39)&'# of '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&'Reports ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);
		
		
		// The number of schools in the previous year.
		let vMM_Count_Reports_Previous = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Points Possible Overall] = {">0"}, [Overall Tier] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Points Possible in Domain] = {">0"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Points Possible for Metric] = {">0"}, [Tier for Metric] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vLab_Count_Reports_Previous = chr(39)&'# of '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&'Reports ('&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&')'&chr(39);

		let vMM_Count_Reports_Previous2 = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Points Possible Overall] = {">0"}, [Overall Tier] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Points Possible in Domain] = {">0"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Points Possible for Metric] = {">0"}, [Tier for Metric] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		// The number of schools in the previous three years.
		let vMM_Count_Reports_3Year_Current = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Points Possible Overall] = {">0"}, [Overall Tier] = {"*"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Points Possible in Domain] = {">0"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Points Possible for Metric] = {">0"}, [Tier for Metric] = {"*"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vLab_Count_Reports_3Year_Current = chr(39)&'# of '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&'Reports (3 Years)'&chr(39);

		// The number of schools with exceptions (not including 999) in the most recent year.
		let vMM_Count_Exceptions_Current = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Exception Overall] = {">900 <999"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Exception in Domain] = {">900 <999"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Exception for Metric] = {">900 <999"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vLab_Count_Exceptions_Current = chr(39)&'# of '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&'Exceptions ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);
		
		// The number of schools with exceptions (not including 999) in the most recent year.
		let vMM_Count_Exceptions_Previous = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Exception Overall] = {">900 <999"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Exception in Domain] = {">900 <999"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Exception for Metric] = {">900 <999"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vLab_Count_Exceptions_Previous = chr(39)&'# of '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&'Exceptions ('&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&')'&chr(39);
		


		let vMM_Count_Reports_ModelReinforce = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Overall Tier] = {"Model", "Reinforce"}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Tier for Metric] = {"Model", "Reinforce"}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vMM_Count_Reports_ModelReinforce_Current = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Overall Tier] = {"Model", "Reinforce"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Tier for Metric] = {"Model", "Reinforce"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vMM_Count_Reports_ModelReinforce_Previous = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Overall Tier] = {"Model", "Reinforce"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Tier for Metric] = {"Model", "Reinforce"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vMM_Count_Reports_ModelReinforce_YOY = 'Num(
			'&chr(36)&'(vMM_Count_Reports_ModelReinforce_Current)-'&chr(36)&'(vMM_Count_Reports_ModelReinforce_Previous)
			, '&chr(39)&'#,##0'&chr(39)&')';



		let vMM_Count_Reports_WatchIntervene_Current = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Overall Tier] = {"Watch", "Intervene"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Tier in Domain] = {"Watch", "Intervene"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Tier for Metric] = {"Watch", "Intervene"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vMM_Count_Reports_WatchIntervene_Previous = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Count(distinct {<[Overall Tier] = {"Watch", "Intervene"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			    IF ('&chr(36)&'(vExpr_SomeDomainsSelected_AllMetricsPossible), 
			    	Count(distinct {<[Tier in Domain] = {"Watch", "Intervene"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			        IF ('&chr(36)&'(vExpr_SomeMetricsSelected), 
			          Count(distinct {<[Tier for Metric] = {"Watch", "Intervene"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}%SchoolReportYearKey),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		

		let vMM_Count_Students = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Sum({<[Overall Tier] = {"*"}>}Enrollment),
			    IF ('&chr(36)&'(vExpr_SingleDomainSelected), 
			    	Sum({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}>}Enrollment),
			        IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
			          Sum({<[Tier for Metric] = {"*"}>}Enrollment),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';

		// The number of students in the most recent year.
		let vMM_Count_Students_Current = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Sum({<[Overall Tier] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}Enrollment),
			    IF ('&chr(36)&'(vExpr_SingleDomainSelected), 
			    	Sum({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}Enrollment),
			        IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
			          Sum({<[Tier for Metric] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}Enrollment),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vLab_Count_Students_Current = chr(39)&'# of Students ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);

		// The number of students in the previous year.
		let vMM_Count_Students_Previous = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Sum({<[Overall Tier] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}Enrollment),
			    IF ('&chr(36)&'(vExpr_SingleDomainSelected), 
			    	Sum({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}Enrollment),
			        IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
			          Sum({<[Tier for Metric] = {"*"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}Enrollment),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vLab_Count_Students_Previous = chr(39)&'# of Students ('&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&')'&chr(39);

		let vMM_Count_Students_ModelReinforce = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Sum({<[Overall Tier] = {"Model", "Reinforce"}>}Enrollment),
			    IF ('&chr(36)&'(vExpr_SingleDomainSelected), 
			    	Sum({<[Tier in Domain] = {"Model", "Reinforce"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}>}Enrollment),
			        IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
			          Sum({<[Tier for Metric] = {"Model", "Reinforce"}>}Enrollment),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vMM_Count_Students_ModelReinforce_Current = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Sum({<[Overall Tier] = {"Model", "Reinforce"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}Enrollment),
			    IF ('&chr(36)&'(vExpr_SingleDomainSelected), 
			    	Sum({<[Tier in Domain] = {"Model", "Reinforce"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}Enrollment),
			        IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
			          Sum({<[Tier for Metric] = {"Model", "Reinforce"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}Enrollment),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vMM_Count_Students_ModelReinforce_Previous = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
				Sum({<[Overall Tier] = {"Model", "Reinforce"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}Enrollment),
			    IF ('&chr(36)&'(vExpr_SingleDomainSelected), 
			    	Sum({<[Tier in Domain] = {"Model", "Reinforce"}, [Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}Enrollment),
			        IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
			          Sum({<[Tier for Metric] = {"Model", "Reinforce"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}Enrollment),
			        )
			    )
			)
			, '&chr(39)&'#,##0'&chr(39)&')';
		let vMM_Count_Students_ModelReinforce_YOY = 'Num(
			'&chr(36)&'(vMM_Count_Students_ModelReinforce_Current)-'&chr(36)&'(vMM_Count_Students_ModelReinforce_Previous)
			, '&chr(39)&'#,##0'&chr(39)&')';

	//// Titles and labels
		let vText_AverageOrSingle = 'IF(GetPossibleCount([School Name]) > 1, '&chr(39)&'Average '&chr(39)&', '&chr(39)&''&chr(39)&')';

		let vText_AvgOrSingle = 'IF(GetPossibleCount([School Name]) > 1, '&chr(39)&'Avg '&chr(39)&', '&chr(39)&''&chr(39)&')';

		let vText_Level_OverallToDomainToMetric = 'IF('&chr(36)&'(vExpr_SingleDomainSelected_or_SingleMetricSelected),
		    	IF('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible), Only(GetFieldSelections([Domain_Name])),
		        	IF('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible), '&chr(39)&'Available Domains'&chr(39)&',
		        		IF('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'Selected Metrics'&chr(39)&',
                		IF('&chr(36)&'(vExpr_SingleMetricSelected), Only(GetFieldSelections([Metric_Name]))
		        	)
                ))),
				'&chr(39)&'Overall'&chr(39)&'
	    	)';

	    let vText_Prep_OverallToDomainToMetric = 'IF('&chr(36)&'(vExpr_SingleDomainSelected_or_SingleMetricSelected),
		    	IF('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible), '&chr(39)&'in'&chr(39)&',
		        IF('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible), '&chr(39)&'for'&chr(39)&',
		        IF('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'for'&chr(39)&',
                IF('&chr(36)&'(vExpr_SingleMetricSelected), '&chr(39)&'in'&chr(39)&'
		        )))),
				'&chr(39)&''&chr(39)&'
	    	)';

		
		let vTitle_Avg_PercScore_OverallToDomainToMetric = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned '&chr(39)&' & '&chr(36)&'(vText_Prep_OverallToDomainToMetric) & '&chr(39)&' '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';

		let vTitle_Avg_PercScore_OverallToDomainToMetric_CompareYears = chr(39)&'Compare '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned '&chr(39)&' & '&chr(36)&'(vText_Prep_OverallToDomainToMetric) & '&chr(39)&' '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&' between '&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&' and '&chr(39)&' & '&chr(36)&'(v_Max_Year)';

		

		let vTitle_Avg_Tier_OverallToDomainToMetric = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier '&chr(39)&' & '&chr(36)&'(vText_Prep_OverallToDomainToMetric) & '&chr(39)&' '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';

		let vTitle_Avg_PointsEarned_OverallToDomainToMetric_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Points Earned '&chr(39)&' & '&chr(36)&'(vText_Prep_OverallToDomainToMetric) & '&chr(39)&' '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';

		let vTitle_Avg_PointsPossible_OverallToDomainToMetric_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Points Possible '&chr(39)&' & '&chr(36)&'(vText_Prep_OverallToDomainToMetric) & '&chr(39)&' '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';

		let vTitle_Avg_PercScore_DomainToMetric_3Year_Current = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric)';
				
		let vText_Level_DomainToMetric = 'IF('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible), 
				'&chr(39)&'Domain'&chr(39)&',
				If('&chr(36)&'(vExpr_SingleDomainSelected),
					'&chr(39)&'Metric in '&chr(39)&' & Only(GetFieldSelections([Domain_Name])),
					'&chr(39)&'Metric'&chr(39)&'
				)
			)';

		let vText_Prep_DomainToMetric = 'IF('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible), 
				'&chr(39)&'for each'&chr(39)&',
				If('&chr(36)&'(vExpr_SingleDomainSelected),
					'&chr(39)&'for each'&chr(39)&',
					'&chr(39)&'for each'&chr(39)&'
				)
			)';



		let vTitle_Avg_PercScore_DomainToMetric = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned '&chr(39)&' & '&chr(36)&'(vText_Prep_DomainToMetric) & '&chr(39)&' '&chr(39)&' & '&chr(36)&'(vText_Level_DomainToMetric)';

		let vTitle_Avg_Tier_DomainToMetric = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier '&chr(39)&' & '&chr(36)&'(vText_Prep_DomainToMetric) & '&chr(39)&' '&chr(39)&' & '&chr(36)&'(vText_Level_DomainToMetric)';

		let vTitle_MaxScore_DomainToMetric = chr(39)&'Max Points '&chr(39)&' & '&chr(36)&'(vText_Prep_DomainToMetric) & '&chr(39)&' '&chr(39)&' & '&chr(36)&'(vText_Level_DomainToMetric)';

		/*
		let vTitle_MaxScore_DomainToMetric = 'If('&chr(36)&'(vExpr_SingleDomainSelected), 
				'&chr(39)&'Max Points for Metric in '&chr(39)&' & Only(GetFieldSelections([Domain_Name]))
				'&chr(39)&'Max Points in Domain'&chr(39)&'
			)';
	
		let vTitle_Avg_PercScore_DomainToMetric = chr(36)&'(vText_AverageOrSingle) & 
			If('&chr(36)&'(vExpr_SingleDomainSelected), 
				'&chr(39)&'Percent Earned for Metrics in '&chr(39)&' & Only(GetFieldSelections([Domain_Name])), 
				'&chr(39)&'Percent Earned for Domains'&chr(39)&'
			)';
		*/
		let vTitle_Avg_PercScore_NetworkToDomainToMetric = 'IF(GetPossibleCount([Learning Network]) = 1, 
				'&chr(36)&'(vTitle_Avg_PercScore_DomainToMetric)  &
					If(GetSelectedCount([Learning Network]) = 1, '&chr(39)&' in '&chr(39)&' & Only(GetFieldSelections([Learning Network])),
					If(GetSelectedCount([School Abbrev Name (Reporting Category)]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([School Abbrev Name (Reporting Category)])),	
					If(GetSelectedCount([School Name]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([School Name])),
					If(GetSelectedCount([Publication Name]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([Publication Name])),
					If(GetSelectedCount([School Name]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([School Name])),
					If(GetSelectedCount([Abbreviated Name]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([Abbreviated Name])),
					If(GetSelectedCount([School Name (Reporting Category)]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([School Name (Reporting Category)])),
					'&chr(39)&''&chr(39)&')))))))
				,
		        '&chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric)
			)';

		let vTitle_Avg_PercScore_SchoolToDomainToMetric = 'IF(GetPossibleCount([School Abbrev Name (Reporting Category)]) = 1, 
				'&chr(36)&'(vTitle_Avg_PercScore_DomainToMetric)  &
					If(GetSelectedCount([School Abbrev Name (Reporting Category)]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([School Abbrev Name (Reporting Category)])),	
					If(GetSelectedCount([School Name]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([School Name])),
					If(GetSelectedCount([Publication Name]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([Publication Name])),
					If(GetSelectedCount([School Name]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([School Name])),
					If(GetSelectedCount([Abbreviated Name]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([Abbreviated Name])),
					If(GetSelectedCount([School Name (Reporting Category)]) = 1, '&chr(39)&' at '&chr(39)&' & Only(GetFieldSelections([School Name (Reporting Category)])),
					'&chr(39)&''&chr(39)&'))))))
				,
		        '&chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric)
			)';


		
///// Universal Dimensions and Sorts
	let vDim_DomainToMetric = 'IF('&chr(36)&'(vExpr_SingleDomainSelected),
		IF(GetFieldSelections([Domain_Name]) = [Domain_Name],
			[Metric_Name],
	        Null()
	    ),
	    [Domain_Name]
	)';

	let vSort_PeerGroup = 'IF(WildMatch([Peer Group], '&chr(39)&'*-*'&chr(39)&') > 0, 
		  If (WildMatch([Peer Group], '&chr(39)&'ES*'&chr(39)&') > 0, Num#(Right([Peer Group], 1)),
		    If (WildMatch([Peer Group], '&chr(39)&'K8*'&chr(39)&') > 0, 5 + Num#(Right([Peer Group], 1)), 
		    If (WildMatch([Peer Group], '&chr(39)&'MS*'&chr(39)&') > 0, 14 + Num#(Right([Peer Group], 1)), 
		    If (WildMatch([Peer Group], '&chr(39)&'HS*'&chr(39)&') > 0,  17 + Num#(Right([Peer Group], 1)))))),
		 23 + Match([Peer Group], '&chr(39)&'ES'&chr(39)&', '&chr(39)&'K8'&chr(39)&', '&chr(39)&'MS'&chr(39)&', '&chr(39)&'HS'&chr(39)&')   
		)';

	let vSort_Report = 'match([SPR Report Type],
				'&chr(39)&'ES'&chr(39)&','&chr(39)&'K8'&chr(39)&','&chr(39)&'MS'&chr(39)&','&chr(39)&'HS'&chr(39)&')';
	
	//// Calculation Condition
		/// 
			let vCalc_ZeroOrOne_Metrics = 'If('&chr(36)&'(vExpr_NoMetricSelected) or '&chr(36)&'(vExpr_SingleMetricSelected), 1, 0)';

			let vCalcDisplay_ZeroOrOne_Metrics = 'If('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'You have multiple metrics selected. Please select only one.'&chr(39)&')';

			let vCalc_ZeroOrOne_Domains_Metrics = 'If('&chr(36)&'(vExpr_AllDomainsPossible) or '&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible) or '&chr(36)&'(vExpr_SingleMetricSelected), 1, 0)';

			let vCalcDisplay_ZeroOrOne_Domains_Metrics = 'If('&chr(36)&'(vExpr_MultipleDomainsSelected), '&chr(39)&'You have multiple domains selected. Please select only one.'&chr(39)&',
					If('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'You have multiple metrics selected. Please select only one.'&chr(39)&',
				))';

			let vCalc_ZeroOrOne_Domains_Metrics_TwoConsecYears = 'If(('&chr(36)&'(vExpr_AllDomainsPossible) or '&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible) or '&chr(36)&'(vExpr_SingleMetricSelected)) and
					(GetSelectedCount(Year) = 0 or GetSelectedCount(Year) > 1 and WildMatch(Concat(GetFieldSelections([Year])),'&chr(39)&'*'&chr(36)&'(='&chr(36)&'(v_Last_Year))*'&chr(39)&'))
					, 1, 0)';

			let vCalcDisplay_ZeroOrOne_Domains_Metrics_TwoConsecYears = 'If (GetSelectedCount(Year) > 0 and Not(WildMatch(Concat(GetFieldSelections([Year])),'&chr(39)&'*'&chr(36)&'(='&chr(36)&'(v_Last_Year))*'&chr(39)&')), '&chr(39)&'Please select two consecutive school years for comparison.'&chr(39)&',
					If('&chr(36)&'(vExpr_MultipleDomainsSelected), '&chr(39)&'You have multiple domains selected. Please select only one.'&chr(39)&',
						If('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'You have multiple metrics selected. Please select only one.'&chr(39)&',
				)))';


			let vCalc_ZeroOrOne_Domains_Metrics_After2012 = 'If(('&chr(36)&'(vExpr_AllDomainsPossible) or '&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible) or '&chr(36)&'(vExpr_SingleMetricSelected)) and
					(GetPossibleCount(Year) > 1 or GetSelectedCount(Year) = 1 and Not(WildMatch(Concat(GetFieldSelections([Year])),'&chr(39)&'*2012-2013*'&chr(39)&')))
					, 1, 0)';

			let vCalcDisplay_ZeroOrOne_Domains_Metrics_After2012 = 'If(GetSelectedCount(Year) = 1 and WildMatch(Concat(GetFieldSelections([Year])),'&chr(39)&'*2012-2013*'&chr(39)&'), '&chr(39)&'2012-2013 enrollment data is not available, please select another year.'&chr(39)&' ,
					If (GetSelectedCount(Year) > 0 and Not(WildMatch(Concat(GetFieldSelections([Year])),'&chr(39)&'*'&chr(36)&'(='&chr(36)&'(v_Last_Year))*'&chr(39)&')), '&chr(39)&'Please select two consecutive school years for comparison.'&chr(39)&',
						If('&chr(36)&'(vExpr_MultipleDomainsSelected), '&chr(39)&'You have multiple domains selected. Please select only one.'&chr(39)&',
							If('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'You have multiple metrics selected. Please select only one.'&chr(39)&',
				))))';
					

///// Landing Page

	

	//// KPI (top-left): Avg Percent Earned - drill from overall to selected domain/metric

		/// Title
			// vTitle_Avg_PercScore_OverallToDomainToMetric

		/// SubTitle
			let vSubTitle_Avg_PercScore_OverallToDomainToMetric = chr(39)&'# of reports: '&chr(39)&' & '&chr(36)&'(vMM_Count_Reports_Current) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&'), '&chr(39)&' & '&chr(36)&'(vMM_Count_Reports_Previous) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&')'&chr(39);

		/// Footnote:
			let vFootnote_Avg_PercScore_OverallToDomainToMetric = chr(39)&'Note: '&chr(39)&' & '&chr(36)&'(vMM_Count_Exceptions_Current) & '&chr(39)&' reports are excluded in '&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&' due to exceptions. '&chr(39)&' & '&chr(36)&'(vMM_Count_Exceptions_Previous) & '&chr(39)&' reports are excluded in '&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&' due to exceptions.'&chr(39);

		/// Measure 1: Average Percent Earned in the Current Year (drill from overall to selected domain to selected metric)
			// Description:
			// SPR Percent Earned for the current year. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
			let vMM_Avg_PercScore_OverallToDomainToMetric_Current = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned Overall]),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned in Domain]),
				        IF ('&chr(36)&'(vExpr_SingleMetricSelected),
				        	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned for Metric]),
				            Avg(Aggr(If(Count({<[Points Possible for Metric]={""}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}%SchoolReportYearKey) = 0, Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric])), [%SchoolReportYearKey]))
				        )
				    )
				)
				, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_OverallToDomainToMetric_Current = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);
			
		/// Measure 2: YOY 
			// Average SPR Percent Earned in the previous year. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
			let vMM_Avg_PercScore_OverallToDomainToMetric_Previous = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned Overall]),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]),
				        IF ('&chr(36)&'(vExpr_SingleMetricSelected),
				        	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned for Metric]),
				            Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey]))
				        )
				    )
				)
				, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_OverallToDomainToMetric_Previous = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric) & '&chr(39)&' ('&chr(39)&'& '&chr(36)&'(v_Last_Year) &'&chr(39)&')'&chr(39);	

			// Change in SPR Percent Earned from the previous year to the current year. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
			let vMM_Avg_PercScore_OverallToDomainToMetric_YOY = 'Num(
				Round('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous), 0.01)
				, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_OverallToDomainToMetric_YOY = chr(39)&'YOY: '&chr(39)&' & '&chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric)';	

	//// KPI (top-left-middle): 3 Year Runniing Average Percent Earned - drill from overall to selected domain/metric
		/// Title
			let vTitle_Avg_PercScore_OverallToDomainToMetric_3Year_Current = chr(39)&'3 Year '&chr(39)&' & '&chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric)';

		/// SubTitle
			let vSubTitle_Avg_PercScore_OverallToDomainToMetric_3Year_Current = chr(39)&'Most recent 3 years: '&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&', '&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&', '&chr(39)&' & '&chr(36)&'(v_LastLast_Year)';

		/// Measure 1:
			// The average percent of possible points earned in the most recent three years. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
			let vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					If( Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned Overall]) >= 0 and 
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned Overall]) >= 0 and
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned Overall]) >= 0
						,
						RangeAvg(
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned Overall]) ,
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned Overall]) ,
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned Overall]) 
			        )),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	If(Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned in Domain]) >= 0 and
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]) >= 0 and
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned in Domain]) >= 0
			          		 ,
				    		RangeAvg(
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned in Domain]) ,
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]) ,
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned in Domain]) 
			          	)),
				        IF ('&chr(36)&'(vExpr_SingleMetricSelected),
				        	If( Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned for Metric]) >= 0 and
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned for Metric]) >= 0 and
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned for Metric]) >= 0
				              	,
				        		RangeAvg(
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned for Metric]) ,
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned for Metric]) ,
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned for Metric]) 
				          	)),
				            If( Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])) >= 0 and
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])) >= 0 and
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])) >= 0
				              ,
				            	RangeAvg(
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])),
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])),
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey]))
				            ))
				        )
				    )
				)
				+ 0.0001, '&chr(39)&'#0.#%'&chr(39)&')';


			let vLab_Avg_PercScore_OverallToDomainToMetric_3Year_Current = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric_3Year_Current) & '&chr(39)&' (up to '&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);
		
		/// Measure 1:
			// The average percent of possible points earned in the most recent three years prior to the current year. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
			let vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Previous = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					If( Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned Overall]) >= 0 and 
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned Overall]) >= 0 and
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Percent Earned Overall]) >= 0
						,
						RangeAvg(
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned Overall]) ,
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned Overall]) ,
			           	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Percent Earned Overall]) 
			        )),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	If(Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]) >= 0 and
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned in Domain]) >= 0 and
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Percent Earned in Domain]) >= 0
			          		 ,
				    		RangeAvg(
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]) ,
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned in Domain]) ,
			              	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Percent Earned in Domain]) 
			          	)),
				        IF ('&chr(36)&'(vExpr_SingleMetricSelected),
				        	If( Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned for Metric]) >= 0 and
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned for Metric]) >= 0 and
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Percent Earned for Metric]) >= 0
				              	,
				        		RangeAvg(
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned for Metric]) ,
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Percent Earned for Metric]) ,
				              	Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Percent Earned for Metric]) 
				          	)),
				            If( Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])) >= 0 and
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])) >= 0 and
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])) >= 0
				              ,
				            	RangeAvg(
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])),
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey])),
				              	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey]))
				            ))
				        )
				    )
				)
				+ 0.0001, '&chr(39)&'#0.#%'&chr(39)&')';


			let vLab_Avg_PercScore_OverallToDomainToMetric_3Year_Previous = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric_3Year_Current)  & '&chr(39)&' (up to '&chr(39)&'& '&chr(36)&'(v_Last_Year) &'&chr(39)&')'&chr(39);
		
			// The change in the average percent of possible points earned from the previous 3-year period to the most recent 3-year period. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
			let vMM_Avg_PercScore_OverallToDomainToMetric_3Year_YOY = 'Num(
					Round('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Previous), 0.001)
				, '&chr(39)&'#0.#%'&chr(39)&')';


			let vLab_Avg_PercScore_OverallToDomainToMetric_3Year_YOY = chr(39)&'YOY: '&chr(39)&' & '&chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric_3Year_Current)';
		
	//// KPI  (top-right-middle): % of schools classified as model or reinforce
		/// Title
			// '&chr(39)&'% of "Model" and "Reinforce" School Reports'&chr(39)&'

		/// SubTitle
			let vSubTitle_Ratio_Reports_ModelReinforce = chr(36)&'(vMM_Count_Reports_ModelReinforce_Current) & '&chr(39)&' of '&chr(39)&' & '&chr(36)&'(vMM_Count_Reports_Current) & '&chr(39)&' Reports ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);
			
		/// Measure 1:
			// The % of school reports with overall scores that put them in either the "Model" and "Reinforce" tiers (scores >= 50).	
			let vMM_Ratio_Reports_ModelReinforce_Current = 'Num('&chr(36)&'(vMM_Count_Reports_ModelReinforce_Current) / '&chr(36)&'(vMM_Count_Reports_Current), '&chr(39)&'#0.#%'&chr(39)&')';

			let vLab_Ratio_Reports_ModelReinforce_Current = chr(39)&'% of "Model" and "Reinforce" School Reports ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

		/// Measure 2:
			// The change from the previous to most recent year in the percent of school reports with overall scores that put them in either the "Model" and "Reinforce" tiers (scores >= 50).
			let vMM_Ratio_Reports_ModelReinforce_YOY = 'Num('&chr(36)&'(vMM_Ratio_Reports_ModelReinforce_Current) - '&chr(36)&'(vMM_Count_Reports_ModelReinforce_Previous) / '&chr(36)&'(vMM_Count_Reports_Previous), '&chr(39)&'#0.#%'&chr(39)&')';

			let vLab_Ratio_Reports_ModelReinforce_YOY = chr(39)&'YOY: % of "Model" and "Reinforce" School Reports'&chr(39);

	//// KPI  (top-right): % of students in schools classified as model or reinforce
		/// Title
			// % of Students in "Model" and "Reinforce" School Reports

		/// SubTitle
			let vSubTitle_Ratio_Students_ModelReinforce = chr(36)&'(vMM_Count_Students_ModelReinforce_Current) & '&chr(39)&' of '&chr(39)&' & '&chr(36)&'(vMM_Count_Students_Current) & '&chr(39)&' Students ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);
			
		/// Measure 1:
			// The % of students in schools with overall scores that put them in either the "Model" and "Reinforce" tiers (scores >= 50).	
			let vMM_Ratio_Students_ModelReinforce_Current = 'Num('&chr(36)&'(vMM_Count_Students_ModelReinforce_Current) / '&chr(36)&'(vMM_Count_Students_Current), '&chr(39)&'#0.#%'&chr(39)&')';

			let vLab_Ratio_Students_ModelReinforce_Current = chr(39)&'% of Students in "Model" and "Reinforce" School Reports ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

		/// Measure 1:
			// The change from the previous to most recent year in the percent of students in schools with overall scores that put them in either the "Model" and "Reinforce" tiers (scores >= 50).
			let vMM_Ratio_Students_ModelReinforce_YOY = 'Num('&chr(36)&'(vMM_Ratio_Students_ModelReinforce_Current) - '&chr(36)&'(vMM_Count_Students_ModelReinforce_Previous) / '&chr(36)&'(vMM_Count_Students_Previous), '&chr(39)&'#0.#%'&chr(39)&')';

			let vLab_Ratio_Students_ModelReinforce_YOY = chr(39)&'YOY: % of Students in "Model" and "Reinforce" School Reports'&chr(39);

	//// Combo Chart (bottom-left): Average by Domain, drill to metric
		/// Title
			// vTitle_Avg_PercScore_DomainToMetric
			

		/// SubTitle

		/// Measure 1
			// The percent of possible points earned for all available metrics in the most current year. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_DomainToMetric_Current = 'Num(
					IF('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible),		        	
					  Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned in Domain])
					  ,
			          Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearMetricKey]))
			        )
					+ 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_DomainToMetric_Current = 'If('&chr(36)&'(vExpr_SingleDomainSelected), '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned for Metrics in '&chr(39)&' & Only(GetFieldSelections([Domain_Name])), '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned for Domains'&chr(39)&') &
				'&chr(39)&' ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

		/// Measure 2
			// The percent of possible points earned for all available metrics in the previous year. Without selections this defaults to the domain level.  If a single domain is selected this will display individual metrics
			let vMM_Avg_PercScore_DomainToMetric_Previous = 'Num(
					IF('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible),		     	
			          Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]),
			          Avg(Aggr(Sum({<IsSum={0}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Earned]) / Sum({<IsSum={0}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Possible]), [%SchoolReportYearMetricKey]))
			        )
					+ 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_DomainToMetric_Previous = 'If('&chr(36)&'(vExpr_SingleDomainSelected), '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned for Metrics in '&chr(39)&' & Only(GetFieldSelections([Domain_Name])), '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned for Domains'&chr(39)&') &
				'&chr(39)&' ('&chr(39)&'& '&chr(36)&'(v_Last_Year) &'&chr(39)&')'&chr(39);

		/// Color
			let vCol_Avg_PercScore_DomainToMetric_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_DomainToMetric_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_DomainToMetric_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_DomainToMetric_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_DomainToMetric_Current) >= 0.75, rgb(0,112,192)))))';

	//// Line Chart (bottom-left-middle): 3 Year Average by Domain, drill to metric
		/// Title
			let vTitle_Avg_PercScore_OverallToDomainToMetric_3Year = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric) & '&chr(39)&' for Previous 3 Years'&chr(39);
			let vTitle_Avg_PercScore_OverallToDomainToMetric_4Year = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric) & '&chr(39)&' for Previous 4 Years'&chr(39);
			

		/// SubTitle

		/// Measure 1
			// Description:
			// Percent of Points Earned for the previous three years. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
			let vMM_Avg_PercScore_OverallToDomainToMetric_3Year = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					Avg({<YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Percent Earned Overall]),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Percent Earned in Domain]),
				        IF ('&chr(36)&'(vExpr_SingleMetricSelected),
				        	Avg({<YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Percent Earned for Metric]),
				            Avg(Aggr(If(Count({<[Points Possible for Metric]={""}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey) = 0, Sum({<YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned for Metric]) / Sum({<YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible for Metric])), [%SchoolReportYearKey]))
				        )
				    )
				)
				, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_OverallToDomainToMetric_3Year = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric)';

			let vMM_Avg_PercScore_OverallToDomainToMetric_4Year = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					Avg({<YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Percent Earned Overall]),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Percent Earned in Domain]),
				        IF ('&chr(36)&'(vExpr_SingleMetricSelected),
				        	Avg({<YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Percent Earned for Metric]),
				            Avg(Aggr(If(Count({<[Points Possible for Metric]={""}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearKey) = 0, Sum({<YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned for Metric]) / Sum({<YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Possible for Metric])), [%SchoolReportYearKey]))
				        )
				    )
				)
				, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_OverallToDomainToMetric_4Year = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric)';

			
		/// Color
			let vCol_Avg_PercScore_OverallToDomainToMetric_3Year = 'IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year) >= 0.75, rgb(0,112,192)))))';

			let vCol_Avg_PercScore_OverallToDomainToMetric_4Year = 'IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_4Year) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_4Year) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_4Year)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_4Year) >= 0.75, rgb(0,112,192)))))';

	// #c0504d
	// #f79646
	// #00b050
	// #0070c0

	//// Combo Chart (bottom-right-middle): % of Schools in each Tier
		/// Title
			// '&chr(39)&'% of School Reports in each Tier'&chr(39)&'

		/// Subtitle

		/// Measure 1
			// vMM_Count_Reports_Current

		/// Measure 2
			// vMM_Count_Reports_Previous

		/// Colorl
			let vCol_Tier = 'IF([Tier] = '&chr(39)&'Intervene'&chr(39)&', rgb(192,80,77),
				IF([Tier] = '&chr(39)&'Watch'&chr(39)&', rgb(247,150,70),
				IF([Tier] = '&chr(39)&'Reinforce'&chr(39)&', rgb(0,176,80),
				IF([Tier] = '&chr(39)&'Model'&chr(39)&', rgb(0,112,192)))))';

	//// Combo Chart (bottom-right-middle): % of Schools in each Tier
		/// Title
			// '&chr(39)&'% of Students in Schools From each Tier'&chr(39)&'

		/// Subtitle

		/// Measure 1
			// vMM_Count_Students_Current

		/// Measure 2
			// vMM_Count_Students_Previous

		/// Color
			// vCol_OverallTier

///// YOY Percent Earneds (by Network, Domain, Metric)
	//// Combo Chart (center): Average Schore by Network, School Report

		/// Title
			//vTitle_Avg_PercScore_NetworkToDomainToMetric 
			

		/// SubTitle
			let vSubTitle_Avg_PercScore_NetworkToDomainToMetric = chr(39)&'Colored by change from '&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&' to '&chr(39)&' & '&chr(36)&'(v_Max_Year)';

		/// Measure 1
			// SPR Percent Earned for the current year. If a single network is selected, will display each domain score, separately. If a single network and a single domain score is selected, will display each metric score, separately. If a specific network is not selected, will display either the overall, domain, or metric score selected for each network, based upon domain and metric selections. 
			let vMM_Avg_PercScore_NetworkToDomainToMetric_Current = 'Num(
				IF (GetPossibleCount([Learning Network]) > 1 and '&chr(36)&'(vExpr_AllDomainsPossible),
					Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned Overall]),
				    IF (GetPossibleCount([Learning Network]) = 1,
                    	IF ('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible),
                        	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned in Domain]),
                            Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned for Metric])
                        ),
                        IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
                    		Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned in Domain]),
				    		IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
				        		Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned for Metric]),
				            	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey]))
                            )
				        )
				    )
				)
				+ 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_NetworkToDomainToMetric_Current = chr(36)&'(vTitle_Avg_PercScore_NetworkToDomainToMetric) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);
				
		// Measure 2
			// SPR Percent Earned for the previous year. If a single network is selected, will display each domain score, separately. If a single network and a single domain score is selected, will display each metric score, separately. If a specific network is not selected, will display either the overall, domain, or metric score selected for each network, based upon domain and metric selections. 
			let vMM_Avg_PercScore_NetworkToDomainToMetric_Previous = 'Num(
				IF (GetPossibleCount([Learning Network]) > 1 and '&chr(36)&'(vExpr_AllDomainsPossible),
					Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned Overall]),
				    IF (GetPossibleCount([Learning Network]) = 1,
                    	IF ('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible),
                        	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]),
                            Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned for Metric])
                        ),
                        IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
                    		Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]),
				    		IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
				        		Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned for Metric]),
				            	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey]))
                            )
				        )
				    )
				)
				+ 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_NetworkToDomainToMetric_Previous = chr(36)&'(vTitle_Avg_PercScore_NetworkToDomainToMetric) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Last_Year) &'&chr(39)&')'&chr(39);
				
			// Change in SPR Percent Earned from the previous to the current year. If a single network is selected, will display each domain score, separately. If a single network and a single domain score is selected, will display each metric score, separately. If a specific network is not selected, will display either the overall, domain, or metric score selected for each network, based upon domain and metric selections. 
			let vMM_Avg_PercScore_NetworkToDomainToMetric_YOY = 'Num(
				Round('&chr(36)&'(vMM_Avg_PercScore_NetworkToDomainToMetric_Current) - '&chr(36)&'(vMM_Avg_PercScore_NetworkToDomainToMetric_Previous), 0.01)
				, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_NetworkToDomainToMetric_YOY = chr(39)&'YOY: '&chr(39)&' & '&chr(36)&'(vTitle_Avg_PercScore_NetworkToDomainToMetric)';	

			let vMax_Avg_PercScore_NetworkToDomainToMetric = 'RangeMin(1.001, 
				Ceil(IF (GetPossibleCount([Learning Network]) > 1, // and '&chr(36)&'(vExpr_AllDomainsPossible),
					RangeMax(
						Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_NetworkToDomainToMetric_Current), [Learning Network])),
						Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_NetworkToDomainToMetric_Previous), [Learning Network]))
					),
					IF ('&chr(36)&'(vExpr_MultipleDomainsPossible),
							RangeMax(
								Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_NetworkToDomainToMetric_Current), [Domain_Name])),
								Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_NetworkToDomainToMetric_Previous), [Domain_Name]))
							),
							RangeMax(
								Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_NetworkToDomainToMetric_Current), [Metric_Name])),
								Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_NetworkToDomainToMetric_Previous), [Metric_Name]))
							)
						)
				) * 10) / 10
			)';

		/// Color
			// '&chr(36)&'(vMM_Avg_PercScore_NetworkToDomainToMetric_YOY)';

///// YOY Percent Earneds (by School, Domain, Metric)
	//// Combo Chart (center): Average Schore by Network, School Report

		/// Title
			// vTitle_Avg_PercScore_SchoolToDomainToMetric
			

		/// SubTitle
			let vSubTitle_Avg_PercScore_SchoolToDomainToMetric = chr(39)&'Colored by change from '&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&' to '&chr(39)&' & '&chr(36)&'(v_Max_Year)';

		/// Measure 1
			// SPR Percent Earned for the current year. If a single school is selected, will display each domain score, separately. If a single school and a single domain score is selected, will display each metric score, separately. If a specific network is not selected, will display either the overall, domain, or metric score selected for each network, based upon domain and metric selections. 
			let vMM_Avg_PercScore_SchoolToDomainToMetric_Current = 'Num(
				IF (GetPossibleCount([School Abbrev Name (Reporting Category)]) > 1 and '&chr(36)&'(vExpr_AllDomainsPossible),
					Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned Overall]),
				    IF (GetPossibleCount([School Abbrev Name (Reporting Category)]) = 1,
                    	IF ('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible),
                        	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned in Domain]),
                            Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned for Metric])
                        ),
                        IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
                    		Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned in Domain]),
				    		IF ('&chr(36)&'(vExpr_SingleMetricSelected),
				        		Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned for Metric]),
				            	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey]))
                            )
				        )
				    )
				)
				+ 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_SchoolToDomainToMetric_Current = chr(36)&'(vTitle_Avg_PercScore_SchoolToDomainToMetric) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);
				

		// Measure 2
			// SPR Percent Earned for the previous year. If a single school is selected, will display each domain score, separately. If a single school and a single domain score is selected, will display each metric score, separately. If a specific network is not selected, will display either the overall, domain, or metric score selected for each network, based upon domain and metric selections. 
			let vMM_Avg_PercScore_SchoolToDomainToMetric_Previous = 'Num(
				IF (GetPossibleCount([School Abbrev Name (Reporting Category)]) > 1 and '&chr(36)&'(vExpr_AllDomainsPossible),
					Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned Overall]),
				    IF (GetPossibleCount([School Abbrev Name (Reporting Category)]) = 1,
                    	IF ('&chr(36)&'(vExpr_MultipleDomainsPossible_AllMetricsPossible),
                        	Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]),
                            Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned for Metric])
                        ),
                        IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
                    		Avg({<[Metric ID] = {"Z_ACH_OVERALL", "Z_PROG_OVERALL", "Z_CLIM_OVERALL", "Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned in Domain]),
				    		IF ('&chr(36)&'(vExpr_SingleMetricSelected),
				        		Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Percent Earned for Metric]),
				            	Avg(Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Earned for Metric]) / Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey]))
                            )
				        )
				    )
				)
				+ 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_SchoolToDomainToMetric_Previous = chr(36)&'(vTitle_Avg_PercScore_SchoolToDomainToMetric) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Last_Year) &'&chr(39)&')'&chr(39);

			// Change in SPR Percent Earned from the previous to the current year. If a single school is selected, will display each domain score, separately. If a single school and a single domain score is selected, will display each metric score, separately. If a specific network is not selected, will display either the overall, domain, or metric score selected for each network, based upon domain and metric selections. 
			let vMM_Avg_PercScore_SchoolToDomainToMetric_YOY = 'Num(
				Round('&chr(36)&'(vMM_Avg_PercScore_SchoolToDomainToMetric_Current) - '&chr(36)&'(vMM_Avg_PercScore_SchoolToDomainToMetric_Previous), 0.01)
				, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_SchoolToDomainToMetric_YOY = chr(39)&'YOY: '&chr(39)&' & '&chr(36)&'(vTitle_Avg_PercScore_SchoolToDomainToMetric)';	

			let vMax_Avg_PercScore_SchoolToDomainToMetric = 'RangeMin(1.001, 
				Ceil(IF (GetPossibleCount([School Abbrev Name (Reporting Category)]) > 1, // and '&chr(36)&'(vExpr_AllDomainsPossible),
					RangeMax(
						Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_SchoolToDomainToMetric_Current), [School Abbrev Name (Reporting Category)])),
						Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_SchoolToDomainToMetric_Previous), [School Abbrev Name (Reporting Category)]))
					),
					IF ('&chr(36)&'(vExpr_MultipleDomainsPossible),
							RangeMax(
								Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_SchoolToDomainToMetric_Current), [Domain_Name])),
								Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_SchoolToDomainToMetric_Previous), [Domain_Name]))
							),
							RangeMax(
								Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_SchoolToDomainToMetric_Current), [Metric_Name])),
								Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_SchoolToDomainToMetric_Previous), [Metric_Name]))
							)
						)
				) * 10) / 10
			)';
		/// Color
			// '&chr(36)&'(vMM_Avg_PercScore_SchoolToDomainToMetric_YOY)';

///// Change from 2015-2016 to 2016-2017 (Sankey Page)

	//// Sheet Name
		let vSheet_Change_from_Previous_to_Current = chr(39)&'Tier and Score Change YOY'&chr(39); //'&chr(39)&'Change from '&chr(39)&' & '&chr(36)&'(v_Last_Year) & '&chr(39)&' to '&chr(39)&' & '&chr(36)&'(v_Max_Year)';

	//// KPI  (top-left): # of school reports
		/// Title			
			let vTitle_Count_Reports = chr(39)&'# of School Reports'&chr(39);
			let vSubTitle_Count_Reports = chr(39)&'With '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&' Scores ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);

		/// Measure 1:
			// vMM_Count_Reports_Current	

	/// KPI 2: 
		/// Title			
			let vTitle_Count_Reports_Increase = chr(39)&'Increased Percent Earned, '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';
			let vSubTitle_Count_Reports_Increase = chr(39)&'By # and % of '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&' Reports ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39)&' ';

		/// Measure 1:
			// The # of schools that increased their SPR score.
			let vMM_Count_Reports_Increase_Current = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
					Sum(Aggr(If(Only(distinct {<[Metric ID] = {"Z_OVERALL_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]) - Only(distinct {<[Metric ID] = {"Z_OVERALL_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]) > 0, 1, 0), [%SchoolReportKey])),
					IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible), 
						If(Only(GetFieldSelections([Domain_Name])) = '&chr(39)&'Achievement'&chr(39)&', 
				       		Sum(Aggr(If(Only(distinct {<[Metric ID] = {"Z_ACH_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]) - Only(distinct {<[Metric ID] = {"Z_ACH_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]) > 0, 1, 0), [%SchoolReportKey])),
				        	If(Only(GetFieldSelections([Domain_Name])) = '&chr(39)&'Progress'&chr(39)&', 
				        		Sum(Aggr(If(Only(distinct {<[Metric ID] = {"Z_PROG_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]) - Only(distinct {<[Metric ID] = {"Z_PROG_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]) > 0, 1, 0), [%SchoolReportKey])),
					     	    If(Only(GetFieldSelections([Domain_Name])) = '&chr(39)&'Climate'&chr(39)&', 
				    		    	Sum(Aggr(If(Only(distinct {<[Metric ID] = {"Z_CLIM_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]) - Only(distinct {<[Metric ID] = {"Z_CLIM_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]) > 0, 1, 0), [%SchoolReportKey])),
				       				If(Only(GetFieldSelections([Domain_Name])) = '&chr(39)&'College & Career'&chr(39)&', 
				        				Sum(Aggr(If(Only(distinct {<[Metric ID] = {"Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]) - Only(distinct {<[Metric ID] = {"Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]) > 0, 1, 0), [%SchoolReportKey]))       
									)
								)
					        )
				       	),
						IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
							Sum(Aggr(If(Only(distinct {<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]) - Only(distinct {<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]) > 0, 1, 0), [%SchoolReportKey]))
						)
					)
				),
				'&chr(39)&'##0'&chr(39)&')';

			let vLab_Count_Reports_Increase_Current = chr(39)&'# of Schools that Increased their SPR Percent Earned'&chr(39);

		/// Measure 2:
			// The % of schools that increased their SPR score.
			let vMM_Ratio_Reports_Increase_Current = 'Num(
				'&chr(36)&'(vMM_Count_Reports_Increase_Current) / '&chr(36)&'(vMM_Count_Reports_Current)				
				, '&chr(39)&'#0.#%'&chr(39)&')';

			let vLab_Ratio_Reports_Increase_Current = chr(39)&'% of Schools that Increased their SPR Percent Earned'&chr(39);
	
	/// KPI 3: 
		/// Title			
			let vTitle_Count_Reports_IncreaseTier = chr(39)&'Increased Tier, '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';
			let vSubTitle_Count_Reports_IncreaseTier = chr(39)&'By # and % of '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&' Reports ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39)&' ';

		/// Measure 1:
			// The # of schools that increased their SPR Tier level (such as Watch to Reinforce or Model).
			let vMM_Count_Reports_IncreaseTier_Current = 'Num(			     
				IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
					Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_OVERALL_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) - Div(100 * Only( distinct {<[Metric ID] = {"Z_OVERALL_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) > 0, 1, 0), [%SchoolReportKey])),
					IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible), 
						If(Only( GetFieldSelections([Domain_Name])) = '&chr(39)&'Achievement'&chr(39)&', 
				        	Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_ACH_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) - Div(100 * Only( distinct {<[Metric ID] = {"Z_ACH_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) > 0, 1, 0), [%SchoolReportKey])),
					        If(Only( GetFieldSelections([Domain_Name])) = '&chr(39)&'Progress'&chr(39)&', 
					        	Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_PROG_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) - Div(100 * Only( distinct {<[Metric ID] = {"Z_PROG_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) > 0, 1, 0), [%SchoolReportKey])),
						        If(Only( GetFieldSelections([Domain_Name])) = '&chr(39)&'Climate'&chr(39)&', 
						        	Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_CLIM_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) - Div(100 * Only( distinct {<[Metric ID] = {"Z_CLIM_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) > 0, 1, 0), [%SchoolReportKey])),
					   			    If(Only( GetFieldSelections([Domain_Name])) = '&chr(39)&'College & Career'&chr(39)&', 
					        			Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) - Div(100 * Only( distinct {<[Metric ID] = {"Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) > 0, 1, 0), [%SchoolReportKey]))       
									)									
						        )
					        )
					    ),    
						IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
							Sum(Aggr(If(Div(100 * Only( distinct {<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) - Div(100 * Only( distinct {<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) > 0, 1, 0), [%SchoolReportKey]))
						)
					)
				),
				'&chr(39)&'##0'&chr(39)&')';

			let vLab_Count_Reports_IncreaseTier_Current = chr(39)&'# of Schools that Increased their SPR Tier'&chr(39);

		/// Measure 2:
			// The % of schools that increased their SPR Tier level (such as Watch to Reinforce or Model).
			let vMM_Ratio_Reports_IncreaseTier_Current = 'Num(
				'&chr(36)&'(vMM_Count_Reports_IncreaseTier_Current) / '&chr(36)&'(vMM_Count_Reports_Current)				
				, '&chr(39)&'#0.#%'&chr(39)&')';

			let vLab_Ratio_Reports_IncreaseTier_Current = chr(39)&'% of Schools that Increased their SPR Tier'&chr(39);

	/// KPI 4: 
		/// Title			
			let vTitle_Count_Reports_MovedToUpperTier = chr(39)&'Moved to Highest 2 Tiers, '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';
			let vSubTitle_Count_Reports_MovedToUpperTier = chr(39)&'By # and % of '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric) & '&chr(39)&' Reports ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39)&' ';

		/// Measure 1:
			// The # of schools that moved from Intervene or Watch to Reinforce or Model.
			let vMM_Count_Reports_MovedToUpperTier_Current = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
					Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_OVERALL_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) > 1 and Div(100 * Only( distinct {<[Metric ID] = {"Z_OVERALL_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) <= 1, 1, 0), [%SchoolReportKey])),
					IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible), 
						If(Only( GetFieldSelections([Domain_Name])) = '&chr(39)&'Achievement'&chr(39)&', 
				        	Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_ACH_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) > 1 and Div(100 * Only( distinct {<[Metric ID] = {"Z_ACH_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) <= 1, 1, 0), [%SchoolReportKey])),
					        If(Only( GetFieldSelections([Domain_Name])) = '&chr(39)&'Progress'&chr(39)&', 
					        	Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_PROG_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) > 1 and Div(100 * Only( distinct {<[Metric ID] = {"Z_PROG_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) <= 1, 1, 0), [%SchoolReportKey])),
						        If(Only( GetFieldSelections([Domain_Name])) = '&chr(39)&'Climate'&chr(39)&', 
						        	Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_CLIM_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) > 1 and Div(100 * Only( distinct {<[Metric ID] = {"Z_CLIM_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) <= 1, 1, 0), [%SchoolReportKey])),
					   			    If(Only( GetFieldSelections([Domain_Name])) = '&chr(39)&'College & Career'&chr(39)&', 
					        			Sum(Aggr(If(Div(100 * Only( distinct {<[Metric ID] = {"Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) > 1 and Div(100 * Only( distinct {<[Metric ID] = {"Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) <= 1, 1, 0), [%SchoolReportKey]))       
									)
								)
							)
					    ),
						IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
							Sum(Aggr(If(Div(100 * Only( distinct {<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [Percent Earned]), 25) > 1 and Div(100 * Only( distinct {<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Last_YearEnd))}>} [Percent Earned]), 25) <= 1, 1, 0), [%SchoolReportKey]))
						)
					)
				),
				'&chr(39)&'##0'&chr(39)&')';

			let vLab_Count_Reports_MovedToUpperTier_Current = chr(39)&'# of Schools that Moved to Highest 2 Tiers from Lowest 2'&chr(39);
	
		/// Measure 2:
			// The % of schools that moved from Intervene or Watch to Reinforce or Model.
			let vMM_Ratio_Reports_MovedToUpperTier_Current = 'Num(
				'&chr(36)&'(vMM_Count_Reports_MovedToUpperTier_Current) / '&chr(36)&'(vMM_Count_Reports_Current)				
				, '&chr(39)&'#0.#%'&chr(39)&')';

			let vLab_Ratio_Reports_MovedToUpperTier_Current = chr(39)&'% of Schools that Moved to Highest 2 Tiers from Lowest 2'&chr(39);

	//// Sankey (bottom-left)

		/// Footnote:
			let vFootnote_Count_Tier_OverallToDomainToMetric = chr(39)&'Note: '&chr(39)&' & (Sum(Aggr ( Fabs('&chr(36)&'(vMM_Count_Reports_Current) - '&chr(36)&'(vMM_Count_Reports_Previous)), [%SchoolReportKey]))) & '&chr(39)&' reports are excluded from the diagram because of missing values in one of two years.'&chr(39); 

		/// Variables for selecting the appropriate year
			let v_Sankey_Current = 'If('&chr(36)&'(v_Max_YearEnd) = 2018, '&chr(39)&'Tier (2017-2018)'&chr(39)&',
    			If('&chr(36)&'(v_Max_YearEnd) = 2017, '&chr(39)&'Tier (2016-2017)'&chr(39)&',
    			If('&chr(36)&'(v_Max_YearEnd) = 2016, '&chr(39)&'Tier (2015-2016)'&chr(39)&',
    			If('&chr(36)&'(v_Max_YearEnd) = 2015, '&chr(39)&'Tier (2014-2015)'&chr(39)&',
    			If('&chr(36)&'(v_Max_YearEnd) = 2014, '&chr(39)&'Tier (2013-2014)'&chr(39)&',
                If('&chr(36)&'(v_Max_YearEnd) = 2013, '&chr(39)&'Tier (2012-2013)'&chr(39)&'
    			))))))';

    		let v_Sankey_Previous = 'If('&chr(36)&'(v_Last_YearEnd) = 2017, '&chr(39)&'Tier (2016-2017)'&chr(39)&',
    			If('&chr(36)&'(v_Last_YearEnd) = 2016, '&chr(39)&'Tier (2015-2016)'&chr(39)&',
    			If('&chr(36)&'(v_Last_YearEnd) = 2015, '&chr(39)&'Tier (2014-2015)'&chr(39)&',
    			If('&chr(36)&'(v_Last_YearEnd) = 2014, '&chr(39)&'Tier (2013-2014)'&chr(39)&',
                If('&chr(36)&'(v_Last_YearEnd) = 2013, '&chr(39)&'Tier (2012-2013)'&chr(39)&'
    			)))))';

			let v_Sankey_Previous2 = 'If('&chr(36)&'(v_LastLast_YearEnd) = 2016, '&chr(39)&'Tier (2015-2016)'&chr(39)&',
    			If('&chr(36)&'(v_LastLast_YearEnd) = 2015, '&chr(39)&'Tier (2014-2015)'&chr(39)&',
    			If('&chr(36)&'(v_LastLast_YearEnd) = 2014, '&chr(39)&'Tier (2013-2014)'&chr(39)&',
                If('&chr(36)&'(v_LastLast_YearEnd) = 2013, '&chr(39)&'Tier (2012-2013)'&chr(39)&'
    			))))';    		
  		

		/// Measure (for size)
			let vMM_Count_Tier_OverallToDomainToMetric = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible), 
					Count(distinct {<[Points Possible] = {">0"}, [Metric ID] = {"Z_OVERALL_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [%SchoolReportMetricKey]),
					IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible), 
						If(Only(GetFieldSelections([Domain_Name])) = '&chr(39)&'Achievement'&chr(39)&', 
				        	Count(distinct {<[Points Possible] = {">0"}, [Metric ID] = {"Z_ACH_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [%SchoolReportMetricKey]),
					        If(Only(GetFieldSelections([Domain_Name])) = '&chr(39)&'Progress'&chr(39)&', 
					        	Count(distinct {<[Points Possible] = {">0"}, [Metric ID] = {"Z_PROG_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [%SchoolReportMetricKey]),
						        If(Only(GetFieldSelections([Domain_Name])) = '&chr(39)&'Climate'&chr(39)&', 
						        	Count(distinct {<[Points Possible] = {">0"}, [Metric ID] = {"Z_CLIM_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [%SchoolReportMetricKey]),
					   			    If(Only(GetFieldSelections([Domain_Name])) = '&chr(39)&'College & Career'&chr(39)&', 
					        			Count(distinct {<[Points Possible] = {">0"}, [Metric ID] = {"Z_CC_OVERALL"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [%SchoolReportMetricKey])            
									)
						        )
					        )
						),
						IF ('&chr(36)&'(vExpr_SingleMetricSelected), 
							Count(distinct {<[Points Possible] = {">0"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>} [%SchoolReportMetricKey])
						)
					)
				),
				'&chr(39)&'##0'&chr(39)&')';

		/// Color Nodes (2016-2017)
			let vCol_OverallTier_Current = 'IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Max_Year)))] = '&chr(39)&'Intervene'&chr(39)&', '&chr(39)&'rgb(192,80,77)'&chr(39)&',
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Max_Year)))] = '&chr(39)&'Watch'&chr(39)&', '&chr(39)&'rgb(247,150,70)'&chr(39)&',
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Max_Year)))] = '&chr(39)&'Reinforce'&chr(39)&', '&chr(39)&'rgb(0,176,80)'&chr(39)&',
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Max_Year)))] = '&chr(39)&'Model'&chr(39)&', '&chr(39)&'rgb(0,112,192)'&chr(39)&'))))';
			

		/// Color Nodes (2015-2016)
			let vCol_OverallTier_Previous = 'IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Last_Year)))] = '&chr(39)&'Intervene'&chr(39)&', '&chr(39)&'rgb(192,80,77)'&chr(39)&',
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Last_Year)))] = '&chr(39)&'Watch'&chr(39)&', '&chr(39)&'rgb(247,150,70)'&chr(39)&',
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Last_Year)))] = '&chr(39)&'Reinforce'&chr(39)&', '&chr(39)&'rgb(0,176,80)'&chr(39)&',
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Last_Year)))] = '&chr(39)&'Model'&chr(39)&', '&chr(39)&'rgb(0,112,192)'&chr(39)&'))))';

		/// Color Nodes (2014-2015)
			let vCol_OverallTier_Previous2 = 'IF([Tier ('&chr(36)&'(='&chr(36)&'(v_LastLast_Year)))] = '&chr(39)&'Intervene'&chr(39)&', '&chr(39)&'rgb(192,80,77)'&chr(39)&',
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_LastLast_Year)))] = '&chr(39)&'Watch'&chr(39)&', '&chr(39)&'rgb(247,150,70)'&chr(39)&',
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_LastLast_Year)))] = '&chr(39)&'Reinforce'&chr(39)&', '&chr(39)&'rgb(0,176,80)'&chr(39)&',
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_LastLast_Year)))] = '&chr(39)&'Model'&chr(39)&', '&chr(39)&'rgb(0,112,192)'&chr(39)&'))))';


		/// Color Flow (2016-2017)
			let vCol_TierYOY_Previous = chr(36)&'(vCol_OverallTier_Current)';
			let vCol_TierYOY_Previous2 = chr(36)&'(vCol_OverallTier_Previous)';

		/// Sort (2016-2017)
			let vSort_OverallTier_Current = 'IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Max_Year)))] = '&chr(39)&'Intervene'&chr(39)&', 1,
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Max_Year)))] = '&chr(39)&'Watch'&chr(39)&', 2,
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Max_Year)))] = '&chr(39)&'Reinforce'&chr(39)&', 3,
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Max_Year)))] = '&chr(39)&'Model'&chr(39)&', 4))))';

		/// Sort (2015-2016)
			let vSort_OverallTier_Previous = 'IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Last_Year)))] = '&chr(39)&'Intervene'&chr(39)&', 1,
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Last_Year)))] = '&chr(39)&'Watch'&chr(39)&', 2,
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Last_Year)))] = '&chr(39)&'Reinforce'&chr(39)&', 3,
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_Last_Year)))] = '&chr(39)&'Model'&chr(39)&', 4))))';

		/// Sort (2014-2015)
			let vSort_OverallTier_Previous2 = 'IF([Tier ('&chr(36)&'(='&chr(36)&'(v_LastLast_Year)))] = '&chr(39)&'Intervene'&chr(39)&', 1,
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_LastLast_Year)))] = '&chr(39)&'Watch'&chr(39)&', 2,
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_LastLast_Year)))] = '&chr(39)&'Reinforce'&chr(39)&', 3,
				IF([Tier ('&chr(36)&'(='&chr(36)&'(v_LastLast_Year)))] = '&chr(39)&'Model'&chr(39)&', 4))))';

	//// Table

		/// Measure 1 - Percent Earned Previous
			// vMM_Avg_PercScore_OverallToDomainToMetric_Previous

			// background coloring
			let vCol_Avg_PercScore_OverallToDomainToMetric_Previous = 'If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) < 0.25, '&chr(39)&'rgb(192,80,77)'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) < 0.5, '&chr(39)&'rgb(247,150,70)'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) < 0.75, '&chr(39)&'rgb(0,176,80)'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) >= 0.75, '&chr(39)&'rgb(0,112,192)'&chr(39)&'))))';
		
		/// Measure 2 - Percent Earned Current
			//  vMM_Avg_PercScore_OverallToDomainToMetric_Current
			
			// background coloring
			let vCol_Avg_PercScore_OverallToDomainToMetric_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) < 0.25, '&chr(39)&'rgb(192,80,77)'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) < 0.5, '&chr(39)&'rgb(247,150,70)'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) < 0.75, '&chr(39)&'rgb(0,176,80)'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) >= 0.75, '&chr(39)&'rgb(0,112,192)'&chr(39)&'))))';

		/// Measure 3 - Percent Earned Change 
			// vMM_Avg_PercScore_OverallToDomainToMetric_YOY 

			// background coloring
			let vCol_Avg_PercScore_OverallToDomainToMetric_YOY = 'If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_YOY) <= -0.2, '&chr(39)&'#AE1C3E'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_YOY) <= -0.1, '&chr(39)&'#ED875E'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_YOY) < 0, '&chr(39)&'#F2D2AE'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_YOY) < 0.1, '&chr(39)&'#D1EBFB'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_YOY) < 0.2, '&chr(39)&'#5EA4D9'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_YOY) >= 0.2, '&chr(39)&'#3C52A1'&chr(39)&'
				))))))';

///// Points Possible and Points Earned (Scoring Page)

	let vSheet_Points_Possible_and_Points_Earned = chr(39)&'Points Possible and Points Earned for '&chr(39)&' & '&chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&' Report'&chr(39); 

	//// Since this page must default to a specific report type, create a variable to store this
	let v_SelectedOrFirst_ReportType = 'FirstSortedValue(distinct [SPR Report Type], [SPR Report Type])';

	//// KPI 1 - # of points possible
		/// Title			
			let vTitle_Avg_PointsPossible_Report = chr(39)&'Avg Points Possible, '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';
			let vSubTitle_Avg_PointsPossible_Report = chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&' Reports ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);

		/// Measure 1
			// Average Points Possible for the current year for the selected report type. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
			let vMM_Avg_PointsPossible_Report_OverallToDomainToMetric_Current = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible Overall]),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible in Domain]),
				        IF ('&chr(36)&'(vExpr_SingleMetricSelected),
				        	Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric]),
				            Avg(Aggr(Sum({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey]))
				        )
				    )
				)
				, '&chr(39)&'#0.#'&chr(39)&')';

			let vLab_Avg_PointsPossible_Report_OverallToDomainToMetric_Current = chr(36)&'(vTitle_Avg_PointsPossible_Report_OverallToDomainToMetric_Current) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&', '&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);
			
		/// Measure 2

			let vMM_Max_PointsPossible_OverallToDomainToMetric_Current = 'Max({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [School Name]=, [Learning Network]=, [Peer Group]= >} Aggr(Sum({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [School Name]=, [Learning Network]=, [Peer Group]= >}[Points Possible for Metric]), [%SchoolReportYearKey]))';

	//// KPI 2 - # of points earned
		/// Title			
			let vTitle_Avg_PointsEarned_Report = chr(39)&'Avg Points Earned, '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';
			let vSubTitle_Avg_PointsEarned_Report = chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&' Reports ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);

		// Average Points Earned for the current year for the selected report type. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
		let vMM_Avg_PointsEarned_Report_OverallToDomainToMetric_Current = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible),
				Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned Overall]),
			    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
			    	Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned in Domain]),
			        IF ('&chr(36)&'(vExpr_SingleMetricSelected),
			        	Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]),
			            Avg(Aggr(Sum({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]), [%SchoolReportYearKey]))
			        )
			    )
			)
			, '&chr(39)&'#0.#'&chr(39)&')';

		let vLab_Avg_PointsEarned_Report_OverallToDomainToMetric_Current = chr(36)&'(vTitle_Avg_PointsEarned_OverallToDomainToMetric_Current) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&', '&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

	//// KPI 3 - % of points earned

		/// Title			
			let vTitle_Avg_PercScore_Report = chr(39)&'Avg Percent Earned, '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';
			let vSubTitle_Avg_PercScore_Report = chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&' Reports ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);

		// SPR Percent Earned for the current year for the selected report type. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
		let vMM_Avg_PercScore_Report_OverallToDomainToMetric_Current = 'Num(
			IF ('&chr(36)&'(vExpr_AllDomainsPossible),
				Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned Overall]),
			    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
			    	Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned in Domain]),
			        IF ('&chr(36)&'(vExpr_SingleMetricSelected),
			        	Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned for Metric]),
			            Avg(Aggr(Sum({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]) / Sum({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearKey]))
			        )
			    )
			)
			, '&chr(39)&'#0%'&chr(39)&')';

		let vLab_Avg_PercScore_Report_OverallToDomainToMetric_Current = chr(36)&'(vTitle_Avg_PercScore_OverallToDomainToMetric) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&', '&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);


	//// KPI 4 - Current Tier
		/// Title			
			let vTitle_Avg_Tier_Report = chr(39)&'Avg Tier, '&chr(39)&' & '&chr(36)&'(vText_Level_OverallToDomainToMetric)';
			let vSubTitle_Avg_Tier_Report = chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&' Reports ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39);

		// Aperage Tier for the current year (< 0.25 = '&chr(39)&'Intervene'&chr(39)&', < 0.50 = '&chr(39)&'Watch'&chr(39)&', < .75 = '&chr(39)&'Reinforce'&chr(39)&', >= '&chr(39)&'Model'&chr(39)&'). If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made and there are no selections on metric, this is equal to the score for the domain. If a single metric is selected, this is equal to the metric score.
		let vMM_Avg_Tier_Report_OverallToDomainToMetric_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_Report_OverallToDomainToMetric_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
			IF ('&chr(36)&'(vMM_Avg_PercScore_Report_OverallToDomainToMetric_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
			IF ('&chr(36)&'(vMM_Avg_PercScore_Report_OverallToDomainToMetric_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',
			IF ('&chr(36)&'(vMM_Avg_PercScore_Report_OverallToDomainToMetric_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&'))))';

		let vLab_Avg_Tier_Report_OverallToDomainToMetric_Current = chr(36)&'(vTitle_Avg_Tier_OverallToDomainToMetric_Current) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&', '&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);
			
		
	//// TreeMap (Bottom) - Displays size by number of points, color by tier
		/// Title
			let vTitle_Scoring_Report_DomainToMetric = 'If('&chr(36)&'(vExpr_SingleDomainSelected), 
					'&chr(39)&'Distribution of Points across Metrics in '&chr(39)&'  & Only(GetFieldSelections([Domain_Name])), 
					'&chr(39)&'Distribution of Points across Domains'&chr(39)&'
				) & '&chr(39)&' for '&chr(39)&' & '&chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&' Report Type'&chr(39);

		/// Subtitle:
			let vSubTitle_Scoring_Report_DomainToMetric = chr(39)&'Size indicates # of possible points in each '&chr(39)&' & 
				If('&chr(36)&'(vExpr_SingleDomainSelected), 
					'&chr(39)&'Metric in '&chr(39)&' & Only(GetFieldSelections([Domain_Name])), 
					'&chr(39)&'Domain'&chr(39)&'
				) & '&chr(39)&'. Color indicates '&chr(39)&' & 
				IF(GetSelectedCount([School Name])=1, '&chr(39)&' Tiers achieved by '&chr(39)&' & Only(GetFieldSelections([School Name])),
					IF(GetSelectedCount([School Name])>1, '&chr(39)&' average Tiers achieved by Selected Schools'&chr(39)&',
						IF(GetSelectedCount([Learning Network])=1, '&chr(39)&' average Tier achieved in '&chr(39)&' & Only(GetFieldSelections([Learning Network])),
						IF(GetSelectedCount([Learning Network])>1, '&chr(39)&' average Tier achieved in Selected Learning Networks'&chr(39)&',
						'&chr(39)&'average Tier achieved across all schools'&chr(39)&'))))';	

		/// Measure (for size)
			// Displays the maximum number of points per domain. If a single domain is selected will show the maximum # of points per metric.
			let vMM_MaxScore_Report_DomainToMetric_Current = 'Num(
					If(GetPossibleCount([Domain_Name]) = 1, 
						Max({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, IsSum={0}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Metric_Name]=, [Metric ID]=>}[Points Possible]),  
						Max({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))},[Domain_Name]=, [Metric_Name]=, [Metric ID]=>}[Points Possible in Domain])
					)
				, '&chr(39)&'#,##0.#'&chr(39)&')';

			let vLab_MaxScore_Report_DomainToMetric_Current = chr(36)&'(vTitle_MaxScore_DomainToMetric) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&', '&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);
		

		/// Color
			// The percent of possible points earned for all available metrics in the most current year. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_Report_DomainToMetric_Current = 'Num(
					If(GetPossibleCount([Domain_Name]) = 1, 
						Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, IsSum={0}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Percent Earned]),  
						Avg({<[SPR Report Type] = {"'&chr(36)&'(='&chr(36)&'(v_SelectedOrFirst_ReportType))"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))},[Metric_Name]=, [Metric ID]=>}[Percent Earned in Domain])
					)
					+ 0.0001, '&chr(39)&'#0%'&chr(39)&')';


			let vLab_Avg_PercScore_Report_DomainToMetric_Current = chr(36)&'(vTitle_Avg_PercScore_DomainToMetric) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_SelectedOrFirst_ReportType) & '&chr(39)&', '&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);


			let vCol_Avg_PercScore_Report_DomainToMetric_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Report_DomainToMetric_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Report_DomainToMetric_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Report_DomainToMetric_Current) < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Report_DomainToMetric_Current) >= 0.75, rgb(0,112,192)))))';

///// Compare Domains Scatterplot (does not drill)
	//// Scatterplot
		/// Measure 1
			// The percent of possible points earned Overall in the most current year. Ignores metric and domain selections.
			let vMM_Avg_PercScore_Domain_Current = 'Num(
				Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]=, [Metric_Name] =, [Metric ID]=, [Domain ID]= >}[Percent Earned Overall])
				, '&chr(39)&'#0.#%'&chr(39)&')';
			
			let vLab_Avg_PercScore_Domain_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned Overall ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

		/// Color: vMM_Avg_PercScore_AchievementToMetric_Current 
			let vCol_Avg_PercScore_Domain_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Domain_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Domain_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Domain_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Domain_Current) >= 0.75, rgb(0,112,192)))))';

		/// Measure 2
			// The percent of possible points earned for all available "Achievement" metrics in the most current year. Ignores metric and domain selections.
			let vMM_Avg_PercScore_Achievement_Current = 'Num(
				Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={"Achievement"}, [Metric_Name] =, [Metric ID]=, [Domain ID]= >}[Percent Earned in Domain])
				, '&chr(39)&'#0.#%'&chr(39)&')';
			
			let vLab_Avg_PercScore_Achievement_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in Achievement Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

		/// Measure 3
			// The percent of possible points earned for all available "Progress" metrics in the most current year. Ignores metric and domain selections.
			let vMM_Avg_PercScore_Progress_Current = 'Num(
				Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={"Progress"}, [Metric_Name] =, [Metric ID]=, [Domain ID]= >}[Percent Earned in Domain])
				, '&chr(39)&'#0.#%'&chr(39)&')';
			
			let vLab_Avg_PercScore_Progress_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in Progress Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

		/// Measure 4
			// The percent of possible points earned for all available "Climate" metrics in the most current year. Ignores metric and domain selections.
			let vMM_Avg_PercScore_Climate_Current = 'Num(
				Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={"Climate"}, [Metric_Name] =, [Metric ID]=, [Domain ID]= >}[Percent Earned in Domain])
				, '&chr(39)&'#0.#%'&chr(39)&')';
			
			let vLab_Avg_PercScore_Climate_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in Climate Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

		/// Measure 5
			// The percent of possible points earned for all available "College & Career" metrics in the most current year. Ignores metric and domain selections.
			let vMM_Avg_PercScore_CollegeCareer_Current = 'Num(
				Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={"College & Career"}, [Metric_Name] =, [Metric ID]=, [Domain ID]= >}[Percent Earned in Domain])
				, '&chr(39)&'#0.#%'&chr(39)&')';
			
			let vLab_Avg_PercScore_CollegeCareer_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in College & Career Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

///// Map Sheet - User can select which metric to view based upon button selected
	let vSelectedMeasure = 'PercScore_Current';

	//// Button - Current Percent Earned
		let vButLab_Metric_Score_Current = 'IF(vSelectedMeasure = '&chr(39)&'PercScore_Current'&chr(39)&',
				chr(9658) & '&chr(39)&' Current Percent Earned '&chr(39)&' & chr(9668),
		    	'&chr(39)&'Current Percent Earned'&chr(39)&'
		    )';

	//// Button - Previous Percent Earned
		let vButLab_Metric_Score_Previous = 'IF(vSelectedMeasure = '&chr(39)&'PercScore_Previous'&chr(39)&',
				chr(9658) & '&chr(39)&' Previous Percent Earned '&chr(39)&' & chr(9668),
		    	'&chr(39)&'Previous Percent Earned'&chr(39)&'
		    )';

	//// Button - Current Percent Earned
		let vButLab_Metric_Score_YOY = 'IF(vSelectedMeasure = '&chr(39)&'PercScore_YOY'&chr(39)&',
				chr(9658) & '&chr(39)&' YOY Percent Earned '&chr(39)&' & chr(9668),
		    	'&chr(39)&'YOY Percent Earned'&chr(39)&'
		    )';

	//// Button - Current Percent Earned
		let vButLab_Metric_Score_3Year_Current = 'IF(vSelectedMeasure = '&chr(39)&'PercScore_3Year_Current'&chr(39)&',
				chr(9658) & '&chr(39)&' 3 Year Average Percent Earned '&chr(39)&' & chr(9668),
		    	'&chr(39)&'3 Year Average Percent Earned'&chr(39)&'
		    )';

	//// Map (Center-Left)
		/// Measure (for size)
			let vMM_Measure_Selected = 'Num(
				IF(vSelectedMeasure = '&chr(39)&'PercScore_Current'&chr(39)&', '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) * 100 + 0.1,
				IF(vSelectedMeasure = '&chr(39)&'PercScore_Previous'&chr(39)&', '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) * 100 + 0.1,
				IF(vSelectedMeasure = '&chr(39)&'PercScore_YOY'&chr(39)&', '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_YOY) * 100 + 0.1,
				IF(vSelectedMeasure = '&chr(39)&'PercScore_3Year_Current'&chr(39)&', '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) * 100 + 0.1
				)))), '&chr(39)&'#0'&chr(39)&')';
				
			// this isn'&chr(39)&'t actually working as a real master measure, perhaps map will allow in an update.
			let vLab_Measure_Selected = 'IF(vSelectedMeasure = '&chr(39)&'PercScore_Current'&chr(39)&', '&chr(36)&'(vLab_Avg_PercScore_OverallToDomainToMetric_Current),
				IF(vSelectedMeasure = '&chr(39)&'PercScore_Previous'&chr(39)&', '&chr(36)&'(vLab_Avg_PercScore_OverallToDomainToMetric_Previous),
				IF(vSelectedMeasure = '&chr(39)&'PercScore_YOY'&chr(39)&', '&chr(36)&'(vLab_Avg_PercScore_OverallToDomainToMetric_YOY),
				IF(vSelectedMeasure = '&chr(39)&'PercScore_3Year_Current'&chr(39)&', '&chr(36)&'(vLab_Avg_PercScore_OverallToDomainToMetric_3Year_Current)
					))))';	

		/// Colors
			let vCol_Measure_Selected = 'IF(vSelectedMeasure = '&chr(39)&'PercScore_Current'&chr(39)&', 
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) < 0.25, rgb(192,80,77),
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) < 0.5, rgb(247,150,70),
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) < 0.75, rgb(0,176,80),
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) >= 0.75, rgb(0,112,192))))),
				IF(vSelectedMeasure = '&chr(39)&'PercScore_3Year_Current'&chr(39)&', 
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) < 0.25, rgb(192,80,77),
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) < 0.5, rgb(247,150,70),
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current)  < 0.75, rgb(0,176,80),
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) >= 0.75, rgb(0,112,192))))),
				IF(vSelectedMeasure = '&chr(39)&'PercScore_Previous'&chr(39)&', 
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) < 0.25, rgb(192,80,77),
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) < 0.5, rgb(247,150,70),
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous)  < 0.75, rgb(0,176,80),
					IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) >= 0.75, rgb(0,112,192))))),
				IF(vSelectedMeasure = '&chr(39)&'PercScore_YOY'&chr(39)&', 
				    '&chr(36)&'(vCol_Avg_PercScore_OverallToDomainToMetric_YOY)
				))))';

	//// Treemap Legend (bottom)
		let vDim_Measure_Selected_Category = 'If(vSelectedMeasure = '&chr(39)&'PercScore_Current'&chr(39)&',
		  		Aggr(
		  			Pick(1 + Floor('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) * 100 / 25), '&chr(39)&'Intervene'&chr(39)&', '&chr(39)&'Watch'&chr(39)&', '&chr(39)&'Reinforce'&chr(39)&', '&chr(39)&'Model'&chr(39)&')
		    		, [School Name (Reporting Category)]
		  		),
			If(vSelectedMeasure = '&chr(39)&'PercScore_3Year_Current'&chr(39)&',
		  		Aggr(
		  			Pick(1 + Floor('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) * 100 / 25), '&chr(39)&'Intervene'&chr(39)&', '&chr(39)&'Watch'&chr(39)&', '&chr(39)&'Reinforce'&chr(39)&', '&chr(39)&'Model'&chr(39)&')
		    		, [School Name (Reporting Category)]
		  		),
		  	IF(vSelectedMeasure = '&chr(39)&'PercScore_YOY'&chr(39)&',
		  		Aggr(
		  			If('&chr(36)&'(vMM_Count_Reports_Current) > 0 and '&chr(36)&'(vMM_Count_Reports_Previous) > 0,
			      		Pick(4 + RangeMax(-3, RangeMin(2, 
				      		IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) >= 0,
				      			Floor(Round(('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous)) * 100) / 10),
				            	-1 * (Floor(Round(('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current)) * 100) / 10) + 1)
				      		))),
							'&chr(39)&'Decrease more than 20%'&chr(39)&','&chr(39)&'Decrease between 10% and 20%'&chr(39)&','&chr(39)&'Decrease less than 10%'&chr(39)&', '&chr(39)&'Increase less than 10%'&chr(39)&', '&chr(39)&'Increase between 10% and 20%'&chr(39)&', '&chr(39)&'Increase more than 20%'&chr(39)&'
			      		)
		      		), [School Name (Reporting Category)]
		      	)
		    )))';

		let vMM_Measure_Selected_Category = 'If(vSelectedMeasure = '&chr(39)&'PercScore_Current'&chr(39)&',
				100 - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current),
			If(vSelectedMeasure = '&chr(39)&'PercScore_3Year_Current'&chr(39)&',
				100 - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current),
			IF(vSelectedMeasure = '&chr(39)&'PercScore_YOY'&chr(39)&',
			  	100 - RangeMax(-3, RangeMin(2, 
			      	IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) >= 0,
			      		Floor(Round(('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous)) * 100) / 10),
			            -1 * (Floor(Round(('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current)) * 100) / 10) + 1)
			      	)
			    ))
			)))';


		let vCol_Measure_Selected_Category = 'If(vSelectedMeasure = '&chr(39)&'PercScore_Current'&chr(39)&',
				Pick(1 + Floor('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) * 100 / 25), '&chr(39)&'rgb(192,80,77)'&chr(39)&', '&chr(39)&'rgb(247,150,70)'&chr(39)&', '&chr(39)&'rgb(0,176,80)'&chr(39)&', '&chr(39)&'rgb(0,112,192)'&chr(39)&'),
			If(vSelectedMeasure = '&chr(39)&'PercScore_3Year_Current'&chr(39)&',
			  	Pick(1 + Floor('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) * 100 / 25), '&chr(39)&'rgb(192,80,77)'&chr(39)&', '&chr(39)&'rgb(247,150,70)'&chr(39)&', '&chr(39)&'rgb(0,176,80)'&chr(39)&', '&chr(39)&'rgb(0,112,192)'&chr(39)&'),  
			IF(vSelectedMeasure = '&chr(39)&'PercScore_YOY'&chr(39)&',  	
			  	Aggr(
			      Pick(4 + 
			      	RangeMax(-3, RangeMin(2, 
			      	IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) >= 0,
			      		Floor(Round(('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous)) * 100) / 10),
			            -1 * (Floor(Round(('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Previous) - '&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_Current)) * 100) / 10) + 1)
			      	))),		      
			        '&chr(39)&'#AE1C3E'&chr(39)&','&chr(39)&'#ED875E'&chr(39)&','&chr(39)&'#F2D2AE'&chr(39)&', '&chr(39)&'#D1EBFB'&chr(39)&', '&chr(39)&'#5EA4D9'&chr(39)&', '&chr(39)&'#3C52A1'&chr(39)&'
			    ), [School Name (Reporting Category)])
			 )))';
		

///// Table Page

	//// Table
		/// Measure 1: City rank
			// Description:
			// City Rank for a selected school in the current year. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made this is equal to the score for the domain.
			let vMM_CityRank_OverallToDomain_Current = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[City Rank Overall]),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[City Rank in Domain])
				    )
				)
				, '&chr(39)&'#0'&chr(39)&')';

			let vLab_CityRank_OverallToDomain_Current = 'IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					'&chr(39)&'Overall City Rank ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39)&',
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	'&chr(39)&'City Rank in '&chr(39)&' & GetFieldSelections([Domain_Name]) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39)&'
				    )
				)';

			let vMM_CityRankPerc_OverallToDomain_Current = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[City Rank Overall]) / Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Total Schools Eligible Overall]),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[City Rank in Domain]) / Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Total Schools Eligible in Domain]) 
				    )
				)
				, '&chr(39)&'#0%'&chr(39)&')';

			let vCol_CityRankPerc_OverallToDomain_Current = 'IF('&chr(36)&'(vMM_CityRankPerc_OverallToDomain_Current) > 0.8, '&chr(39)&'#AE1C3E'&chr(39)&',  
				IF('&chr(36)&'(vMM_CityRankPerc_OverallToDomain_Current) > 0.6,'&chr(39)&'#ED875E'&chr(39)&',
				IF('&chr(36)&'(vMM_CityRankPerc_OverallToDomain_Current) > 0.4, '&chr(39)&'#F2D2AE'&chr(39)&',
				IF('&chr(36)&'(vMM_CityRankPerc_OverallToDomain_Current) > 0.2, '&chr(39)&'#5EA4D9'&chr(39)&',
				IF('&chr(36)&'(vMM_CityRankPerc_OverallToDomain_Current) <= 0.2, '&chr(39)&'#3C52A1'&chr(39)&')))))';

		/// Measure 2: Peer rank
			// Description:
			// Peer Rank for a selected school in the current year. If multiple metrics are selected, this is equal to overall score. If a selection on Domain is made this is equal to the score for the domain.
			let vMM_PeerRank_OverallToDomain_Current = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Peer Rank Overall]),
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Peer Rank in Domain])
				    )
				)
				, '&chr(39)&'#0'&chr(39)&')';

			let vLab_PeerRank_OverallToDomain_Current = 'IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					'&chr(39)&'Overall Peer Rank ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39)&',
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	'&chr(39)&'Peer Rank in '&chr(39)&' & GetFieldSelections([Domain_Name]) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Max_Year) & '&chr(39)&')'&chr(39)&'
				    )
				)';

			let vMM_PeerRankPerc_OverallToDomain_Current = 'Num(
				IF ('&chr(36)&'(vExpr_AllDomainsPossible),
					Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Peer Rank Overall]) / Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Schools Eligible in Peer Group Overall]) ,
				    IF ('&chr(36)&'(vExpr_SingleDomainSelected_AllMetricsPossible),
				    	Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Peer Rank in Domain]) / Only({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Schools Eligible in Peer Group in Domain]) 
				    )
				)
				, '&chr(39)&'#0%'&chr(39)&')';

			let vCol_PeerRankPerc_OverallToDomain_Current = 'IF('&chr(36)&'(vMM_PeerRankPerc_OverallToDomain_Current) > 0.8, '&chr(39)&'#AE1C3E'&chr(39)&',  
				IF('&chr(36)&'(vMM_PeerRankPerc_OverallToDomain_Current) > 0.6,'&chr(39)&'#ED875E'&chr(39)&',
				IF('&chr(36)&'(vMM_PeerRankPerc_OverallToDomain_Current) > 0.4, '&chr(39)&'#F2D2AE'&chr(39)&',
				IF('&chr(36)&'(vMM_PeerRankPerc_OverallToDomain_Current) > 0.2, '&chr(39)&'#5EA4D9'&chr(39)&',
				IF('&chr(36)&'(vMM_PeerRankPerc_OverallToDomain_Current) <= 0.2, '&chr(39)&'#3C52A1'&chr(39)&')))))';


		/// Colors for previously defined measures
			let vCol_Avg_PercScore_OverallToDomainToMetric_3Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) < 0.25, '&chr(39)&'rgb(192,80,77)'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) < 0.5, '&chr(39)&'rgb(247,150,70)'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) < 0.75, '&chr(39)&'rgb(0,176,80)'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_Current) >= 0.75, '&chr(39)&'rgb(0,112,192)'&chr(39)&'))))';

			let vCol_Avg_PercScore_OverallToDomainToMetric_3Year_YOY = 'IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_YOY) <= -0.2, '&chr(39)&'#AE1C3E'&chr(39)&',
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_YOY) <= -0.1,'&chr(39)&'#ED875E'&chr(39)&',
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_YOY) < 0, '&chr(39)&'#F2D2AE'&chr(39)&',
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_YOY) < 0.1, '&chr(39)&'#D1EBFB'&chr(39)&',
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_YOY) < 0.2, '&chr(39)&'#5EA4D9'&chr(39)&',
				IF('&chr(36)&'(vMM_Avg_PercScore_OverallToDomainToMetric_3Year_YOY) >= 0.2, '&chr(39)&'#3C52A1'&chr(39)&'))))))';

///// SPP Page
	
	//// Scatter Chart (center)

		let vText_Avg_SPPScore_Selected = chr(39)&'SPP'&chr(39)&' & If(GetSelectedCount([SPP_Metric]) = 0, '&chr(39)&' Overall'&chr(39)&', '&chr(39)&', '&chr(39)&' & FirstSortedValue(distinct [SPP_Metric], [SPP_Metric]))';

		/// Title
			let vTitle_Avg_PercScore_v_SPP = chr(36)&'(vText_Avg_SPPScore_Selected) & '&chr(39)&' (vertical) vs. SPR Percent Earned (horizontal)'&chr(39);

		/// SubTitle

		/// Measure 1
			let v_Format_SPP_Selected = 'If(GetSelectedCount([SPP_Metric]) = 0, '&chr(39)&'#0%'&chr(39)&', If (FirstSortedValue(distinct [SPP Metric Is Percent], [SPP_Metric]) = 1, '&chr(39)&'#0%'&chr(39)&', '&chr(39)&'##0'&chr(39)&'))';

			// The Penssylvania School Performance Profile (SPP) "Final Academic Score" for the current year. Please visit http://www.paschoolperformance.org for more information.
			let vMM_Avg_SPPScore_Selected_Current = 'Num(
				If(GetSelectedCount([SPP_Metric]) = 0,
					Avg({<[SPP_Metric] = {"Final Academic Score"}, [SPP Year] = {"'&chr(36)&'(='&chr(36)&'(v_Max_Year))"}>}[SPP Score]) / 100,
					If (FirstSortedValue(distinct [SPP Metric Is Percent], [SPP_Metric]) = 1,
						Avg({<[SPP_Metric] = {"'&chr(36)&'(=FirstSortedValue(distinct [SPP_Metric], [SPP_Metric]))"}, [SPP Year] = {"'&chr(36)&'(='&chr(36)&'(v_Max_Year))"}>}[SPP Score]) / 100
						,
						Avg({<[SPP_Metric] = {"'&chr(36)&'(=FirstSortedValue(distinct [SPP_Metric], [SPP_Metric]))"}, [SPP Year] = {"'&chr(36)&'(='&chr(36)&'(v_Max_Year))"}>}[SPP Score]) 
					)
				) + 0.0001, '&chr(39)&''&chr(36)&'(='&chr(36)&'(v_Format_SPP_Selected))'&chr(39)&'
			)';

			let vLab_Avg_SPPScore_Selected_Current = chr(36)&'(vText_Avg_SPPScore_Selected) & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

			// add 5% to max that is not a %
			let vYMax_Avg_SPPScore_Selected_Current = 'If (FirstSortedValue(distinct [SPP Metric Is Percent], [SPP_Metric]) = 1, 
				1, 
				Max({<[SPP_Metric] = {"'&chr(36)&'(=FirstSortedValue(distinct [SPP_Metric], [SPP_Metric]))"}, [SPP Year] = {"'&chr(36)&'(='&chr(36)&'(v_Max_Year))"}>}[SPP Score]) + 0.05 * Max({<[SPP_Metric] = {"'&chr(36)&'(=FirstSortedValue(distinct [SPP_Metric], [SPP_Metric]))"}, [SPP Year] = {"'&chr(36)&'(='&chr(36)&'(v_Max_Year))"}>}[SPP Score]))';

		/// We may not use the following, but we'&chr(39)&'ll keep it in the system
			// The Penssylvania School Performance Profile (SPP) "Final Academic Score" for the current year. Please visit http://www.paschoolperformance.org for more information.
			//let vMM_Avg_SPPScore_FinalAcademicScore_Current = 'Num(
			//	Avg({<[SPP_Metric] = {"Final Academic Score"}, [SPP Year] = {"'&chr(36)&'(='&chr(36)&'(v_Max_Year))"}>}[SPP Score]) / 100
			//	+ 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			//let vLab_Avg_SPPScore_FinalAcademicScore_Current = chr(39)&'Overall SPP Score'&chr(39)&' & '&chr(39)&' ('&chr(39)&' & '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

///// Domain Sheet - Variable select
	
	let v_Domain = chr(39)&'Achievement'&chr(39);

	let vText_DomainOrMetric = 'If(GetSelectedCount([Metric_Name]) = 1 and WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*'&chr(39)&'& '&chr(36)&'(v_Domain)&'&chr(39)&'*'&chr(39)&'),
			GetFieldSelections([Metric_Name]),
			'&chr(36)&'(v_Domain)
		)';

	let vCalc_DomainOrMetric = 'If('&chr(36)&'(vExpr_NoMetricSelected) or '&chr(36)&'(vExpr_SingleMetricSelected) and WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*'&chr(39)&'& '&chr(36)&'(v_Domain)&'&chr(39)&'*'&chr(39)&'), 1, 0)';

	let vCalcDisplay_DomainOrMetric = 'If('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'You have multiple metrics selected. Please select only one.'&chr(39)&',
			If('&chr(36)&'(vExpr_SingleMetricSelected) and Not(WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*'&chr(39)&'& '&chr(36)&'(v_Domain)&'&chr(39)&'*'&chr(39)&')), 
				'&chr(39)&'The metric you have selected is within the '&chr(39)&' & Concat(distinct [Domain_Name], '&chr(39)&', '&chr(39)&') &'&chr(39)&' domain. Please select a '&chr(39)&' & '&chr(36)&'(v_Domain) & '&chr(39)&' metric.'&chr(39)&'))';


	//// Line Graph (top-left) - shows last 3 years of performance in the Selected domain, drill to metrics
		/// Title
			let vTitle_Avg_PercScore_Domain_3Year_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&' Percent Earned for Previous 3 Years'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_Domain_3Year_Current = chr(39)&''&chr(39);

		/// Measure 1
			// The average percent of possible points earned for all available selected domain metrics in the previous 3 years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_Domain_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {'&chr(36)&'(v_Domain)}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Percent Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {'&chr(36)&'(v_Domain)}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]) / Sum({<[Domain_Name] = {'&chr(36)&'(v_Domain)}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), [%SchoolReportYearKey]))
				) + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_Domain_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
		/// Color
			let vCol_Avg_PercScore_Domain_3Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current) >= 0.75, rgb(0,112,192)))))';

		// min max
			let vMin_Avg_PercScore_Domain_3Year_Current = 'RangeMax(0, Floor(Min(Aggr('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current), Year)) * 10) / 10)'; 
			let vMax_Avg_PercScore_Domain_3Year_Current = 'RangeMin(1, Ceil(Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current), Year)) * 10) / 10)';


	//// Combo Chart (middle-left): Average by metric in selected domain
		/// Title
			let vTitle_Avg_PercScore_SelectedDomainMetrics = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned or Raw Score for All Metrics in '&chr(39)&' & '&chr(36)&'(v_Domain)';
			let vSubTitle_Avg_PercScore_SelectedDomainMetrics = chr(39)&'Select Percent Earned or Raw Score from Y-Axis drop-down.'&chr(39);

		/// SubTitle

		/// Measure 1
			// The percent of possible points earned for all available metrics in the most current year. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_SelectedDomainMetrics_Current = 'Num(
					Avg(Aggr(Sum({<[Domain_Name] = {'&chr(36)&'(v_Domain)}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned for Metric]) / Sum({<[Domain_Name] = {'&chr(36)&'(v_Domain)}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible for Metric]), [%SchoolReportYearMetricKey]))
					+ 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_SelectedDomainMetrics_Current = chr(36)&'(vText_AvgOrSingle) & '&chr(39)&'Percent Earned for Metrics in '&chr(39)&' & Only(GetFieldSelections([Domain_Name])) & '&chr(39)&' ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

		/// (Alt) Measure 2
			// The raw score earned for all available metrics in the previous year. Without selections this defaults to the domain level.  If a single domain is selected this will display individual metrics
			let vMM_Avg_Score_SelectedDomainMetrics_Current = 'IF ('&chr(36)&'(v_Domain) = '&chr(39)&'Progress'&chr(39)&',
					Num(
						Avg(Aggr(Avg({<[Domain_Name] = {'&chr(36)&'(v_Domain)}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Score for Metric]), [%SchoolReportYearMetricKey]))
				        + 0.0001, '&chr(39)&'#0.#'&chr(39)&')
					, 
					Num(
						Avg(Aggr(Avg({<[Domain_Name] = {'&chr(36)&'(v_Domain)}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Score for Metric]), [%SchoolReportYearMetricKey]))
				        + 0.0001, '&chr(39)&'#0%'&chr(39)&')
				)';

			let vLab_Avg_Score_SelectedDomainMetrics_Current = chr(36)&'(vText_AvgOrSingle) & '&chr(39)&'Raw Score for Metrics in '&chr(39)&' & Only(GetFieldSelections([Domain_Name])) & '&chr(39)&' ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39);

		/// Color
			let vCol_Avg_PercScore_SelectedDomainMetrics_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_SelectedDomainMetrics_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_SelectedDomainMetrics_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_SelectedDomainMetrics_Current) < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_SelectedDomainMetrics_Current) >= 0.75, rgb(0,112,192)))))';

	//// Table (bottom-left)
		/// Measure 1: Selected - # of reports
			// The number of selected domain reports in the most recent three years.
			let vMM_Count_Reports_Domain_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Points Possible in Domain] = {">0"}, [Domain_Name] = {'&chr(36)&'(v_Domain)}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Points Possible] = {">0"}, [Domain_Name] = {'&chr(36)&'(v_Domain)}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_Domain_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&': # of School Reports'&chr(39);
			
		/// Measure 2: Selected - Average Points Possible
			// The average number of total possible points for all available selected domain metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsPossible_Domain_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {'&chr(36)&'(v_Domain)}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {'&chr(36)&'(v_Domain)}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsPossible_Domain_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Possible'&chr(39);

		/// Measure 3: Selected - Average Points Earned
			// The average number of points earned for all available selected domain metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsEarned_Domain_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {'&chr(36)&'(v_Domain)}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {'&chr(36)&'(v_Domain)}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsEarned_Domain_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Earned'&chr(39);

		/// Measure 3: Selected - Average Percent Earned %
			// vMM_Avg_PercScore_Domain_3Year_Current 
			

		/// Measure 4: Selected - Average Tier
			// The average tier for the selected domain achievement domain for the previous 3 years (< 0.25 = '&chr(39)&'Intervene'&chr(39)&', < 0.50 = '&chr(39)&'Watch'&chr(39)&', < .75 = '&chr(39)&'Reinforce'&chr(39)&', >= '&chr(39)&'Model'&chr(39)&'). Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_Tier_Domain_3Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',	
				If('&chr(36)&'(vMM_Avg_PercScore_Domain_3Year_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&')))	
				)';
			let vLab_Avg_Tier_Domain_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier'&chr(39);


		/// Measure 5: Selected - # of reports in "model" or "reinforce"
			// The number of reports at the "Model" and "Reinforce" tier withing the selected domain domain.
			let vMM_Count_Reports_ModelReinforce_Domain_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {'&chr(36)&'(v_Domain)}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {'&chr(36)&'(v_Domain)}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_ModelReinforce_Domain_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&': # of "Model" and "Reinforce" School Reports'&chr(39);
		
		
		/// Color
			let vCol_YearEnd = 'If(YearEnd = 2018, '&chr(39)&'#398635'&chr(39)&', If(YearEnd = 2017, '&chr(39)&'#737373'&chr(39)&', If(YearEnd = 2016, '&chr(39)&'#BDBDBD'&chr(39)&', '&chr(39)&'#F0F0F0'&chr(39)&')))';


	//// Bar Chart (right)
		/// Title
			let vTitle_Avg_PercScore_Domain_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&' Percent Earned'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_Domain_Current = chr(39)&''&chr(39);	

		/// Measure 1
			// The percent of possible points earned for all available selected domain metrics in the most current year. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_Domain_Current = 'Num(
				IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	Avg(Aggr(Sum({<IsSum={0}, [Domain_Name]={'&chr(36)&'(v_Domain)}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Metric_Name]={"'&chr(36)&'(=Concat(distinct [Metric_Name], '&chr(39)&', '&chr(39)&'))"}>}[Points Earned]) / Sum({<IsSum={0}, [Domain_Name]={'&chr(36)&'(v_Domain)}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Metric_Name]={"'&chr(36)&'(=Concat(distinct [Metric_Name], '&chr(39)&', '&chr(39)&'))"}>}[Points Possible]), [%SchoolReportYearKey]))
		              ,
		            Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={'&chr(36)&'(v_Domain)}>}[Percent Earned in Domain])
		        ) + 0.0001					
				, '&chr(39)&'#0%'&chr(39)&')';
			
			let vLab_Avg_PercScore_Domain_Current = 'IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	'&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in '&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&' ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		              ,
		            '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in '&chr(39)&' & '&chr(36)&'(vText_DomainOrMetric) & '&chr(39)&' ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		        )';

		/// Color: vMM_Avg_PercScore_Domain_Current 
			let vCol_Avg_PercScore_Domain_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Domain_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Domain_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Domain_Current) < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Domain_Current) >= 0.75, rgb(0,112,192)))))';


		/// Reference lines, school-wide average
			let vMM_Avg_PercScore_Domain_Current_AllSchools = 'Num(
				IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	Avg(Aggr(Sum({1<[Domain_Name]={'&chr(36)&'(v_Domain)}, [Metric_Name] = P([Metric_Name]), YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned]) / Sum({1<[Domain_Name]={'&chr(36)&'(v_Domain)}, [Metric_Name] = P([Metric_Name]), YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, '&chr(36)&'(vExclude_SchoolNetworkSelections)>}[Points Possible]), [%SchoolReportYearKey]))
		              ,
		            Avg({1<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={'&chr(36)&'(v_Domain)}>}[Percent Earned in Domain])
		        ) + 0.0001					
				, '&chr(39)&'#0%'&chr(39)&')';


			let vMM_Avg_PercScore_Domain_Current_Network = 'Num(
				IF(GetPossibleCount([Learning Network]) = 1 ,
					IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
			        	Avg(Aggr(Sum({1<[Domain_Name]={'&chr(36)&'(v_Domain)}, [Metric_Name] = P([Metric_Name]), YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Learning Network] = {"'&chr(36)&'(=Concat(distinct [Learning Network]))"}>}[Points Earned]) / Sum({1<[Domain_Name]={'&chr(36)&'(v_Domain)}, [Metric_Name] = P([Metric_Name]), YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Learning Network] = {"'&chr(36)&'(=Concat(distinct [Learning Network]))"}>}[Points Possible]), [%SchoolReportYearKey]))
			              ,
			            Avg({1<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={'&chr(36)&'(v_Domain)}, [Metric_Name] = P([Metric_Name]), [Learning Network] = {"'&chr(36)&'(=Concat(distinct [Learning Network]))"}>}[Percent Earned in Domain])
			        ) + 0.0001)					
				, '&chr(39)&'#0%'&chr(39)&')';
///// Achievement Domain Sheet
	let vText_AchievementOrMetric = 'If(GetSelectedCount([Metric_Name]) = 1,
			GetFieldSelections([Metric_Name]),
			'&chr(39)&'Achievement'&chr(39)&'
		)';

	let vCalc_AchievementOrMetric = 'If('&chr(36)&'(vExpr_NoMetricSelected) or '&chr(36)&'(vExpr_SingleMetricSelected) and WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*Achievement*'&chr(39)&'), 1, 0)';

	let vCalcDisplay_AchievementOrMetric = 'If('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'You have multiple metrics selected. Please select only one.'&chr(39)&',
			If('&chr(36)&'(vExpr_SingleMetricSelected) and Not(WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*Achievement*'&chr(39)&')), 
				'&chr(39)&'The metric you have selected is within the '&chr(39)&' & Concat(distinct [Domain_Name], '&chr(39)&', '&chr(39)&') &'&chr(39)&' domain. Please select an Achievement metric.'&chr(39)&'))';


	//// Line Graph (top-left) - shows last 3 years of performance in the Achievement domain, drill to metrics
		/// Title
			let vTitle_Avg_PercScore_Achievement_3Year_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&' Percent Earned for Previous 3 Years'&chr(39);
			let vTitle_Avg_PercScore_Achievement_4Year_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&' Percent Earned for Previous 4 Years'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_Achievement_4Year_Current = chr(39)&''&chr(39);

		/// Measure 1
			// The average percent of possible points earned for all available "Achievement" metrics in the previous 3 years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_Achievement_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Percent Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]) / Sum({<[Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), [%SchoolReportYearKey]))
				) + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_Achievement_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
			let vMM_Avg_PercScore_Achievement_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Percent Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned]) / Sum({<[Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), [%SchoolReportYearKey]))
				) + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_Achievement_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
		/// Color
			let vCol_Avg_PercScore_Achievement_3Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current) >= 0.75, rgb(0,112,192)))))';

			let vCol_Avg_PercScore_Achievement_4Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current) >= 0.75, rgb(0,112,192)))))';

		// min max
			let vMin_Avg_PercScore_Achievement_3Year_Current = 'RangeMax(0, Floor(Min(Aggr('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current), Year)) * 10) / 10)'; 
			let vMax_Avg_PercScore_Achievement_3Year_Current = 'RangeMin(1, Ceil(Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current), Year)) * 10) / 10)';

			let vMin_Avg_PercScore_Achievement_4Year_Current = 'RangeMax(0, Floor(Min(Aggr('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current), Year)) * 10) / 10)'; 
			let vMax_Avg_PercScore_Achievement_4Year_Current = 'RangeMin(1, Ceil(Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current), Year)) * 10) / 10)';

	//// Table (bottom-left)
		/// Measure 1: Achievement - # of reports
			// The number of "Achievement" reports in the most recent three years.
			let vMM_Count_Reports_Achievement_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Points Possible in Domain] = {">0"}, [Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Points Possible] = {">0"}, [Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_Achievement_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': # of School Reports'&chr(39);
		
			let vMM_Count_Reports_Achievement_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Points Possible in Domain] = {">0"}, [Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Points Possible] = {">0"}, [Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_Achievement_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': # of School Reports'&chr(39);
			
		/// Measure 2: Achievement - Average Points Possible
			// The average number of total possible points for all available "Achievement" metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsPossible_Achievement_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsPossible_Achievement_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Possible'&chr(39);

			let vMM_Avg_PointsPossible_Achievement_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Possible in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Possible]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsPossible_Achievement_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Possible'&chr(39);

		/// Measure 3: Achievement - Average Points Earned
			// The average number of points earned for all available "Achievement" metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsEarned_Achievement_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsEarned_Achievement_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Earned'&chr(39);

			let vMM_Avg_PointsEarned_Achievement_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsEarned_Achievement_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Earned'&chr(39);

		/// Measure 3: Achievement - Average Percent Earned %
			// vMM_Avg_PercScore_Achievement_3Year_Current 
			

		/// Measure 4: Achievement - Average Tier
			// The average tier for the "Achievement" achievement domain for the previous 3 years (< 0.25 = '&chr(39)&'Intervene'&chr(39)&', < 0.50 = '&chr(39)&'Watch'&chr(39)&', < .75 = '&chr(39)&'Reinforce'&chr(39)&', >= '&chr(39)&'Model'&chr(39)&'). Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_Tier_Achievement_3Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',	
				If('&chr(36)&'(vMM_Avg_PercScore_Achievement_3Year_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&')))	
				)';
			let vLab_Avg_Tier_Achievement_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier'&chr(39);

			let vMM_Avg_Tier_Achievement_4Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',	
				If('&chr(36)&'(vMM_Avg_PercScore_Achievement_4Year_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&')))	
				)';
			let vLab_Avg_Tier_Achievement_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier'&chr(39);


		/// Measure 5: Achievement - # of reports in "model" or "reinforce"
			// The number of reports at the "Model" and "Reinforce" tier withing the "Achievement" domain.
			let vMM_Count_Reports_ModelReinforce_Achievement_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_ModelReinforce_Achievement_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': # of "Model" and "Reinforce" School Reports'&chr(39);
		
			let vMM_Count_Reports_ModelReinforce_Achievement_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Achievement"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Achievement"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_ModelReinforce_Achievement_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&': # of "Model" and "Reinforce" School Reports'&chr(39);
		
		
		/// Color
			let vCol_YearEnd = 'If(YearEnd = 2018, '&chr(39)&'#398635'&chr(39)&', If(YearEnd = 2017, '&chr(39)&'#737373'&chr(39)&', If(YearEnd = 2016, '&chr(39)&'#BDBDBD'&chr(39)&', '&chr(39)&'#F0F0F0'&chr(39)&')))';


	//// Bar Chart (right)
		/// Title
			let vTitle_Avg_PercScore_Achievement_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_AchievementOrMetric) & '&chr(39)&' Percent Earned'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_Achievement_Current = chr(39)&''&chr(39);	

		/// Measure 1
			// The percent of possible points earned for all available "Achievement" metrics in the most current year. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_AchievementToMetric_Current = 'Num(
				IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	Avg(Aggr(Sum({<IsSum={0}, [Domain_Name]={"Achievement"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned]) / Sum({<IsSum={0}, [Domain_Name]={"Achievement"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible]), [%SchoolReportYearKey]))
		              ,
		            Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={"Achievement"}>}[Percent Earned in Domain])
		        ) + 0.0001					
				, '&chr(39)&'#0.#%'&chr(39)&')';
			
			let vLab_Avg_PercScore_AchievementToMetric_Current = 'IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	'&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in Achievement Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		              ,
		            '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in Achievement Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		        )';

		/// Color: vMM_Avg_PercScore_AchievementToMetric_Current 
			let vCol_Avg_PercScore_AchievementToMetric_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_AchievementToMetric_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_AchievementToMetric_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_AchievementToMetric_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_AchievementToMetric_Current) >= 0.75, rgb(0,112,192)))))';

///// Progress Domain Sheet
	
	let vText_ProgressOrMetric = 'If(GetSelectedCount([Metric_Name]) = 1,
			GetFieldSelections([Metric_Name]),
			'&chr(39)&'Progress'&chr(39)&'
		)';

	let vCalc_ProgressOrMetric = 'If('&chr(36)&'(vExpr_NoMetricSelected) or '&chr(36)&'(vExpr_SingleMetricSelected) and WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*Progress*'&chr(39)&'), 1, 0)';

	let vCalcDisplay_ProgressOrMetric = 'If('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'You have multiple metrics selected. Please select only one.'&chr(39)&',
			If('&chr(36)&'(vExpr_SingleMetricSelected) and Not(WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*Progress*'&chr(39)&')), 
				'&chr(39)&'The metric you have selected is within the '&chr(39)&' & Concat(distinct [Domain_Name], '&chr(39)&', '&chr(39)&') &'&chr(39)&' domain. Please select a Progress metric.'&chr(39)&'))';


	//// Line Graph (top-left) - shows last 3 years of performance in the Progress domain, drill to metrics
		/// Title
			let vTitle_Avg_PercScore_Progress_3Year_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&' Percent Earned for Previous 3 Years'&chr(39);

			let vTitle_Avg_PercScore_Progress_4Year_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&' Percent Earned for Previous 4 Years'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_Progress_3Year_Current = chr(39)&''&chr(39);

			let vSubTitle_Avg_PercScore_Progress_4Year_Current = chr(39)&''&chr(39);

		/// Measure 1
			// The average percent of possible points earned for all available "Progress" metrics in the previous 3 years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_Progress_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Percent Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]) / Sum({<[Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), [%SchoolReportYearKey]))
				) + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_Progress_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
			let vMM_Avg_PercScore_Progress_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Percent Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned]) / Sum({<[Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), [%SchoolReportYearKey]))
				) + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_Progress_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
		/// Color
			let vCol_Avg_PercScore_Progress_3Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current) < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current) >= 0.75, rgb(0,112,192)))))';

			let vCol_Avg_PercScore_Progress_4Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current) < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current) >= 0.75, rgb(0,112,192)))))';

		// min max
			let vMin_Avg_PercScore_Progress_3Year_Current = 'RangeMax(0, Floor(Min(Aggr('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current), Year)) * 10) / 10)'; 
			let vMax_Avg_PercScore_Progress_3Year_Current = 'RangeMin(1, Ceil(Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current), Year)) * 10) / 10)';

			let vMin_Avg_PercScore_Progress_4Year_Current = 'RangeMax(0, Floor(Min(Aggr('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current), Year)) * 10) / 10)'; 
			let vMax_Avg_PercScore_Progress_4Year_Current = 'RangeMin(1, Ceil(Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current), Year)) * 10) / 10)';

	
	//// Table (bottom-left)
		/// Measure 1: Progress - # of reports
			// The number of "Progress" reports in the most recent three years.
			let vMM_Count_Reports_Progress_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Points Possible in Domain] = {">0"}, [Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Points Possible] = {">0"}, [Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_Progress_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': # of School Reports'&chr(39);
			
			let vMM_Count_Reports_Progress_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Points Possible in Domain] = {">0"}, [Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Points Possible] = {">0"}, [Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_Progress_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': # of School Reports'&chr(39);
			
		/// Measure 2: Progress - Average Points Possible
			// The average number of total possible points for all available "Progress" metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsPossible_Progress_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsPossible_Progress_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Possible'&chr(39);

			let vMM_Avg_PointsPossible_Progress_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Possible in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Possible]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsPossible_Progress_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Possible'&chr(39);

		/// Measure 3: Progress - Average Points Earned
			// The average number of points earned for all available "Progress" metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsEarned_Progress_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsEarned_Progress_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Earned'&chr(39);

			let vMM_Avg_PointsEarned_Progress_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsEarned_Progress_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Earned'&chr(39);

		/// Measure 3: Progress - Average Percent Earned %
			// vMM_Avg_PercScore_Progress_3Year_Current 
			

		/// Measure 4: Progress - Average Tier
			// The average tier for the "Progress" achievement domain for the previous 3 years (< 0.25 = '&chr(39)&'Intervene'&chr(39)&', < 0.50 = '&chr(39)&'Watch'&chr(39)&', < .75 = '&chr(39)&'Reinforce'&chr(39)&', >= '&chr(39)&'Model'&chr(39)&'). Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_Tier_Progress_3Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',	
				If('&chr(36)&'(vMM_Avg_PercScore_Progress_3Year_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&')))	
				)';
			let vLab_Avg_Tier_Progress_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier'&chr(39);

			let vMM_Avg_Tier_Progress_4Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',	
				If('&chr(36)&'(vMM_Avg_PercScore_Progress_4Year_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&')))	
				)';
			let vLab_Avg_Tier_Progress_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier'&chr(39);


		/// Measure 5: Progress - # of reports in "model" or "reinforce"
			// The number of reports at the "Model" and "Reinforce" tier withing the "Progress" domain.
			let vMM_Count_Reports_ModelReinforce_Progress_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_ModelReinforce_Progress_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': # of "Model" and "Reinforce" School Reports'&chr(39);
		
			let vMM_Count_Reports_ModelReinforce_Progress_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Progress"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Progress"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_ModelReinforce_Progress_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&': # of "Model" and "Reinforce" School Reports'&chr(39);
		
		
		/// Color
			let vCol_YearEnd = 'If(YearEnd = 2018, '&chr(39)&'#398635'&chr(39)&', If(YearEnd = 2017, '&chr(39)&'#737373'&chr(39)&', If(YearEnd = 2016, '&chr(39)&'#BDBDBD'&chr(39)&', '&chr(39)&'#F0F0F0'&chr(39)&')))';


	//// Bar Chart (right)
		/// Title
			let vTitle_Avg_PercScore_Progress_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ProgressOrMetric) & '&chr(39)&' Percent Earned'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_Progress_Current = chr(39)&''&chr(39);	

		/// Measure 1
			// The percent of possible points earned for all available "Progress" metrics in the most current year. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_ProgressToMetric_Current = 'Num(
				IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	Avg(Aggr(Sum({<IsSum={0}, [Domain_Name]={"Progress"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned]) / Sum({<IsSum={0}, [Domain_Name]={"Progress"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible]), [%SchoolReportYearKey]))
		              ,
		            Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={"Progress"}>}[Percent Earned in Domain])
		        ) + 0.0001					
				, '&chr(39)&'#0.#%'&chr(39)&')';
			
			let vLab_Avg_PercScore_ProgressToMetric_Current = 'IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	'&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in Progress Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		              ,
		            '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in Progress Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		        )';

		/// Color:
			let vCol_Avg_PercScore_ProgressToMetric_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_ProgressToMetric_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_ProgressToMetric_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_ProgressToMetric_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_ProgressToMetric_Current) >= 0.75, rgb(0,112,192)))))';

///// Climate Domain Sheet
	
	let vText_ClimateOrMetric = 'If(GetSelectedCount([Metric_Name]) = 1,
			GetFieldSelections([Metric_Name]),
			'&chr(39)&'Climate'&chr(39)&'
		)';

	let vCalc_ClimateOrMetric = 'If('&chr(36)&'(vExpr_NoMetricSelected) or '&chr(36)&'(vExpr_SingleMetricSelected) and WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*Climate*'&chr(39)&'), 1, 0)';

	let vCalcDisplay_ClimateOrMetric = 'If('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'You have multiple metrics selected. Please select only one.'&chr(39)&',
			If('&chr(36)&'(vExpr_SingleMetricSelected) and Not(WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*Climate*'&chr(39)&')), 
				'&chr(39)&'The metric you have selected is within the '&chr(39)&' & Concat(distinct [Domain_Name], '&chr(39)&', '&chr(39)&') &'&chr(39)&' domain. Please select a Climate metric.'&chr(39)&'))';

	//// Line Graph (top-left) - shows last 3 years of performance in the Climate domain, drill to metrics
		/// Title
			let vTitle_Avg_PercScore_Climate_3Year_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&' Percent Earned for Previous 3 Years'&chr(39);

			let vTitle_Avg_PercScore_Climate_4Year_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&' Percent Earned for Previous 4 Years'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_Climate_3Year_Current = chr(39)&''&chr(39);

			let vSubTitle_Avg_PercScore_Climate_4Year_Current = chr(39)&''&chr(39);

		/// Measure 1
			// The average percent of possible points earned for all available "Climate" metrics in the previous 3 years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_Climate_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Percent Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]) / Sum({<[Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), [%SchoolReportYearKey]))
				) + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_Climate_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
			let vMM_Avg_PercScore_Climate_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Percent Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned]) / Sum({<[Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), [%SchoolReportYearKey]))
				) + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_Climate_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
		/// Color
			let vCol_Avg_PercScore_Climate_3Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current) < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current) >= 0.75, rgb(0,112,192)))))';

			let vCol_Avg_PercScore_Climate_4Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current) < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current) >= 0.75, rgb(0,112,192)))))';

		// min max
			let vMin_Avg_PercScore_Climate_3Year_Current = 'RangeMax(0, Floor(Min(Aggr('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current), Year)) * 10) / 10)'; 
			let vMax_Avg_PercScore_Climate_3Year_Current = 'RangeMin(1, Ceil(Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current), Year)) * 10) / 10)';

			let vMin_Avg_PercScore_Climate_4Year_Current = 'RangeMax(0, Floor(Min(Aggr('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current), Year)) * 10) / 10)'; 
			let vMax_Avg_PercScore_Climate_4Year_Current = 'RangeMin(1, Ceil(Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current), Year)) * 10) / 10)';

	
	//// Table (bottom-left)
		/// Measure 1: Climate - # of reports
			// The number of "Climate" reports in the most recent three years.
			let vMM_Count_Reports_Climate_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Points Possible in Domain] = {">0"}, [Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Points Possible] = {">0"}, [Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_Climate_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': # of School Reports'&chr(39);
			
			let vMM_Count_Reports_Climate_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Points Possible in Domain] = {">0"}, [Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Points Possible] = {">0"}, [Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_Climate_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': # of School Reports'&chr(39);
			
		/// Measure 2: Climate - Average Points Possible
			// The average number of total possible points for all available "Climate" metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsPossible_Climate_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsPossible_Climate_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Possible'&chr(39);

			let vMM_Avg_PointsPossible_Climate_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Possible in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Possible]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsPossible_Climate_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Possible'&chr(39);

		/// Measure 3: Climate - Average Points Earned
			// The average number of points earned for all available "Climate" metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsEarned_Climate_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsEarned_Climate_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Earned'&chr(39);

			let vMM_Avg_PointsEarned_Climate_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsEarned_Climate_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Earned'&chr(39);

		/// Measure 3: Climate - Average Percent Earned %
			// vMM_Avg_PercScore_Climate_3Year_Current 
			

		/// Measure 4: Climate - Average Tier
			// The average tier for the "Climate" achievement domain for the previous 3 years (< 0.25 = '&chr(39)&'Intervene'&chr(39)&', < 0.50 = '&chr(39)&'Watch'&chr(39)&', < .75 = '&chr(39)&'Reinforce'&chr(39)&', >= '&chr(39)&'Model'&chr(39)&'). Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_Tier_Climate_3Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',	
				If('&chr(36)&'(vMM_Avg_PercScore_Climate_3Year_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&'))))';

			let vLab_Avg_Tier_Climate_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier'&chr(39);

			let vMM_Avg_Tier_Climate_4Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
				If('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',	
				If('&chr(36)&'(vMM_Avg_PercScore_Climate_4Year_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&'))))';

			let vLab_Avg_Tier_Climate_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier'&chr(39);


		/// Measure 5: Climate - # of reports in "model" or "reinforce"
			// The number of reports at the "Model" and "Reinforce" tier withing the "Climate" domain.
			let vMM_Count_Reports_ModelReinforce_Climate_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_ModelReinforce_Climate_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': # of "Model" and "Reinforce" School Reports'&chr(39);
		
			let vMM_Count_Reports_ModelReinforce_Climate_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Climate"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"Climate"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_ModelReinforce_Climate_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&': # of "Model" and "Reinforce" School Reports'&chr(39);
		
		
		/// Color
			let vCol_YearEnd = 'If(YearEnd = 2018, '&chr(39)&'#398635'&chr(39)&', If(YearEnd = 2017, '&chr(39)&'#737373'&chr(39)&', If(YearEnd = 2016, '&chr(39)&'#BDBDBD'&chr(39)&', '&chr(39)&'#F0F0F0'&chr(39)&')))';


	//// Bar Chart (right)
		/// Title
			let vTitle_Avg_PercScore_Climate_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_ClimateOrMetric) & '&chr(39)&' Percent Earned'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_Climate_Current = chr(39)&''&chr(39);	

		/// Measure 1
			// The percent of possible points earned for all available "Climate" metrics in the most current year. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_ClimateToMetric_Current = 'Num(
				IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	Avg(Aggr(Sum({<IsSum={0}, [Domain_Name]={"Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned]) / Sum({<IsSum={0}, [Domain_Name]={"Climate"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible]), [%SchoolReportYearKey]))
		              ,
		            Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={"Climate"}>}[Percent Earned in Domain])
		        ) + 0.0001					
				, '&chr(39)&'#0.#%'&chr(39)&')';
			
			let vLab_Avg_PercScore_ClimateToMetric_Current = 'IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	'&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in Climate Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		              ,
		            '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in Climate Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		        )';

		/// Color:
			let vCol_Avg_PercScore_ClimateToMetric_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_ClimateToMetric_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_ClimateToMetric_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_ClimateToMetric_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_ClimateToMetric_Current) >= 0.75, rgb(0,112,192)))))';

///// College & Career Domain Sheet
	let vText_CollegeCareerOrMetric = 'If(GetSelectedCount([Metric_Name]) = 1,
			GetFieldSelections([Metric_Name]),
			'&chr(39)&'College & Career'&chr(39)&'
		)';

	let vCalc_CollegeCareerOrMetric = 'If('&chr(36)&'(vExpr_NoMetricSelected) or '&chr(36)&'(vExpr_SingleMetricSelected) and WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*College*'&chr(39)&'), 1, 0)';

	let vCalcDisplay_CollegeCareerOrMetric = 'If('&chr(36)&'(vExpr_MultipleMetricsSelected), '&chr(39)&'You have multiple metrics selected. Please select only one.'&chr(39)&',
			If('&chr(36)&'(vExpr_SingleMetricSelected) and Not(WildMatch(Concat(distinct [Domain_Name]), '&chr(39)&'*College*'&chr(39)&')), 
				'&chr(39)&'The metric you have selected is within the '&chr(39)&' & Concat(distinct [Domain_Name], '&chr(39)&', '&chr(39)&') &'&chr(39)&' domain. Please select a College & Career metric.'&chr(39)&'))';

	//// Line Graph (top-left) - shows last 3 years of performance in the College & Career domain, drill to metrics
		/// Title
			let vTitle_Avg_PercScore_CollegeCareer_3Year_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&' Percent Earned for Previous 3 Years'&chr(39);

			let vTitle_Avg_PercScore_CollegeCareer_4Year_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&' Percent Earned for Previous 4 Years'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_CollegeCareer_3Year_Current = chr(39)&''&chr(39);

			let vSubTitle_Avg_PercScore_CollegeCareer_4Year_Current = chr(39)&''&chr(39);

		/// Measure 1
			// The average percent of possible points earned for all available "College & Career" metrics in the previous 3 years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_CollegeCareer_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Percent Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]) / Sum({<[Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), [%SchoolReportYearKey]))
				) + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_CollegeCareer_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
			let vMM_Avg_PercScore_CollegeCareer_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Percent Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned]) / Sum({<[Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), [%SchoolReportYearKey]))
				) + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_CollegeCareer_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
		/// Color
			let vCol_Avg_PercScore_CollegeCareer_3Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current) >= 0.75, rgb(0,112,192)))))';
	
			let vCol_Avg_PercScore_CollegeCareer_4Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current) >= 0.75, rgb(0,112,192)))))';
	
		// min max
			let vMin_Avg_PercScore_CollegeCareer_3Year_Current = 'RangeMax(0, Floor(Min(Aggr('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current), Year)) * 10) / 10)'; 
			let vMax_Avg_PercScore_CollegeCareer_3Year_Current = 'RangeMin(1, Ceil(Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current), Year)) * 10) / 10)';

			let vMin_Avg_PercScore_CollegeCareer_4Year_Current = 'RangeMax(0, Floor(Min(Aggr('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current), Year)) * 10) / 10)'; 
			let vMax_Avg_PercScore_CollegeCareer_4Year_Current = 'RangeMin(1, Ceil(Max(Aggr('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current), Year)) * 10) / 10)';

	//// Table (bottom-left)
		/// Measure 1: College & Career - # of reports
			// The number of "College & Career" reports in the most recent three years.
			let vMM_Count_Reports_CollegeCareer_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Points Possible in Domain] = {">0"}, [Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Points Possible] = {">0"}, [Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_CollegeCareer_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': # of School Reports'&chr(39);
			
			let vMM_Count_Reports_CollegeCareer_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Points Possible in Domain] = {">0"}, [Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Points Possible] = {">0"}, [Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_CollegeCareer_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': # of School Reports'&chr(39);
			
		/// Measure 2: College & Career - Average Points Possible
			// The average number of total possible points for all available "College & Career" metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsPossible_CollegeCareer_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Possible]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsPossible_CollegeCareer_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Possible'&chr(39);

			let vMM_Avg_PointsPossible_CollegeCareer_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Possible in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Possible]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsPossible_CollegeCareer_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Possible'&chr(39);

		/// Measure 3: College & Career - Average Points Earned
			// The average number of points earned for all available "College & Career" metrics in the previous three years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PointsEarned_CollegeCareer_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Points Earned]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsEarned_CollegeCareer_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Earned'&chr(39);

			let vMM_Avg_PointsEarned_CollegeCareer_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Avg( {<[Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned in Domain]),
					Avg(Aggr(Sum({<[Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Points Earned]), %SchoolReportYearKey))
				), '&chr(39)&'#0.#'&chr(39)&')';
			let vLab_Avg_PointsEarned_CollegeCareer_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'# of Points Earned'&chr(39);

		/// Measure 3: College & Career - Average Percent Earned %
			// vMM_Avg_PercScore_CollegeCareer_3Year_Current 
			

		/// Measure 4: College & Career - Average Tier
			// The average tier for the "College & Career" achievement domain for the previous 3 years (< 0.25 = '&chr(39)&'Intervene'&chr(39)&', < 0.50 = '&chr(39)&'Watch'&chr(39)&', < .75 = '&chr(39)&'Reinforce'&chr(39)&', >= '&chr(39)&'Model'&chr(39)&'). Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_Tier_CollegeCareer_3Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
					If('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
					If('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',	
					If('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_3Year_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&')))	
				)';
			let vLab_Avg_Tier_CollegeCareer_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier'&chr(39);

			let vMM_Avg_Tier_CollegeCareer_4Year_Current = 'If('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current) < 0.25, '&chr(39)&'Intervene'&chr(39)&',
					If('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current) < 0.5, '&chr(39)&'Watch'&chr(39)&',
					If('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current) < 0.75, '&chr(39)&'Reinforce'&chr(39)&',	
					If('&chr(36)&'(vMM_Avg_PercScore_CollegeCareer_4Year_Current) >= 0.75, '&chr(39)&'Model'&chr(39)&')))	
				)';
			let vLab_Avg_Tier_CollegeCareer_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Tier'&chr(39);

		/// Measure 5: College & Career - # of reports in "model" or "reinforce"
			// The number of reports at the "Model" and "Reinforce" tier withing the "College & Career" domain.
			let vMM_Count_Reports_ModelReinforce_CollegeCareer_3Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_ModelReinforce_CollegeCareer_3Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': # of "Model" and "Reinforce" School Reports'&chr(39);
		
			let vMM_Count_Reports_ModelReinforce_CollegeCareer_4Year_Current = 'Num(
				If('&chr(36)&'(vExpr_NoMetricSelected),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"College & Career"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearDomainKey),
					Count(distinct {<[Tier in Domain] = {"Model", "Reinforce"}, [Domain_Name] = {"College & Career"}, IsSum = {0}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}%SchoolReportYearKey)
				), '&chr(39)&'#,##0'&chr(39)&')';
			let vLab_Count_Reports_ModelReinforce_CollegeCareer_4Year_Current = chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&': # of "Model" and "Reinforce" School Reports'&chr(39);
		
		
		/// Color
			let vCol_YearEnd = 'If(YearEnd = 2018, '&chr(39)&'#398635'&chr(39)&', If(YearEnd = 2017, '&chr(39)&'#737373'&chr(39)&', If(YearEnd = 2016, '&chr(39)&'#BDBDBD'&chr(39)&', '&chr(39)&'#F0F0F0'&chr(39)&')))';


	//// Bar Chart (right)
		/// Title
			let vTitle_Avg_PercScore_CollegeCareer_Current = chr(36)&'(vText_AverageOrSingle) & '&chr(39)&''&chr(39)&' & '&chr(36)&'(vText_CollegeCareerOrMetric) & '&chr(39)&' Percent Earned'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_CollegeCareer_Current = chr(39)&''&chr(39);	

		/// Measure 1
			// The percent of possible points earned for all available "College & Career" metrics in the most current year. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_CollegeCareerToMetric_Current = 'Num(
				IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	Avg(Aggr(Sum({<IsSum={0}, [Domain_Name]={"College & Career"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Earned]) / Sum({<IsSum={0}, [Domain_Name]={"College & Career"}, YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}>}[Points Possible]), [%SchoolReportYearKey]))
		              ,
		            Avg({<YearEnd={'&chr(36)&'(='&chr(36)&'(v_Max_YearEnd))}, [Domain_Name]={"College & Career"}>}[Percent Earned in Domain])
		        ) + 0.0001					
				, '&chr(39)&'#0.#%'&chr(39)&')';
			
			let vLab_Avg_PercScore_CollegeCareerToMetric_Current = 'IF('&chr(36)&'(vExpr_MultipleMetricsSelected),
		        	'&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in College & Career Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		              ,
		            '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned in College & Career Domain ('&chr(39)&'& '&chr(36)&'(v_Max_Year) &'&chr(39)&')'&chr(39)&'
		        )';

		/// Color:
			let vCol_Avg_PercScore_CollegeCareerToMetric_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareerToMetric_Current) < 0.25, rgb(192,80,77),
					IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareerToMetric_Current) < 0.5, rgb(247,150,70),
					IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareerToMetric_Current)  < 0.75, rgb(0,176,80),
					IF('&chr(36)&'(vMM_Avg_PercScore_CollegeCareerToMetric_Current) >= 0.75, rgb(0,112,192)))))';

///// Educator Effectiveness Domain Sheet
	//// Line Graph (top-left) - shows last 3 years of performance in the College & Career domain, drill to metrics
		/// Title
			let vTitle_Avg_PercScore_EducatorEffectiveness_3Year_Current = chr(39)&'Each Educator Effectiveness Percent Earned for Previous 3 Years'&chr(39);

			let vTitle_Avg_PercScore_EducatorEffectiveness_4Year_Current = chr(39)&'Each Educator Effectiveness Percent Earned for Previous 4 Years'&chr(39);

		/// SubTitle
			let vSubTitle_Avg_PercScore_EducatorEffectiveness_3Year_Current = chr(39)&''&chr(39);

			let vSubTitle_Avg_PercScore_EducatorEffectiveness_4Year_Current = chr(39)&''&chr(39);

		/// Measure 1
			// The average percent of possible points earned for all available "College & Career" metrics in the previous 3 years. Without selections this defaults to the domain level. If a single domain is selected this will display individual metrics.
			let vMM_Avg_PercScore_EducatorEffectiveness_3Year_Current = 'Num(
				Avg( {<[Domain_Name] = {"Educator Effectiveness"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLast_YearEnd))"}>}[Percent Earned for Metric])
				 + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_EducatorEffectiveness_3Year_Current = chr(39)&'Educator Effectiveness: '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
			let vMM_Avg_PercScore_EducatorEffectiveness_4Year_Current = 'Num(
				Avg( {<[Domain_Name] = {"Educator Effectiveness"}, YearEnd={">='&chr(36)&'(='&chr(36)&'(v_LastLastLast_YearEnd))"}>}[Percent Earned for Metric])
				 + 0.0001, '&chr(39)&'#0%'&chr(39)&')';

			let vLab_Avg_PercScore_EducatorEffectiveness_4Year_Current = chr(39)&'Educator Effectiveness: '&chr(39)&' & '&chr(36)&'(vText_AverageOrSingle) & '&chr(39)&'Percent Earned'&chr(39);	
			
		/// Color
			let vCol_Avg_PercScore_EducatorEffectiveness_3Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_EducatorEffectiveness_3Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_EducatorEffectiveness_3Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_EducatorEffectiveness_3Year_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_EducatorEffectiveness_3Year_Current) >= 0.75, rgb(0,112,192)))))';
		
			let vCol_Avg_PercScore_EducatorEffectiveness_4Year_Current = 'IF('&chr(36)&'(vMM_Avg_PercScore_EducatorEffectiveness_4Year_Current) < 0.25, rgb(192,80,77),
				IF('&chr(36)&'(vMM_Avg_PercScore_EducatorEffectiveness_4Year_Current) < 0.5, rgb(247,150,70),
				IF('&chr(36)&'(vMM_Avg_PercScore_EducatorEffectiveness_4Year_Current)  < 0.75, rgb(0,176,80),
				IF('&chr(36)&'(vMM_Avg_PercScore_EducatorEffectiveness_4Year_Current) >= 0.75, rgb(0,112,192)))))';
	
